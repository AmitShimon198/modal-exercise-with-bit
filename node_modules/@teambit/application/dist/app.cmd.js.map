{"version":3,"sources":["app.cmd.ts"],"names":["AppListCmd","constructor","applicationAspect","report","args","json","apps","listApps","JSON","stringify","length","chalk","yellow","rows","map","app","name","table","CLITable","render","AppCmd"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAJA;AAEA;AAKO,MAAMA,UAAN,CAAoC;AAOzCC,EAAAA,WAAW,CAASC,iBAAT,EAA6C;AAAA,SAApCA,iBAAoC,GAApCA,iBAAoC;AAAA,kDANjD,MAMiD;AAAA,yDAL1C,kCAK0C;AAAA,mDAJhD,EAIgD;AAAA,mDAHhD,MAGgD;AAAA,qDAF9C,CAAC,CAAC,GAAD,EAAM,MAAN,EAAc,0CAAd,CAAD,CAE8C;AAAE;;AAE9C,QAANC,MAAM,CAACC,IAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAA8C;AACxD,UAAMC,IAAI,GAAG,KAAKJ,iBAAL,CAAuBK,QAAvB,EAAb;AACA,QAAIF,IAAJ,EAAU,OAAOG,IAAI,CAACC,SAAL,CAAeH,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAP;AACV,QAAI,CAACA,IAAI,CAACI,MAAV,EAAkB,OAAOC,iBAAMC,MAAN,CAAa,eAAb,CAAP;AAElB,UAAMC,IAAI,GAAGP,IAAI,CAACQ,GAAL,CAAUC,GAAD,IAAS;AAC7B,aAAO,CAACA,GAAG,CAACC,IAAL,CAAP;AACD,KAFY,CAAb;AAIA,UAAMC,KAAK,GAAG,KAAIC,oBAAJ,EAAa,EAAb,EAAiBL,IAAjB,CAAd;AACA,WAAOI,KAAK,CAACE,MAAN,EAAP;AACD;;AApBwC;;;;AAuBpC,MAAMC,MAAN,CAAgC;AAAA;AAAA,kDAC9B,mBAD8B;AAAA,yDAEvB,qBAFuB;AAAA,mDAG7B,EAH6B;AAAA,mDAI7B,MAJ6B;AAAA,sDAKf,EALe;AAAA,qDAM3B,EAN2B;AAAA;;AAQrC;AACY,QAANjB,MAAM,CAACC,IAAD,EAAiB;AAC3B;AACA,WAAQ,8BAAR;AACD;;AAZoC","sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { Command, CommandOptions } from '@teambit/cli';\n// import { Logger } from '@teambit/logger';\nimport chalk from 'chalk';\nimport { CLITable } from '@teambit/cli-table';\nimport { ApplicationMain } from './application.main.runtime';\n\nexport class AppListCmd implements Command {\n  name = 'list';\n  description = 'list all registered applications';\n  alias = '';\n  group = 'apps';\n  options = [['j', 'json', 'return the component data in json format']] as CommandOptions;\n\n  constructor(private applicationAspect: ApplicationMain) {}\n\n  async report(args: [string], { json }: { json: boolean }) {\n    const apps = this.applicationAspect.listApps();\n    if (json) return JSON.stringify(apps, null, 2);\n    if (!apps.length) return chalk.yellow('no apps found');\n\n    const rows = apps.map((app) => {\n      return [app.name];\n    });\n\n    const table = new CLITable([], rows);\n    return table.render();\n  }\n}\n\nexport class AppCmd implements Command {\n  name = 'app <sub-command>';\n  description = 'manage applications';\n  alias = '';\n  group = 'apps';\n  commands: Command[] = [];\n  options = [] as CommandOptions;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async report(args: [string]) {\n    // it should never be here. Yargs throws an error before reaching this method.\n    return `Please specify a sub-command`;\n  }\n}\n"]}