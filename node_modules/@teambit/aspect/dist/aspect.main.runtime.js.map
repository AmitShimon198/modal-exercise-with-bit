{"version":3,"sources":["aspect.main.runtime.ts"],"names":["AspectMain","constructor","aspectEnv","envs","compose","transformers","provider","react","builder","aspectLoader","compiler","babel","generator","merge","AspectEnv","reactEnv","coreExporterTask","CoreExporterTask","__dirname","includes","registerBuildTasks","registerEnv","registerComponentTemplate","aspectTemplate","MainRuntime","ReactAspect","EnvsAspect","BuilderAspect","AspectLoaderAspect","CompilerAspect","BabelAspect","GeneratorAspect","AspectAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,UAAN,CAAiB;AACtBC,EAAAA,WAAW,CAAUC,SAAV,EAAwCC,IAAxC,EAAwD;AAAA,SAA9CD,SAA8C,GAA9CA,SAA8C;AAAA,SAAhBC,IAAgB,GAAhBA,IAAgB;AAAE;AAErE;AACF;AACA;;;AACEC,EAAAA,OAAO,CAACC,YAA8B,GAAG,EAAlC,EAAsC;AAC3C,WAAO,KAAKF,IAAL,CAAUC,OAAV,CAAkB,KAAKF,SAAvB,EAAkCG,YAAlC,CAAP;AACD;;AAaoB,eAARC,QAAQ,CAAC,CAACC,KAAD,EAAQJ,IAAR,EAAcK,OAAd,EAAuBC,YAAvB,EAAqCC,QAArC,EAA+CC,KAA/C,EAAsDC,SAAtD,CAAD,EAQlB;AACD,UAAMV,SAAS,GAAGC,IAAI,CAACU,KAAL,CAAsB,KAAIC,oBAAJ,EAAcP,KAAK,CAACQ,QAApB,EAA8BJ,KAA9B,EAAqCD,QAArC,CAAtB,EAAsEH,KAAK,CAACQ,QAA5E,CAAlB;AACA,UAAMC,gBAAgB,GAAG,KAAIC,gCAAJ,EAAqBf,SAArB,EAAgCO,YAAhC,CAAzB;;AACA,QAAI,CAACS,SAAS,CAACC,QAAV,CAAmB,cAAnB,CAAL,EAAyC;AACvCX,MAAAA,OAAO,CAACY,kBAAR,CAA2B,CAACJ,gBAAD,CAA3B;AACD;;AAEDb,IAAAA,IAAI,CAACkB,WAAL,CAAiBnB,SAAjB;AACAU,IAAAA,SAAS,CAACU,yBAAV,CAAoC,CAACC,yBAAD,CAApC;AACA,WAAO,IAAIvB,UAAJ,CAAeE,SAAf,EAA0BC,IAA1B,CAAP;AACD;;AAvCqB;;;gCAAXH,U,aAUMwB,kB;gCAVNxB,U,kBAWW,CACpByB,oBADoB,EAEpBC,kBAFoB,EAGpBC,wBAHoB,EAIpBC,kCAJoB,EAKpBC,0BALoB,EAMpBC,oBANoB,EAOpBC,4BAPoB,C;;AA+BxBC,uBAAaC,UAAb,CAAwBjC,UAAxB","sourcesContent":["import { AspectLoaderAspect, AspectLoaderMain } from '@teambit/aspect-loader';\nimport { BuilderAspect, BuilderMain } from '@teambit/builder';\nimport { MainRuntime } from '@teambit/cli';\nimport { EnvsAspect, EnvsMain, EnvTransformer } from '@teambit/envs';\nimport { ReactAspect, ReactMain } from '@teambit/react';\nimport { GeneratorAspect, GeneratorMain } from '@teambit/generator';\nimport { BabelAspect, BabelMain } from '@teambit/babel';\nimport { CompilerAspect, CompilerMain } from '@teambit/compiler';\nimport { AspectAspect } from './aspect.aspect';\nimport { AspectEnv } from './aspect.env';\nimport { CoreExporterTask } from './core-exporter.task';\nimport { aspectTemplate } from './templates/aspect';\n\nexport class AspectMain {\n  constructor(readonly aspectEnv: AspectEnv, private envs: EnvsMain) {}\n\n  /**\n   * compose your own aspect environment.\n   */\n  compose(transformers: EnvTransformer[] = []) {\n    return this.envs.compose(this.aspectEnv, transformers);\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    ReactAspect,\n    EnvsAspect,\n    BuilderAspect,\n    AspectLoaderAspect,\n    CompilerAspect,\n    BabelAspect,\n    GeneratorAspect,\n  ];\n\n  static async provider([react, envs, builder, aspectLoader, compiler, babel, generator]: [\n    ReactMain,\n    EnvsMain,\n    BuilderMain,\n    AspectLoaderMain,\n    CompilerMain,\n    BabelMain,\n    GeneratorMain\n  ]) {\n    const aspectEnv = envs.merge<AspectEnv>(new AspectEnv(react.reactEnv, babel, compiler), react.reactEnv);\n    const coreExporterTask = new CoreExporterTask(aspectEnv, aspectLoader);\n    if (!__dirname.includes('@teambit/bit')) {\n      builder.registerBuildTasks([coreExporterTask]);\n    }\n\n    envs.registerEnv(aspectEnv);\n    generator.registerComponentTemplate([aspectTemplate]);\n    return new AspectMain(aspectEnv, envs);\n  }\n}\n\nAspectAspect.addRuntime(AspectMain);\n"]}