{"version":3,"sources":["dev-server.graphql.ts"],"names":["devServerSchema","bundler","typeDefs","resolvers","Component","server","component","componentServer","getComponentServer","env","context","envRuntime","id","url"],"mappings":";;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AACO,SAASA,eAAT,CAAyBC,OAAzB,EAAuD;AAC5D,SAAO;AACLC,IAAAA,QAAQ,EAAE,kBAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVS;AAWLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAGC,SAAD,IAA0B;AAChC,gBAAMC,eAAe,GAAGN,OAAO,CAACO,kBAAR,CAA2BF,SAA3B,CAAxB;AACA,cAAI,CAACC,eAAL,EAAsB,OAAO,EAAP;AAEtB,iBAAO;AACLE,YAAAA,GAAG,EAAEF,eAAe,CAACG,OAAhB,CAAwBC,UAAxB,CAAmCC,EADnC;AAELC,YAAAA,GAAG,EAAEN,eAAe,CAACM;AAFhB,WAAP;AAID;AATQ;AADF;AAXN,GAAP;AAyBD","sourcesContent":["import { Component } from '@teambit/component';\nimport { Schema } from '@teambit/graphql';\nimport { gql } from '@apollo/client';\n\nimport { BundlerMain } from './bundler.main.runtime';\n\n// TODO: this has to be refactored to the Preview aspect. with the entire preview logic here.\nexport function devServerSchema(bundler: BundlerMain): Schema {\n  return {\n    typeDefs: gql`\n      extend type Component {\n        server: ComponentServer\n      }\n\n      type ComponentServer {\n        env: String\n        url: String\n      }\n    `,\n    resolvers: {\n      Component: {\n        server: (component: Component) => {\n          const componentServer = bundler.getComponentServer(component);\n          if (!componentServer) return {};\n\n          return {\n            env: componentServer.context.envRuntime.id,\n            url: componentServer.url,\n          };\n        },\n      },\n    },\n  };\n}\n"]}