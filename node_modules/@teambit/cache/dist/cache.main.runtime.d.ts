import { Logger, LoggerMain } from '@teambit/logger';
export declare type CacheConfig = {
    cacheDirectory: string;
};
export declare class CacheMain {
    readonly config: CacheConfig;
    private readonly logger;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    constructor(config: CacheConfig, logger: Logger);
    static dependencies: import("@teambit/harmony").Aspect[];
    static defaultConfig: {
        cacheDirectory: string;
    };
    set(key: string, data: any, ttl?: number): Promise<boolean>;
    get<T>(key: string): Promise<T | undefined>;
    private get globalCacheFolder();
    static provider([loggerFactory]: [LoggerMain], config: CacheConfig): Promise<CacheMain>;
}
