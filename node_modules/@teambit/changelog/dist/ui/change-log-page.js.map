{"version":3,"sources":["change-log-page.tsx"],"names":["ChangeLogPage","className","component","ComponentContext","snaps","loading","id","length","styles","changeLogPage","title","separatorNoChangeLog","changeLogCard","latestVersion","tag","hash","separator","map","snap","index","isLatest","fullName"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAIO,SAASA,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0D;AAAA;;AAC/D,QAAMC,SAAS,GAAG,yBAAWC,6BAAX,CAAlB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqB,kCAASH,SAAS,CAACI,EAAnB,CAA3B;AAEA,MAAI,CAACF,KAAL,EAAY,OAAO,IAAP;;AAEZ,MAAIA,KAAK,CAACG,MAAN,KAAiB,CAAjB,IAAsB,CAACF,OAA3B,EAAoC;AAClC,wBACE;AAAK,MAAA,SAAS,EAAE,2BAAWG,+BAAOC,aAAlB,EAAiCR,SAAjC;AAAhB,oBACE,+BAAC,kBAAD;AAAI,MAAA,SAAS,EAAEO,+BAAOE;AAAtB,iBADF,eAEE,+BAAC,qBAAD;AAAW,MAAA,gBAAgB,MAA3B;AAA4B,MAAA,SAAS,EAAEF,+BAAOG;AAA9C,MAFF,eAGE,+BAAC,sBAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAC,qGAFR;AAIE,MAAA,SAAS,EAAEH,+BAAOI;AAJpB,oBAME,+BAAC,kBAAD,qBACE,+BAAC,4CAAD,OADF,CANF,CAHF,CADF;AAgBD;;AAED,QAAMC,aAAa,GAAG,YAAAT,KAAK,CAAC,CAAD,CAAL,oDAAUU,GAAV,kBAAiBV,KAAK,CAAC,CAAD,CAAtB,6CAAiB,SAAUW,IAA3B,CAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE,2BAAWP,+BAAOC,aAAlB,EAAiCR,SAAjC;AAAhB,kBACE,+BAAC,kBAAD;AAAI,IAAA,SAAS,EAAEO,+BAAOE;AAAtB,eADF,eAEE,+BAAC,qBAAD;AAAW,IAAA,gBAAgB,MAA3B;AAA4B,IAAA,SAAS,EAAEF,+BAAOQ;AAA9C,IAFF,EAGGZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,UAAMC,QAAQ,GAAGP,aAAa,KAAKK,IAAI,CAACJ,GAAvB,IAA8BD,aAAa,KAAKK,IAAI,CAACH,IAAtE;AACA,wBAAO,+BAAC,2BAAD;AAAc,MAAA,GAAG,EAAEI,KAAnB;AAA0B,MAAA,WAAW,EAAEjB,SAAS,CAACI,EAAV,CAAae,QAApD;AAA8D,MAAA,QAAQ,EAAED,QAAxE;AAAkF,MAAA,IAAI,EAAEF;AAAxF,MAAP;AACD,GAHA,CAHH,CADF;AAUD","sourcesContent":["import { ComponentContext } from '@teambit/component';\nimport { H1 } from '@teambit/documenter.ui.heading';\nimport { Separator } from '@teambit/design.ui.separator';\nimport { VersionBlock } from '@teambit/component.ui.version-block';\nimport classNames from 'classnames';\nimport { useSnaps } from '@teambit/component.ui.hooks.use-snaps';\nimport { MDXLayout } from '@teambit/mdx.ui.mdx-layout';\nimport { ExportingComponents } from '@teambit/component.instructions.exporting-components';\nimport { AlertCard } from '@teambit/design.ui.alert-card';\nimport React, { HTMLAttributes, useContext } from 'react';\n\nimport styles from './change-log-page.module.scss';\n\ntype ChangeLogPageProps = {} & HTMLAttributes<HTMLDivElement>;\n\nexport function ChangeLogPage({ className }: ChangeLogPageProps) {\n  const component = useContext(ComponentContext);\n  const { snaps, loading } = useSnaps(component.id);\n\n  if (!snaps) return null;\n\n  if (snaps.length === 0 && !loading) {\n    return (\n      <div className={classNames(styles.changeLogPage, className)}>\n        <H1 className={styles.title}>History</H1>\n        <Separator isPresentational className={styles.separatorNoChangeLog} />\n        <AlertCard\n          level=\"info\"\n          title=\"There is no change log as this component has not been exported yet.\n          Learn how to export components:\"\n          className={styles.changeLogCard}\n        >\n          <MDXLayout>\n            <ExportingComponents />\n          </MDXLayout>\n        </AlertCard>\n      </div>\n    );\n  }\n\n  const latestVersion = snaps[0]?.tag || snaps[0]?.hash;\n\n  return (\n    <div className={classNames(styles.changeLogPage, className)}>\n      <H1 className={styles.title}>History</H1>\n      <Separator isPresentational className={styles.separator} />\n      {snaps.map((snap, index) => {\n        const isLatest = latestVersion === snap.tag || latestVersion === snap.hash;\n        return <VersionBlock key={index} componentId={component.id.fullName} isLatest={isLatest} snap={snap} />;\n      })}\n    </div>\n  );\n}\n"]}