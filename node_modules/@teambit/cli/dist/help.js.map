{"version":3,"sources":["help.ts"],"names":["SPACE","TITLE_LEFT_SPACES_NUMBER","COMMAND_LEFT_SPACES_NUMBER","NAME_WITH_SPACES_LENGTH","formatHelp","commands","groups","helpProps","groupCommands","commandsStr","formatCommandsHelp","getHeader","getFooter","help","filter","command","private","shortDescription","description","reduce","partialHelp","groupName","group","cmdId","name","Object","keys","map","commandsSectionTemplate","join","section","titleSpace","repeat","title","chalk","underline","bold","blue","cmdName","commandTemplate","res","nameSpace","nameWithRightSpace","green","yellow"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport rightpad from 'pad-right';\nimport { capitalize } from 'lodash';\nimport { GroupsType } from '@teambit/legacy/dist/cli/command-groups';\nimport { CommandList } from './cli.main.runtime';\nimport { getCommandId } from './get-command-id';\n\nconst SPACE = ' ';\nconst TITLE_LEFT_SPACES_NUMBER = 2;\nconst COMMAND_LEFT_SPACES_NUMBER = 4;\nconst NAME_WITH_SPACES_LENGTH = 15;\n\ntype HelpProps = {\n  [groupName: string]: GroupContent;\n};\n\ntype GroupContent = {\n  commands: { [cmdName: string]: string };\n  description: string;\n};\n\nexport function formatHelp(commands: CommandList, groups: GroupsType) {\n  const helpProps = groupCommands(commands, groups);\n  const commandsStr = formatCommandsHelp(helpProps);\n\n  return `${getHeader()}\n\n${commandsStr}\n\n${getFooter()}`;\n}\n\nfunction groupCommands(commands: CommandList, groups: GroupsType): HelpProps {\n  const help: HelpProps = commands\n    .filter((command) => !command.private && (command.shortDescription || command.description))\n    .reduce(function (partialHelp, command) {\n      const groupName = command.group as string; // at this stage, it must be set\n      partialHelp[groupName] = partialHelp[groupName] || {\n        commands: {},\n        description: groups[groupName] || capitalize(command.group),\n      };\n      const cmdId = getCommandId(command.name);\n      partialHelp[groupName].commands[cmdId] = command.shortDescription || command.description;\n      return partialHelp;\n    }, {});\n  return help;\n}\n\nfunction formatCommandsHelp(helpProps: HelpProps): string {\n  return Object.keys(helpProps)\n    .map((groupName) => commandsSectionTemplate(helpProps[groupName]))\n    .join('\\n\\n');\n}\n\nfunction commandsSectionTemplate(section: GroupContent): string {\n  const titleSpace = SPACE.repeat(TITLE_LEFT_SPACES_NUMBER);\n  const title = `${titleSpace}${chalk.underline.bold.blue(section.description)}`;\n  const commands = Object.keys(section.commands)\n    .map((cmdName) => commandTemplate(cmdName, section.commands[cmdName]))\n    .join('\\n');\n  const res = `${title}\\n${commands}`;\n  return res;\n}\n\nfunction commandTemplate(name: string, description: string): string {\n  const nameSpace = SPACE.repeat(COMMAND_LEFT_SPACES_NUMBER);\n  const nameWithRightSpace = rightpad(name, NAME_WITH_SPACES_LENGTH, SPACE);\n  const res = `${nameSpace}${chalk.green(nameWithRightSpace)}${description}`;\n  return res;\n}\n\nfunction getHeader(): string {\n  return `${chalk.bold('usage: bit [--version] [--help] <command> [<args>]')}\n\n${chalk.yellow('bit documentation: https://harmony-docs.bit.dev')}`;\n}\n\nfunction getFooter(): string {\n  return `${chalk.yellow(\"please use 'bit <command> --help' for more information and guides on specific commands.\")}`;\n}\n"]}