import { ExtensionDataList } from '@teambit/legacy/dist/consumer/config/extension-data';
import { ComponentID } from '@teambit/component-id';
import { AspectEntry, SerializableMap } from './aspect-entry';
export declare class AspectList {
    readonly entries: AspectEntry[];
    constructor(entries: AspectEntry[]);
    addEntry(aspectId: ComponentID, data?: SerializableMap): AspectEntry;
    get ids(): string[];
    get(id: string): AspectEntry | undefined;
    find(id: ComponentID, ignoreVersion?: boolean): AspectEntry | undefined;
    map(predicate: (entry: AspectEntry) => AspectEntry): AspectList;
    pmap(predicate: (entry: AspectEntry) => Promise<AspectEntry>): Promise<AspectList>;
    toConfigObject(): {};
    serialize(): {
        id: string;
        config: {
            [key: string]: any;
        };
        data: {
            [key: string]: any;
        };
        icon: string;
    }[];
    toLegacy(): ExtensionDataList;
    stringIds(): string[];
    static fromLegacyExtensions(legacyDataList: ExtensionDataList, scope?: string): AspectList;
}
