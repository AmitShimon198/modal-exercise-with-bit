{"version":3,"sources":["component.route.ts"],"names":["ComponentRoute","constructor","registerRoute","componentExtension","dynamicRouteRegex","route","method","componentMiddlewares","concat","middlewares","req","res","next","componentId","params","host","getHost","compId","resolveComponentId","component","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIO,MAAMA,cAAN,CAAsC;AAC3CC,EAAAA,WAAW,CAASC,aAAT,EAAuCC,kBAAvC,EAA0E;AAAA,SAAjED,aAAiE,GAAjEA,aAAiE;AAAA,SAAnCC,kBAAmC,GAAnCA,kBAAmC;AAAA,+DACjE,gBADiE;AAAA,mDAEnE,iBAAgB,KAAKC,iBAAkB,YAAW,KAAKF,aAAL,CAAmBG,KAAM,EAFR;AAAA,oDAkB5E,KAAKH,aAAL,CAAmBI,MAlByD;AAAA,yDAmBvE,KAAKC,oBAAL,CAA0BC,MAA1B,CAAiC,KAAKN,aAAL,CAAmBO,WAApD,CAnBuE;AAAE;;AAI/D,MAApBF,oBAAoB,GAAG;AACzB,WAAO,CACL,OAAOG,GAAP,EAAqBC,GAArB,EAAoCC,IAApC,KAA2D;AACzD,YAAM;AAAEC,QAAAA;AAAF,UAAkBH,GAAG,CAACI,MAA5B;AACA,YAAMC,IAAI,GAAG,KAAKZ,kBAAL,CAAwBa,OAAxB,EAAb;AACA,YAAMC,MAAM,GAAG,MAAMF,IAAI,CAACG,kBAAL,CAAwBL,WAAxB,CAArB;AACA,YAAMM,SAAS,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASH,MAAT,CAAxB,CAJyD,CAKzD;;AACAP,MAAAA,GAAG,CAACS,SAAJ,GAAgBA,SAAhB;AACAP,MAAAA,IAAI;AACL,KATI,CAAP;AAWD;;AAjB0C","sourcesContent":["import { NextFunction, Request, Response, Route } from '@teambit/express';\n\nimport { ComponentMain } from './component.main.runtime';\n\nexport class ComponentRoute implements Route {\n  constructor(private registerRoute: Route, private componentExtension: ComponentMain) {}\n  dynamicRouteRegex = '/?[^/@]+/[^~]*';\n  readonly route = `/:componentId(${this.dynamicRouteRegex})/~aspect${this.registerRoute.route}`;\n\n  get componentMiddlewares() {\n    return [\n      async (req: Request, res: Response, next: NextFunction) => {\n        const { componentId } = req.params;\n        const host = this.componentExtension.getHost();\n        const compId = await host.resolveComponentId(componentId);\n        const component = await host.get(compId);\n        // @ts-ignore\n        req.component = component;\n        next();\n      },\n    ];\n  }\n\n  method = this.registerRoute.method;\n  middlewares = this.componentMiddlewares.concat(this.registerRoute.middlewares);\n}\n"]}