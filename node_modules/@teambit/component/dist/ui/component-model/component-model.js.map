{"version":3,"sources":["component-model.ts"],"names":["ComponentModel","constructor","id","displayName","packageName","server","compositions","tags","buildStatus","issuesCount","status","deprecation","environment","description","labels","host","version","from","env","ComponentID","fromObject","Composition","fromArray","TagMap","map","tag","Tag","componentsProps","rawComponent","empty","name","scope","url"],"mappings":"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","sourcesContent":["import { Composition, CompositionProps } from '@teambit/compositions';\nimport { DeprecationInfo } from '@teambit/deprecation';\nimport { Descriptor } from '@teambit/envs';\nimport { ComponentID, ComponentIdObj } from '@teambit/component-id';\n\nimport { Tag } from '../../tag';\nimport { TagMap } from '../../tag-map';\nimport { TagProps } from '../../tag/tag';\n// import { Snap } from '../../snap';\n\n// ADDING MORE PROPERTIES HERE IS NOT ALLOWED!!! IF YOU NEED DATA PLEASE ADD A NEW\n// HOOK FROM YOUR ASPECT!!!\n// TODO: remove all properties from here to their rightful place in their aspects.\nexport type ComponentModelProps = {\n  id: ComponentIdObj;\n  description: string;\n  buildStatus?: string;\n  server?: ComponentServer;\n  displayName: string;\n  packageName: string; // pkg aspect\n  compositions?: CompositionProps[];\n  tags?: TagProps[];\n  issuesCount?: number; // component/issues aspect\n  status?: any; // workspace aspect.\n  deprecation?: DeprecationInfo; // deprecation aspect\n  env?: Descriptor; // env aspect.\n  labels?: string[];\n  host?: string;\n};\n\nexport type ComponentServer = {\n  env: string;\n  url: string;\n};\n\nexport class ComponentModel {\n  constructor(\n    /**\n     * id of the component\n     */\n    readonly id: ComponentID,\n\n    /**\n     * display name of the component.\n     */\n    readonly displayName: string,\n\n    /**\n     * package name of the component.\n     */\n    readonly packageName: string,\n\n    /**\n     * the component server.\n     */\n    readonly server: ComponentServer | undefined,\n\n    /**\n     * array of compositions\n     */\n    readonly compositions: Composition[],\n\n    /**\n     * tags of the component.\n     */\n    readonly tags: TagMap,\n\n    /**\n     * component build status\n     */\n    readonly buildStatus?: string,\n\n    /**\n     * issues of component.\n     */\n    readonly issuesCount?: number,\n    /**\n     * status of component.\n     */\n    readonly status?: any,\n\n    /**\n     * deprecation info of the component.\n     */\n    readonly deprecation?: DeprecationInfo,\n\n    /**\n     * env descriptor.\n     */\n    readonly environment?: Descriptor,\n\n    /**\n     * description of the component.\n     */\n\n    readonly description = '',\n\n    readonly labels: string[] = [],\n\n    /**\n     * host of the component\n     */\n    readonly host?: string\n  ) {}\n\n  get version() {\n    if (!this.id.version) return 'new';\n    return this.id.version;\n  }\n\n  /**\n   * create an instance of a component from a plain object.\n   */\n  static from({\n    id,\n    server,\n    displayName,\n    compositions = [],\n    packageName,\n    tags = [],\n    deprecation,\n    buildStatus,\n    env,\n    status,\n    issuesCount,\n    description,\n    labels,\n    host,\n  }: ComponentModelProps) {\n    return new ComponentModel(\n      ComponentID.fromObject(id),\n      displayName,\n      packageName,\n      server,\n      Composition.fromArray(compositions),\n      TagMap.fromArray(tags.map((tag) => Tag.fromObject(tag))),\n      buildStatus,\n      issuesCount,\n      status,\n      deprecation,\n      env,\n      description,\n      labels,\n      host\n    );\n  }\n\n  static fromArray(componentsProps: ComponentModelProps[]) {\n    return componentsProps.map((rawComponent) => ComponentModel.from(rawComponent));\n  }\n\n  static empty() {\n    return new ComponentModel(\n      ComponentID.fromObject({ name: 'root', scope: 'temp' }),\n      '',\n      '',\n      { env: '', url: '' },\n      [],\n      TagMap.empty()\n    );\n  }\n}\n"]}