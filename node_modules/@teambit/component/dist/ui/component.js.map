{"version":3,"sources":["component.tsx"],"names":["Component","routeSlot","containerSlot","host","onComponentChange","component","error","undefined","pageItems","values","before","filter","x","type","map","content","after","renderError","styles","container"],"mappings":";;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAgBA;AACA;AACA;AACO,SAASA,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,aAAb;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA;AAAlC,CAAnB,EAA0F;AAC/F,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuB,kCAAaH,IAAb,CAA7B,CAD+F,CAE/F;;AACA,0BAAU,MAAMC,iBAAN,aAAMA,iBAAN,uBAAMA,iBAAiB,CAAGC,SAAH,CAAjC,EAAgD,CAACA,SAAD,CAAhD,EAH+F,CAI/F;;AACA,0BAAU,MAAM,MAAMD,iBAAN,aAAMA,iBAAN,uBAAMA,iBAAiB,CAAGG,SAAH,CAAvC,EAAsD,EAAtD;AAEA,QAAMC,SAAS,GAAG,sBAAQ,MAAM,uBAAQN,aAAR,aAAQA,aAAR,uBAAQA,aAAa,CAAEO,MAAf,EAAR,CAAd,EAAgD,CAACP,aAAD,CAAhD,CAAlB;AACA,QAAMQ,MAAM,GAAG,sBAAQ,MAAMF,SAAS,CAACG,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,QAAnC,EAA6CC,GAA7C,CAAkDF,CAAD,IAAOA,CAAC,CAACG,OAA1D,CAAd,EAAkF,CAACP,SAAD,CAAlF,CAAf;AACA,QAAMQ,KAAK,GAAG,sBAAQ,MAAMR,SAAS,CAACG,MAAV,CAAkBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,OAAnC,EAA4CC,GAA5C,CAAiDF,CAAD,IAAOA,CAAC,CAACG,OAAzD,CAAd,EAAiF,CAACP,SAAD,CAAjF,CAAd;AAEA,MAAIF,KAAJ,EAAW,OAAOA,KAAK,CAACW,WAAN,EAAP;AACX,MAAI,CAACZ,SAAL,EAAgB,oBAAO,2CAAP;AAEhB,sBACE,+BAAC,4BAAD;AAAmB,IAAA,SAAS,EAAEA;AAA9B,KACGK,MADH,eAEE;AAAK,IAAA,SAAS,EAAEQ,2BAAOC;AAAvB,KAAmClB,SAAS,iBAAI,+BAAC,0CAAD;AAAe,IAAA,IAAI,EAAEA;AAArB,IAAhD,CAFF,EAGGe,KAHH,CADF;AAOD","sourcesContent":["import React, { useEffect, ReactNode, useMemo } from 'react';\nimport flatten from 'lodash.flatten';\nimport { RouteSlot, SlotSubRouter } from '@teambit/ui-foundation.ui.react-router.slot-router';\nimport { SlotRegistry } from '@teambit/harmony';\n\nimport styles from './component.module.scss';\nimport { ComponentProvider } from './context';\nimport { useComponent } from './use-component';\nimport { ComponentModel } from './component-model';\n\nexport type ComponentPageSlot = SlotRegistry<ComponentPageElement[]>;\nexport type ComponentPageElement = {\n  type: 'before' | 'after';\n  content: ReactNode;\n};\n\nexport type ComponentProps = {\n  containerSlot?: ComponentPageSlot;\n  routeSlot: RouteSlot;\n  host: string;\n  onComponentChange?: (activeComponent?: ComponentModel) => void;\n};\n\n/**\n * main UI component of the Component extension.\n */\nexport function Component({ routeSlot, containerSlot, host, onComponentChange }: ComponentProps) {\n  const { component, error } = useComponent(host);\n  // trigger onComponentChange when component changes\n  useEffect(() => onComponentChange?.(component), [component]);\n  // cleanup when unmounting component\n  useEffect(() => () => onComponentChange?.(undefined), []);\n\n  const pageItems = useMemo(() => flatten(containerSlot?.values()), [containerSlot]);\n  const before = useMemo(() => pageItems.filter((x) => x.type === 'before').map((x) => x.content), [pageItems]);\n  const after = useMemo(() => pageItems.filter((x) => x.type === 'after').map((x) => x.content), [pageItems]);\n\n  if (error) return error.renderError();\n  if (!component) return <div></div>;\n\n  return (\n    <ComponentProvider component={component}>\n      {before}\n      <div className={styles.container}>{routeSlot && <SlotSubRouter slot={routeSlot} />}</div>\n      {after}\n    </ComponentProvider>\n  );\n}\n"]}