{"version":3,"sources":["composition.ts"],"names":["Composition","constructor","identifier","filepath","displayName","toObject","fromArray","compositions","map","composition"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOO,MAAMA,WAAN,CAAkB;AACvBC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,UAJA;AAMT;AACJ;AACA;AACaC,EAAAA,QATA,EAUT;AAAA,SANSD,UAMT,GANSA,UAMT;AAAA,SADSC,QACT,GADSA,QACT;AAAE;;AAEW,MAAXC,WAAW,GAAG;AAChB,WAAO,gDAAsB,KAAKF,UAA3B,CAAP;AACD;;AAEDG,EAAAA,QAAQ,GAAG;AACT,WAAO;AACLH,MAAAA,UAAU,EAAE,KAAKA,UADZ;AAELC,MAAAA,QAAQ,EAAE,KAAKA;AAFV,KAAP;AAID;;AAEe,SAATG,SAAS,CAACC,YAAD,EAAkD;AAChE,WAAOA,YAAY,CAACC,GAAb,CAAkBC,WAAD,IAAiB;AACvC,aAAO,IAAIT,WAAJ,CAAgBS,WAAW,CAACP,UAA5B,EAAwCO,WAAW,CAACN,QAApD,CAAP;AACD,KAFM,CAAP;AAGD;;AA5BsB","sourcesContent":["import { humanizeCompositionId } from '@teambit/compositions.model.composition-id';\n\nexport type CompositionProps = {\n  identifier: string;\n  filepath?: string;\n};\n\nexport class Composition {\n  constructor(\n    /**\n     * identifier of the composition\n     */\n    readonly identifier: string,\n\n    /**\n     * file path in which the composition is contained.\n     */\n    readonly filepath?: string\n  ) {}\n\n  get displayName() {\n    return humanizeCompositionId(this.identifier);\n  }\n\n  toObject() {\n    return {\n      identifier: this.identifier,\n      filepath: this.filepath,\n    };\n  }\n\n  static fromArray(compositions: CompositionProps[]): Composition[] {\n    return compositions.map((composition) => {\n      return new Composition(composition.identifier, composition.filepath);\n    });\n  }\n}\n"]}