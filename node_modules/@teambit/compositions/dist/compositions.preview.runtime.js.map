{"version":3,"sources":["compositions.preview.runtime.ts"],"names":["CompositionsPreview","constructor","preview","render","componentId","modules","otherPreviewDefs","context","componentMap","compositions","selectPreviewModel","active","getActiveComposition","mainModule","default","previewModule","files","combined","Object","assign","module","chosen","window","location","hash","split","first","values","provider","compPreview","registerPreview","name","bind","PreviewRuntime","PreviewAspect","CompositionsAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,mBAAN,CAA0B;AAC/BC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,OAJC,EAKT;AAAA,SADQA,OACR,GADQA,OACR;AAAE;;AAEJC,EAAAA,MAAM,CAACC,WAAD,EAAsBC,OAAtB,EAA8CC,gBAA9C,EAAgEC,OAAhE,EAA2F;AAC/F,QAAI,CAACF,OAAO,CAACG,YAAR,CAAqBJ,WAArB,CAAL,EAAwC;AAExC,UAAMK,YAAY,GAAG,KAAKC,kBAAL,CAAwBN,WAAxB,EAAqCC,OAArC,CAArB;AACA,UAAMM,MAAM,GAAG,KAAKC,oBAAL,CAA0BH,YAA1B,CAAf;AAEAJ,IAAAA,OAAO,CAACQ,UAAR,CAAmBC,OAAnB,CAA2BH,MAA3B,EAAmCJ,OAAnC;AACD;AAED;;;AACAG,EAAAA,kBAAkB,CAACN,WAAD,EAAsBW,aAAtB,EAAoD;AACpE,UAAMC,KAAK,GAAGD,aAAa,CAACP,YAAd,CAA2BJ,WAA3B,KAA2C,EAAzD,CADoE,CAGpE;;AACA,UAAMa,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGH,KAArB,CAAjB;AACA,WAAOC,QAAP;AACD;;AAEOL,EAAAA,oBAAoB,CAACQ,MAAD,EAAqB;AAC/C,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAf;;AAEA,QAAI,CAACJ,MAAL,EAAa;AACX,YAAMK,KAAK,GAAG,uBAAKR,MAAM,CAACS,MAAP,CAAcP,MAAd,CAAL,CAAd;AACA,aAAOM,KAAP;AACD;;AAED,WAAON,MAAM,CAACC,MAAD,CAAb;AACD;;AAMoB,eAARO,QAAQ,CAAC,CAAC1B,OAAD,CAAD,EAA8B;AACjD,UAAM2B,WAAW,GAAG,IAAI7B,mBAAJ,CAAwBE,OAAxB,CAApB;AACAA,IAAAA,OAAO,CAAC4B,eAAR,CAAwB;AACtBC,MAAAA,IAAI,EAAE,cADgB;AAEtB5B,MAAAA,MAAM,EAAE0B,WAAW,CAAC1B,MAAZ,CAAmB6B,IAAnB,CAAwBH,WAAxB,CAFc;AAGtBnB,MAAAA,kBAAkB,EAAEmB,WAAW,CAACnB,kBAAZ,CAA+BsB,IAA/B,CAAoCH,WAApC,CAHE;AAItBf,MAAAA,OAAO,EAAE;AAJa,KAAxB;AAOA,WAAOe,WAAP;AACD;;AAnD8B;;;gCAApB7B,mB,aAqCMiC,yB;gCArCNjC,mB,kBAuCW,CAACkC,wBAAD,C;;AAexBC,mCAAmBC,UAAnB,CAA8BpC,mBAA9B","sourcesContent":["import {\n  PreviewAspect,\n  PreviewPreview,\n  RenderingContext,\n  PreviewRuntime,\n  PreviewModule,\n  ModuleFile,\n} from '@teambit/preview';\nimport head from 'lodash.head';\n\nimport { CompositionsAspect } from './compositions.aspect';\n\nexport class CompositionsPreview {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewPreview\n  ) {}\n\n  render(componentId: string, modules: PreviewModule, otherPreviewDefs, context: RenderingContext) {\n    if (!modules.componentMap[componentId]) return;\n\n    const compositions = this.selectPreviewModel(componentId, modules);\n    const active = this.getActiveComposition(compositions);\n\n    modules.mainModule.default(active, context);\n  }\n\n  /** gets relevant information for this preview to render */\n  selectPreviewModel(componentId: string, previewModule: PreviewModule) {\n    const files = previewModule.componentMap[componentId] || [];\n\n    // allow compositions to come from many files. It is assumed they will have unique named\n    const combined = Object.assign({}, ...files);\n    return combined;\n  }\n\n  private getActiveComposition(module: ModuleFile) {\n    const chosen = window.location.hash.split('&')[1];\n\n    if (!chosen) {\n      const first = head(Object.values(module));\n      return first;\n    }\n\n    return module[chosen];\n  }\n\n  static runtime = PreviewRuntime;\n\n  static dependencies = [PreviewAspect];\n\n  static async provider([preview]: [PreviewPreview]) {\n    const compPreview = new CompositionsPreview(preview);\n    preview.registerPreview({\n      name: 'compositions',\n      render: compPreview.render.bind(compPreview),\n      selectPreviewModel: compPreview.selectPreviewModel.bind(compPreview),\n      default: true,\n    });\n\n    return compPreview;\n  }\n}\n\nCompositionsAspect.addRuntime(CompositionsPreview);\n"]}