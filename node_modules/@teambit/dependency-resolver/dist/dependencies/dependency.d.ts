import type { DependencySource } from '../policy/variant-policy/variant-policy';
export declare type DependencyLifecycleType = 'runtime' | 'dev' | 'peer';
export interface SerializedDependency {
    id: string;
    version: string;
    __type: string;
    lifecycle: string;
    source?: DependencySource;
}
export declare type SemverVersion = string;
export declare type PackageName = string;
export declare type DependencyManifest = {
    packageName: PackageName;
    version: SemverVersion;
};
export interface Dependency {
    id: string;
    version: string;
    type: string;
    lifecycle: DependencyLifecycleType;
    source?: DependencySource;
    serialize: <T extends SerializedDependency>() => T;
    setVersion: (newVersion: string) => void;
    toManifest: () => DependencyManifest;
    getPackageName?: () => string;
}
