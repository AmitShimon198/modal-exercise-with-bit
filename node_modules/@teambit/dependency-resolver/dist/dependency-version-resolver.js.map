{"version":3,"sources":["dependency-version-resolver.ts"],"names":["DEFAULT_REMOTE_RESOLVE_VERSIONS","fetchToCache","update","DependencyVersionResolver","constructor","packageManager","cacheRootDir","resolveRemoteVersion","packageName","options","calculatedOpts","Object","assign","resolved"],"mappings":";;;;;;;;AAIA,MAAMA,+BAA+B,GAAG;AACtCC,EAAAA,YAAY,EAAE,IADwB;AAEtCC,EAAAA,MAAM,EAAE;AAF8B,CAAxC;;AAKO,MAAMC,yBAAN,CAAgC;AACrCC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,cAJC,EAMDC,YANC,EAOT;AAAA,SAHQD,cAGR,GAHQA,cAGR;AAAA,SADQC,YACR,GADQA,YACR;AAAE;;AAEsB,QAApBC,oBAAoB,CACxBC,WADwB,EAExBC,OAFwB,EAGS;AACjC;AACA,UAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CACrB,EADqB,EAErBZ,+BAFqB,EAGrB;AAAEM,MAAAA,YAAY,EAAE,KAAKA;AAArB,KAHqB,EAIrBG,OAJqB,CAAvB,CAFiC,CAQjC;;AACA,UAAMI,QAAQ,GAAG,MAAM,KAAKR,cAAL,CAAoBE,oBAApB,CAAyCC,WAAzC,EAAsDE,cAAtD,CAAvB;AACA,WAAOG,QAAP;AACD;;AAxBoC","sourcesContent":["import { PathAbsolute } from '@teambit/legacy/dist/utils/path';\n\nimport { PackageManager, PackageManagerResolveRemoteVersionOptions, ResolvedPackageVersion } from './package-manager';\n\nconst DEFAULT_REMOTE_RESOLVE_VERSIONS = {\n  fetchToCache: true,\n  update: true,\n};\n\nexport class DependencyVersionResolver {\n  constructor(\n    /**\n     * package manager instance.\n     */\n    private packageManager: PackageManager,\n\n    private cacheRootDir?: string | PathAbsolute\n  ) {}\n\n  async resolveRemoteVersion(\n    packageName: string,\n    options: PackageManagerResolveRemoteVersionOptions\n  ): Promise<ResolvedPackageVersion> {\n    // Make sure to take other default if passed options with only one option\n    const calculatedOpts = Object.assign(\n      {},\n      DEFAULT_REMOTE_RESOLVE_VERSIONS,\n      { cacheRootDir: this.cacheRootDir },\n      options\n    );\n    // TODO: the cache should be probably passed to the package manager constructor not to the install function\n    const resolved = await this.packageManager.resolveRemoteVersion(packageName, calculatedOpts);\n    return resolved;\n  }\n}\n"]}