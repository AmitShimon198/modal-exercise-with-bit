{"version":3,"sources":["workspace-manifest.ts"],"names":["WorkspaceManifest","Manifest","constructor","name","version","dependencies","rootDir","componentsManifestsMap","dir","getComponentMap","toJson","options","manifest","includeDir"],"mappings":";;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMO,MAAMA,iBAAN,SAAgCC,oBAAhC,CAAyC;AAC9CC,EAAAA,WAAW,EACT;AACOC,EAAAA,IAFE,EAGFC,OAHE,EAIFC,YAJE,EAKDC,OALC,EAMFC,sBANE,EAOT;AACA,UAAMJ,IAAN,EAAYC,OAAZ,EAAqBC,YAArB;AADA,SALOF,IAKP,GALOA,IAKP;AAAA,SAJOC,OAIP,GAJOA,OAIP;AAAA,SAHOC,YAGP,GAHOA,YAGP;AAAA,SAFQC,OAER,GAFQA,OAER;AAAA,SADOC,sBACP,GADOA,sBACP;AAED;;AAEM,MAAHC,GAAG,GAAG;AACR,WAAO,KAAKF,OAAZ;AACD;;AAEDG,EAAAA,eAAe,GAAG,CAAE;;AAEpBC,EAAAA,MAAM,CAACC,OAAuC,GAAG,EAA3C,EAAoE;AACxE,UAAMC,QAAQ,GAAG,MAAMF,MAAN,CAAaC,OAAb,CAAjB;;AACA,QAAIA,OAAO,CAACE,UAAZ,EAAwB;AACtB,aAAO;AACLP,QAAAA,OAAO,EAAE,KAAKE,GADT;AAELI,QAAAA;AAFK,OAAP;AAID;;AACD,WAAOA,QAAP;AACD;;AA3B6C","sourcesContent":["import { SemVer } from 'semver';\n\nimport { ComponentsManifestsMap } from '../types';\nimport { Manifest, ManifestToJsonOptions, ManifestDependenciesObject } from './manifest';\n\nexport interface WorkspaceManifestToJsonOptions extends ManifestToJsonOptions {\n  includeDir?: boolean;\n}\n\nexport class WorkspaceManifest extends Manifest {\n  constructor(\n    // TODO: please prefer readonly on public\n    public name: string,\n    public version: SemVer,\n    public dependencies: ManifestDependenciesObject,\n    private rootDir: string,\n    public componentsManifestsMap: ComponentsManifestsMap\n  ) {\n    super(name, version, dependencies);\n  }\n\n  get dir() {\n    return this.rootDir;\n  }\n\n  getComponentMap() {}\n\n  toJson(options: WorkspaceManifestToJsonOptions = {}): Record<string, any> {\n    const manifest = super.toJson(options);\n    if (options.includeDir) {\n      return {\n        rootDir: this.dir,\n        manifest,\n      };\n    }\n    return manifest;\n  }\n}\n"]}