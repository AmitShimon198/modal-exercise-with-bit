{"version":3,"sources":["doc-prop-list.ts"],"names":["DocPropList","constructor","docProps","get","name","find","docProp","from","object","props","Object","keys","map","key","undefined","DocProp","filter","prop"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,WAAN,CAAkB;AACvBC,EAAAA,WAAW,CAAUC,QAAV,EAA+B;AAAA,SAArBA,QAAqB,GAArBA,QAAqB;AAAE;;AAE5CC,EAAAA,GAAG,CAACC,IAAD,EAAe;AAChB,WAAO,KAAKF,QAAL,CAAcG,IAAd,CAAoBC,OAAD,IAAaA,OAAO,CAACF,IAAR,KAAiBA,IAAjD,CAAP;AACD;;AAEU,SAAJG,IAAI,CAACC,MAAD,EAA2B;AACpC,UAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACXI,GADW,CACNC,GAAD,IAAS;AACZ,UAAI,CAACL,MAAM,CAACK,GAAD,CAAX,EAAkB,OAAOC,SAAP;AAClB,aAAO,KAAIC,kBAAJ,EAAYF,GAAZ,EAAiBL,MAAM,CAACK,GAAD,CAAvB,CAAP;AACD,KAJW,EAKXG,MALW,CAKHC,IAAD,IAAU,CAAC,CAACA,IALR,CAAd;AAOA,WAAO,IAAIjB,WAAJ,CAAgBS,KAAhB,CAAP;AACD;;AAhBsB","sourcesContent":["import { DocProp } from './doc-prop';\n\nexport class DocPropList {\n  constructor(readonly docProps: DocProp[]) {}\n\n  get(name: string) {\n    return this.docProps.find((docProp) => docProp.name === name);\n  }\n\n  static from(object: any): DocPropList {\n    const props = Object.keys(object)\n      .map((key) => {\n        if (!object[key]) return undefined;\n        return new DocProp(key, object[key]);\n      })\n      .filter((prop) => !!prop) as DocProp[];\n\n    return new DocPropList(props);\n  }\n}\n"]}