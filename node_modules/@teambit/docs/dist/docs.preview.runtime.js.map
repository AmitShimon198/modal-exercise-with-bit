{"version":3,"sources":["docs.preview.runtime.tsx"],"names":["DocsPreview","constructor","preview","componentId","modules","compositions","context","docsModule","selectPreviewModel","mainModule","default","NoopProvider","relevant","componentMap","undefined","provider","docsPreview","registerPreview","name","render","bind","include","PreviewRuntime","PreviewAspect","DocsAspect","addRuntime","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,WAAN,CAAkB;AACvBC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,OAJC,EAKT;AAAA,SADQA,OACR,GADQA,OACR;AAAA,oDAEO,CAACC,WAAD,EAAsBC,OAAtB,EAA8C,CAACC,YAAD,CAA9C,EAAqEC,OAArE,KAAmG;AAC1G,YAAMC,UAAU,GAAG,KAAKC,kBAAL,CAAwBL,WAAxB,EAAqCC,OAArC,CAAnB;AAEAA,MAAAA,OAAO,CAACK,UAAR,CAAmBC,OAAnB,CAA2BC,YAA3B,EAAyCR,WAAzC,EAAsDI,UAAtD,EAAkEF,YAAlE,EAAgFC,OAAhF;AACD,KANC;AAAE;;AAQJE,EAAAA,kBAAkB,CAACL,WAAD,EAAsBC,OAAtB,EAA8C;AAC9D,UAAMQ,QAAQ,GAAGR,OAAO,CAACS,YAAR,CAAqBV,WAArB,CAAjB;AACA,QAAI,CAACS,QAAL,EAAe,OAAOE,SAAP,CAF+C,CAI9D;;AACA,WAAOF,QAAQ,CAAC,CAAD,CAAf;AACD;;AAKoB,eAARG,QAAQ,CAAC,CAACb,OAAD,CAAD,EAA8B;AACjD,UAAMc,WAAW,GAAG,IAAIhB,WAAJ,CAAgBE,OAAhB,CAApB;AACAA,IAAAA,OAAO,CAACe,eAAR,CAAwB;AACtBC,MAAAA,IAAI,EAAE,UADgB;AAEtBC,MAAAA,MAAM,EAAEH,WAAW,CAACG,MAAZ,CAAmBC,IAAnB,CAAwBJ,WAAxB,CAFc;AAGtBR,MAAAA,kBAAkB,EAAEQ,WAAW,CAACR,kBAAZ,CAA+BY,IAA/B,CAAoCJ,WAApC,CAHE;AAItBK,MAAAA,OAAO,EAAE,CAAC,cAAD;AAJa,KAAxB;AAOA,WAAOL,WAAP;AACD;;AAnCsB;;;gCAAZhB,W,aAsBMsB,yB;gCAtBNtB,W,kBAuBW,CAACuB,wBAAD,C;;AAexBC,mBAAWC,UAAX,CAAsBzB,WAAtB;;AAEA,SAASW,YAAT,CAAsB;AAAEe,EAAAA;AAAF,CAAtB,EAA6D;AAC3D,sBAAO,gEAAGA,QAAH,CAAP;AACD","sourcesContent":["import React, { ReactNode } from 'react';\nimport { PreviewAspect, RenderingContext, PreviewPreview, PreviewRuntime, PreviewModule } from '@teambit/preview';\n\nimport { DocsAspect } from './docs.aspect';\n\nexport class DocsPreview {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewPreview\n  ) {}\n\n  render = (componentId: string, modules: PreviewModule, [compositions]: [any], context: RenderingContext) => {\n    const docsModule = this.selectPreviewModel(componentId, modules);\n\n    modules.mainModule.default(NoopProvider, componentId, docsModule, compositions, context);\n  };\n\n  selectPreviewModel(componentId: string, modules: PreviewModule) {\n    const relevant = modules.componentMap[componentId];\n    if (!relevant) return undefined;\n\n    // only one doc file is supported.\n    return relevant[0];\n  }\n\n  static runtime = PreviewRuntime;\n  static dependencies = [PreviewAspect];\n\n  static async provider([preview]: [PreviewPreview]) {\n    const docsPreview = new DocsPreview(preview);\n    preview.registerPreview({\n      name: 'overview',\n      render: docsPreview.render.bind(docsPreview),\n      selectPreviewModel: docsPreview.selectPreviewModel.bind(docsPreview),\n      include: ['compositions'],\n    });\n\n    return docsPreview;\n  }\n}\n\nDocsAspect.addRuntime(DocsPreview);\n\nfunction NoopProvider({ children }: { children: ReactNode }) {\n  return <>{children}</>;\n}\n"]}