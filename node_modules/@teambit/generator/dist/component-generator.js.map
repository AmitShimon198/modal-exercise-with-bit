{"version":3,"sources":["component-generator.ts"],"names":["ComponentGenerator","constructor","workspace","componentIds","options","template","envs","generate","dirsToDeleteIfFailed","generateResults","componentId","componentPath","getComponentPath","fs","existsSync","path","join","BitError","hasName","fullName","push","generateOneComponent","err","deleteGeneratedComponents","writeBitMap","dirs","Promise","all","map","dir","absoluteDir","remove","code","name","namePascalCase","pascalCase","nameCamelCase","files","generateFiles","mainFile","find","file","isMain","writeComponentFiles","addResults","track","rootDir","relativePath","componentName","component","get","env","getEnv","id","envId","templateFiles","dataToPersist","DataToPersist","vinylFiles","templateFile","templateFileVinyl","Vinyl","base","contents","Buffer","from","content","AbstractVinyl","fromVinyl","results","v","addManyFiles","addBasePath","persistAllToFS","_legacy","changeScope","scope","defaultDirectory"],"mappings":"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","sourcesContent":["import Vinyl from 'vinyl';\nimport fs from 'fs-extra';\nimport pMapSeries from 'p-map-series';\nimport path from 'path';\nimport { Workspace } from '@teambit/workspace';\nimport { EnvsMain } from '@teambit/envs';\nimport camelcase from 'camelcase';\nimport { BitError } from '@teambit/bit-error';\nimport { PathOsBasedRelative } from '@teambit/legacy/dist/utils/path';\nimport { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\nimport DataToPersist from '@teambit/legacy/dist/consumer/component/sources/data-to-persist';\nimport { composeComponentPath } from '@teambit/legacy/dist/utils/bit/compose-component-path';\nimport { ComponentID } from '@teambit/component-id';\nimport { ComponentTemplate, ComponentFile } from './component-template';\nimport { CreateOptions } from './create.cmd';\n\nexport type GenerateResult = { id: ComponentID; dir: string; files: string[]; envId: string };\n\nexport class ComponentGenerator {\n  constructor(\n    private workspace: Workspace,\n    private componentIds: ComponentID[],\n    private options: CreateOptions,\n    private template: ComponentTemplate,\n    private envs: EnvsMain\n  ) {}\n\n  async generate(): Promise<GenerateResult[]> {\n    const dirsToDeleteIfFailed: string[] = [];\n    const generateResults = await pMapSeries(this.componentIds, async (componentId) => {\n      try {\n        const componentPath = this.getComponentPath(componentId);\n        if (fs.existsSync(path.join(this.workspace.path, componentPath))) {\n          throw new BitError(`unable to create a component at \"${componentPath}\", this path already exist`);\n        }\n        if (await this.workspace.hasName(componentId.fullName)) {\n          throw new BitError(\n            `unable to create a component \"${componentId.fullName}\", a component with the same name already exist`\n          );\n        }\n        dirsToDeleteIfFailed.push(componentPath);\n        return await this.generateOneComponent(componentId, componentPath);\n      } catch (err: any) {\n        await this.deleteGeneratedComponents(dirsToDeleteIfFailed);\n        throw err;\n      }\n    });\n\n    await this.workspace.writeBitMap();\n\n    return generateResults;\n  }\n\n  private async deleteGeneratedComponents(dirs: string[]) {\n    await Promise.all(\n      dirs.map(async (dir) => {\n        const absoluteDir = path.join(this.workspace.path, dir);\n        try {\n          await fs.remove(absoluteDir);\n        } catch (err: any) {\n          if (err.code !== 'ENOENT') {\n            // if not exist, it's fine\n            throw err;\n          }\n        }\n      })\n    );\n  }\n\n  private async generateOneComponent(componentId: ComponentID, componentPath: string): Promise<GenerateResult> {\n    const name = componentId.name;\n    const namePascalCase = camelcase(name, { pascalCase: true });\n    const nameCamelCase = camelcase(name);\n    const files = this.template.generateFiles({ name, namePascalCase, nameCamelCase, componentId });\n    const mainFile = files.find((file) => file.isMain);\n    await this.writeComponentFiles(componentPath, files);\n    const addResults = await this.workspace.track({\n      rootDir: componentPath,\n      mainFile: mainFile?.relativePath,\n      componentName: componentId.fullName,\n    });\n    const component = await this.workspace.get(componentId);\n    const env = this.envs.getEnv(component);\n    return {\n      id: componentId,\n      dir: componentPath,\n      files: addResults.files,\n      envId: env.id,\n    };\n  }\n\n  /**\n   * writes the generated template files to the default directory set in the workspace config\n   */\n  private async writeComponentFiles(\n    componentPath: string,\n    templateFiles: ComponentFile[]\n  ): Promise<PathOsBasedRelative[]> {\n    const dataToPersist = new DataToPersist();\n    const vinylFiles = templateFiles.map((templateFile) => {\n      const templateFileVinyl = new Vinyl({\n        base: componentPath,\n        path: path.join(componentPath, templateFile.relativePath),\n        contents: Buffer.from(templateFile.content),\n      });\n      return AbstractVinyl.fromVinyl(templateFileVinyl);\n    });\n    const results = vinylFiles.map((v) => v.path);\n    dataToPersist.addManyFiles(vinylFiles);\n    dataToPersist.addBasePath(this.workspace.path);\n    await dataToPersist.persistAllToFS();\n    return results;\n  }\n\n  private getComponentPath(componentId: ComponentID) {\n    if (this.options.path) return this.options.path;\n    return composeComponentPath(componentId._legacy.changeScope(componentId.scope), this.workspace.defaultDirectory);\n  }\n}\n"]}