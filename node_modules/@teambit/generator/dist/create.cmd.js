"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreateCmd = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _chalk() {
  const data = _interopRequireDefault(require("chalk"));

  _chalk = function () {
    return data;
  };

  return data;
}

class CreateCmd {
  constructor(generator) {
    this.generator = generator;
    (0, _defineProperty2().default)(this, "name", 'create <templateName> <componentNames...>');
    (0, _defineProperty2().default)(this, "description", 'create a new component from a template');
    (0, _defineProperty2().default)(this, "shortDescription", '');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "loader", true);
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "options", [['n', 'namespace <string>', `sets the component's namespace and nested dirs inside the scope`], ['s', 'scope <string>', `sets the component's scope-name. if not entered, the default-scope will be used`], ['a', 'aspect <string>', 'aspect-id of the template. helpful when multiple aspects use the same template name'], ['p', 'path <string>', 'relative path in the workspace. by default the path is `<scope>/<namespace>/<name>`']]);
  }

  async report([templateName, componentNames], options) {
    const results = await this.generator.generateComponentTemplate(componentNames, templateName, options);
    const title = `the following ${results.length} component(s) were created`;
    const componentsData = results.map(result => {
      return `${_chalk().default.bold(result.id.toString())}
    location: ${result.dir}
    env:      ${result.envId}
`;
    }).join('\n');
    const footer = `env configuration is according to workspace variants. learn more at https://harmony-docs.bit.dev/building-with-bit/environments/#configure-environment-for-components`;
    return `${_chalk().default.green(title)}\n\n${componentsData}\n\n${footer}`;
  }

}

exports.CreateCmd = CreateCmd;

//# sourceMappingURL=create.cmd.js.map