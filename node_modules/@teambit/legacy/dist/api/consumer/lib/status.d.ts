import { BitId, BitIds } from '../../../bit-id';
import Component from '../../../consumer/component';
import { DivergedComponent } from '../../../consumer/component/components-list';
import { InvalidComponent } from '../../../consumer/component/consumer-component';
import { ModelComponent } from '../../../scope/models';
export declare type StatusResult = {
    newComponents: Component[];
    modifiedComponent: Component[];
    stagedComponents: ModelComponent[];
    componentsWithIssues: Component[];
    importPendingComponents: BitId[];
    autoTagPendingComponents: BitId[];
    invalidComponents: InvalidComponent[];
    outdatedComponents: Component[];
    mergePendingComponents: DivergedComponent[];
    componentsDuringMergeState: BitIds;
    componentsWithIndividualFiles: Component[];
    componentsWithTrackDirs: Component[];
    softTaggedComponents: BitId[];
    snappedComponents: BitId[];
};
export default function status(): Promise<StatusResult>;
