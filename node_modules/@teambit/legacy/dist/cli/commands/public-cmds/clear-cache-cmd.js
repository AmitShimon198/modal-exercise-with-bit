"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _chalk() {
  const data = _interopRequireDefault(require("chalk"));

  _chalk = function () {
    return data;
  };

  return data;
}

function _consumer() {
  const data = require("../../../api/consumer");

  _consumer = function () {
    return data;
  };

  return data;
}

function _constants() {
  const data = require("../../../constants");

  _constants = function () {
    return data;
  };

  return data;
}

class ClearCache {
  constructor() {
    (0, _defineProperty2().default)(this, "name", 'clear-cache');
    (0, _defineProperty2().default)(this, "shortDescription", "clears Bit's cache from current working machine");
    (0, _defineProperty2().default)(this, "group", 'general');
    (0, _defineProperty2().default)(this, "description", `clears bit's cache from current working machine.
The following gets removed by this command:
1) V8 compiled code (generated the first time Bit is loaded by v8-compile-cache package)
2) components cache on the filesystem (mainly the dependencies graph and docs)
3) scope's index file, which maps the component-id:object-hash
https://${_constants().BASE_DOCS_DOMAIN}/docs/workspace#cache`);
    (0, _defineProperty2().default)(this, "alias", 'cc');
    (0, _defineProperty2().default)(this, "opts", []);
    (0, _defineProperty2().default)(this, "loader", false);
    (0, _defineProperty2().default)(this, "skipWorkspace", true);
  }

  async action() {
    return (0, _consumer().clearCache)();
  }

  report(cacheCleared) {
    const title = 'the following cache(s) have been cleared:';
    const output = cacheCleared.map(str => `  âœ” ${str}`).join('\n');
    return _chalk().default.green(`${_chalk().default.bold(title)}\n${output}`);
  }

}

exports.default = ClearCache;