import { ApplyVersionResult, ApplyVersionResults } from '../../../consumer/versions-ops/merge-version';
import { CommandOptions, LegacyCommand } from '../../legacy-command';
import { Group } from '../../command-groups';
export declare const applyVersionReport: (components: ApplyVersionResult[], addName?: boolean, showVersion?: boolean) => string;
export default class Merge implements LegacyCommand {
    name: string;
    shortDescription: string;
    group: Group;
    description: string;
    alias: string;
    opts: CommandOptions;
    loader: boolean;
    action([values]: [string[]], { ours, theirs, manual, abort, resolve, build, noSnap, message, }: {
        ours?: boolean;
        theirs?: boolean;
        manual?: boolean;
        abort?: boolean;
        resolve?: boolean;
        build?: boolean;
        noSnap?: boolean;
        message: string;
    }): Promise<ApplyVersionResults>;
    report({ components, failedComponents, version, resolvedComponents, abortedComponents, mergeSnapResults, }: ApplyVersionResults): string;
}
export declare function mergeReport({ components, failedComponents, version, mergeSnapResults }: ApplyVersionResults): string;
