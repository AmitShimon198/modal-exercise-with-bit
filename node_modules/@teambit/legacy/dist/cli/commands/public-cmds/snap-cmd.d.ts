import { SnapResults } from '../../../api/consumer/lib/snap';
import { CommandOptions, LegacyCommand } from '../../legacy-command';
export declare const NOTHING_TO_SNAP_MSG = "nothing to snap";
export declare const AUTO_SNAPPED_MSG = "auto-snapped dependents";
export default class Snap implements LegacyCommand {
    name: string;
    description: string;
    alias: string;
    opts: CommandOptions;
    loader: boolean;
    private: boolean;
    migration: boolean;
    action([id]: string[], { message, all, force, verbose, ignoreIssues, build, skipTests, skipAutoSnap, disableSnapPipeline, forceDeploy, }: {
        message?: string;
        all?: boolean;
        force?: boolean;
        verbose?: boolean;
        ignoreIssues?: boolean;
        build?: boolean;
        skipTests?: boolean;
        skipAutoSnap?: boolean;
        disableSnapPipeline?: boolean;
        forceDeploy?: boolean;
    }): Promise<any>;
    report(results: SnapResults): string;
}
