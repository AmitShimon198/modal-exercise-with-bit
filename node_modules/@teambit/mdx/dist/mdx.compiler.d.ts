import { Compiler, TranspileFileOutput, TranspileFileParams } from '@teambit/compiler';
import { BuiltTaskResult, BuildContext } from '@teambit/builder';
import type { TransformOptions } from '@babel/core';
export declare type MDXCompilerOpts = {
    ignoredExtensions?: string[];
    ignoredPatterns?: string[];
    babelTransformOptions?: TransformOptions;
};
export declare class MDXCompiler implements Compiler {
    readonly id: string;
    readonly config: MDXCompilerOpts;
    displayName: string;
    shouldCopyNonSupportedFiles: boolean;
    distDir: string;
    constructor(id: string, config: MDXCompilerOpts);
    displayConfig(): string;
    transpileFile(fileContent: string, options: TranspileFileParams): TranspileFileOutput;
    build(context: BuildContext): Promise<BuiltTaskResult>;
    getDistPathBySrcPath(srcPath: string): string;
    private replaceFileExtToJs;
    isFileSupported(filePath: string): boolean;
    version(): string;
}
