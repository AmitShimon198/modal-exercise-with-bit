{"version":3,"sources":["lynx.ts"],"names":["createStoreController","storeDir","registries","proxyConfig","authConfig","getAuthConfig","opts","rawConfig","verifyStoreIntegrity","httpProxy","httpsProxy","ca","cert","key","noProxy","strictSsl","strictSSL","ctrl","generateResolverAndFetcher","pnpmConfig","Object","assign","config","result","install","rootPathToManifest","pathsToManifests","logger","packagesToBuild","workspacePackages","rootDir","manifest","push","buildIndex","mutation","name","version","dir","registriesMap","getRegistriesMap","storeController","update","context","argv","reportingOptions","appendOnly","throttleProgress","streamParser","resolveRemoteVersion","packageName","resolve","resolveOpts","projectDir","registry","parsedPackage","wantedDep","alias","pref","isValidRange","semver","validRange","val","isSemver","resolvedVia","e","message","includes","undefined","normalizedPref","default","defaultRegistry","uri","NPM_REGISTRY","entries","scopes","forEach","registryName","res","alwaysAuth","defaultAuthTokens","getAuthTokenForRegistry","keyName","authTokens","nerfed","alwaysAuthKeyName","isDefault","originalAuthType","originalAuthValue","split"],"mappings":"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","sourcesContent":["import semver from 'semver';\nimport parsePackageName from 'parse-package-name';\nimport defaultReporter from '@pnpm/default-reporter';\n// import createClient from '@pnpm/client'\n// import { createFetchFromRegistry } from '@pnpm/fetch';\nimport { streamParser } from '@pnpm/logger';\n// import createStore, { ResolveFunction, StoreController } from '@pnpm/package-store';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// import { PreferredVersions, RequestPackageOptions, StoreController, WantedDependency } from '@pnpm/package-store';\nimport { StoreController, WantedDependency } from '@pnpm/package-store';\nimport { createNewStoreController } from '@pnpm/store-connection-manager';\n// TODO: this should be taken from - @pnpm/store-connection-manager\n// it's not taken from there since it's not exported.\n// here is a bug in pnpm about it https://github.com/pnpm/pnpm/issues/2748\nimport { CreateNewStoreControllerOptions } from '@pnpm/store-connection-manager/lib/createNewStoreController';\nimport {\n  ResolvedPackageVersion,\n  Registries,\n  NPM_REGISTRY,\n  Registry,\n  PackageManagerProxyConfig,\n} from '@teambit/dependency-resolver';\n// import execa from 'execa';\n// import createFetcher from '@pnpm/tarball-fetcher';\nimport { MutatedProject, mutateModules } from 'supi';\n// import { ReporterFunction } from 'supi/lib/types';\n// import { createResolver } from './create-resolver';\n// import {isValidPath} from '@teambit/legacy/dist/utils';\n// import {createResolver} from '@pnpm/default-resolver';\nimport createResolverAndFetcher, { ClientOptions } from '@pnpm/client';\nimport pickRegistryForPackage from '@pnpm/pick-registry-for-package';\nimport { Logger } from '@teambit/logger';\nimport toNerfDart from 'nerf-dart';\nimport { readConfig } from './read-config';\n\ntype RegistriesMap = {\n  default: string;\n  [registryName: string]: string;\n};\n\n// TODO: DO NOT DELETE - uncomment when this is solved https://github.com/pnpm/pnpm/issues/2910\n// function getReporter(logger: Logger): ReporterFunction {\n//   return ((logObj) => {\n//     // TODO: print correctly not the entire object\n//     logger.console(logObj)\n//   });\n// }\n\nasync function createStoreController(\n  storeDir: string,\n  registries: Registries,\n  proxyConfig: PackageManagerProxyConfig = {}\n): Promise<StoreController> {\n  // const fetchFromRegistry = createFetchFromRegistry({});\n  // const getCredentials = () => ({ authHeaderValue: '', alwaysAuth: false });\n  // const resolver: ResolveFunction = createResolver(fetchFromRegistry, getCredentials, {\n  //   metaCache: new Map(),\n  //   storeDir,\n  // });\n  // const fetcher = createFetcher(fetchFromRegistry, getCredentials, {});\n  // const { resolve, fetchers } = createClient({\n  //   // authConfig,\n  //   metaCache: new Map(),\n  //   // retry: retryOpts,\n  //   storeDir,\n  //   // ...resolveOpts,\n  //   // ...fetchOpts,\n  // })\n  // const storeController = await createStore(resolve, fetchers, {\n  //   storeDir,\n  //   verifyStoreIntegrity: true,\n  // });\n  // const pnpmConfig = await readConfig();\n  const authConfig = getAuthConfig(registries);\n  const opts: CreateNewStoreControllerOptions = {\n    storeDir,\n    rawConfig: authConfig,\n    verifyStoreIntegrity: true,\n    httpProxy: proxyConfig?.httpProxy,\n    httpsProxy: proxyConfig?.httpsProxy,\n    ca: proxyConfig?.ca,\n    cert: proxyConfig?.cert,\n    key: proxyConfig?.key,\n    noProxy: proxyConfig?.noProxy,\n    strictSsl: proxyConfig.strictSSL,\n  };\n  const { ctrl } = await createNewStoreController(opts);\n  return ctrl;\n}\n\nasync function generateResolverAndFetcher(\n  storeDir: string,\n  registries: Registries,\n  proxyConfig: PackageManagerProxyConfig = {}\n) {\n  const pnpmConfig = await readConfig();\n  const authConfig = getAuthConfig(registries);\n  const opts: ClientOptions = {\n    authConfig: Object.assign({}, pnpmConfig.config.rawConfig, authConfig),\n    storeDir,\n    httpProxy: proxyConfig?.httpProxy,\n    httpsProxy: proxyConfig?.httpsProxy,\n    ca: proxyConfig?.ca,\n    cert: proxyConfig?.cert,\n    key: proxyConfig?.key,\n    noProxy: proxyConfig?.noProxy,\n    strictSSL: proxyConfig.strictSSL,\n  };\n  const result = createResolverAndFetcher(opts);\n  return result;\n}\n\nexport async function install(\n  rootPathToManifest,\n  pathsToManifests,\n  storeDir: string,\n  registries: Registries,\n  proxyConfig: PackageManagerProxyConfig = {},\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  logger?: Logger\n) {\n  const packagesToBuild: MutatedProject[] = []; // supi will use this to install the packages\n  const workspacePackages = {}; // supi will use this to link packages to each other\n\n  // This will create local link by pnpm to a component exists in the ws.\n  // it will later deleted by the link process\n  // we keep it here to better support case like this:\n  // compA@1.0.0 uses compB@1.0.0\n  // I have compB@2.0.0 in my workspace\n  // now I install compA@1.0.0\n  // compA is hoisted to the root and install B@1.0.0 hoisted to the root as well\n  // now we will make link to B@2.0.0 and A will break\n  // with this we will have a link to the local B by pnpm so it will install B@1.0.0 inside A\n  // then when overriding the link, A will still works\n  // This is the rational behind not deleting this completely, but need further check that it really works\n\n  // eslint-disable-next-line\n  for (const rootDir in pathsToManifests) {\n    const manifest = pathsToManifests[rootDir];\n    packagesToBuild.push({\n      buildIndex: 0, // workspace components should be installed before the root\n      manifest,\n      rootDir,\n      mutation: 'install',\n    });\n    workspacePackages[manifest.name] = workspacePackages[manifest.name] || {};\n    workspacePackages[manifest.name][manifest.version] = { dir: rootDir, manifest };\n  }\n  packagesToBuild.push({\n    buildIndex: 1, // install the root package after the workspace components were installed\n    manifest: rootPathToManifest.manifest,\n    mutation: 'install',\n    rootDir: rootPathToManifest.rootDir,\n  });\n  const registriesMap = getRegistriesMap(registries);\n  const authConfig = getAuthConfig(registries);\n  const storeController = await createStoreController(storeDir, registries, proxyConfig);\n  const opts = {\n    storeDir,\n    dir: rootPathToManifest.rootDir,\n    storeController,\n    update: true,\n    workspacePackages,\n    registries: registriesMap,\n    rawConfig: authConfig,\n    // TODO: uncomment when this is solved https://github.com/pnpm/pnpm/issues/2910\n    // reporter: logger ? getReporter(logger) : undefined,\n  };\n\n  defaultReporter({\n    context: {\n      argv: [],\n    },\n    reportingOptions: {\n      appendOnly: false,\n      // logLevel: 'error' as LogLevel,\n      // streamLifecycleOutput: opts.config.stream,\n      throttleProgress: 200,\n    },\n    streamParser,\n  });\n  await mutateModules(packagesToBuild, opts);\n}\n\nexport async function resolveRemoteVersion(\n  packageName: string,\n  rootDir: string,\n  storeDir: string,\n  registries: Registries,\n  proxyConfig: PackageManagerProxyConfig = {}\n): Promise<ResolvedPackageVersion> {\n  const { resolve } = await generateResolverAndFetcher(storeDir, registries, proxyConfig);\n  const resolveOpts = {\n    projectDir: rootDir,\n    registry: '',\n  };\n  try {\n    const parsedPackage = parsePackageName(packageName);\n    const registriesMap = getRegistriesMap(registries);\n    const registry = pickRegistryForPackage(registriesMap, parsedPackage.name);\n    const wantedDep: WantedDependency = {\n      alias: parsedPackage.name,\n      pref: parsedPackage.version,\n    };\n    const isValidRange = parsedPackage.version ? !!semver.validRange(parsedPackage.version) : false;\n    resolveOpts.registry = registry;\n    const val = await resolve(wantedDep, resolveOpts);\n    const version = isValidRange ? parsedPackage.version : val.manifest.version;\n    // const { stdout } = await execa('npm', ['view', packageName, 'version'], {});\n\n    return {\n      packageName: val.manifest.name,\n      version,\n      isSemver: true,\n      resolvedVia: val.resolvedVia,\n    };\n  } catch (e: any) {\n    if (!e.message?.includes('is not a valid string')) {\n      throw e;\n    }\n    // The provided package is probably a git url or path to a folder\n    const wantedDep: WantedDependency = {\n      alias: undefined,\n      pref: packageName,\n    };\n    const val = await resolve(wantedDep, resolveOpts);\n    return {\n      packageName: val.manifest.name,\n      version: val.normalizedPref,\n      isSemver: false,\n      resolvedVia: val.resolvedVia,\n    };\n  }\n}\n\nfunction getRegistriesMap(registries: Registries): RegistriesMap {\n  const registriesMap = {\n    default: registries.defaultRegistry.uri || NPM_REGISTRY,\n  };\n\n  Object.entries(registries.scopes).forEach(([registryName, registry]) => {\n    registriesMap[`@${registryName}`] = registry.uri;\n  });\n  return registriesMap;\n}\n\nfunction getAuthConfig(registries: Registries): Record<string, any> {\n  const res: any = {};\n  res.registry = registries.defaultRegistry.uri;\n  if (registries.defaultRegistry.alwaysAuth) {\n    res['always-auth'] = true;\n  }\n  const defaultAuthTokens = getAuthTokenForRegistry(registries.defaultRegistry, true);\n  defaultAuthTokens.forEach(({ keyName, val }) => {\n    res[keyName] = val;\n  });\n\n  Object.entries(registries.scopes).forEach(([, registry]) => {\n    const authTokens = getAuthTokenForRegistry(registry);\n    authTokens.forEach(({ keyName, val }) => {\n      res[keyName] = val;\n    });\n    if (registry.alwaysAuth) {\n      const nerfed = toNerfDart(registry.uri);\n      const alwaysAuthKeyName = `${nerfed}:always-auth`;\n      res[alwaysAuthKeyName] = true;\n    }\n  });\n  return res;\n}\n\nfunction getAuthTokenForRegistry(registry: Registry, isDefault = false): { keyName: string; val: string }[] {\n  const nerfed = toNerfDart(registry.uri);\n  if (registry.originalAuthType === 'authToken') {\n    return [\n      {\n        keyName: `${nerfed}:_authToken`,\n        val: registry.originalAuthValue || '',\n      },\n    ];\n  }\n  if (registry.originalAuthType === 'auth') {\n    return [\n      {\n        keyName: isDefault ? '_auth' : `${nerfed}:_auth`,\n        val: registry.originalAuthValue || '',\n      },\n    ];\n  }\n  if (registry.originalAuthType === 'user-pass') {\n    return [\n      {\n        keyName: `${nerfed}:username`,\n        val: registry.originalAuthValue?.split(':')[0] || '',\n      },\n      {\n        keyName: `${nerfed}:_password`,\n        val: registry.originalAuthValue?.split(':')[1] || '',\n      },\n    ];\n  }\n  return [];\n}\n"]}