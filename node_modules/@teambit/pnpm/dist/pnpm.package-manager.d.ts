import { ComponentMap } from '@teambit/component';
import { WorkspacePolicy, DependencyResolverMain, PackageManager, PackageManagerInstallOptions, PackageManagerResolveRemoteVersionOptions, ResolvedPackageVersion, Registries, PackageManagerProxyConfig } from '@teambit/dependency-resolver';
import { Logger } from '@teambit/logger';
import { PkgMain } from '@teambit/pkg';
export declare class PnpmPackageManager implements PackageManager {
    private depResolver;
    private pkg;
    private logger;
    constructor(depResolver: DependencyResolverMain, pkg: PkgMain, logger: Logger);
    install(rootDir: string, rootPolicy: WorkspacePolicy, componentDirectoryMap: ComponentMap<string>, installOptions?: PackageManagerInstallOptions): Promise<void>;
    private computeComponentsManifests;
    resolveRemoteVersion(packageName: string, options: PackageManagerResolveRemoteVersionOptions): Promise<ResolvedPackageVersion>;
    getProxyConfig?(): Promise<PackageManagerProxyConfig>;
    getRegistries(): Promise<Registries>;
}
