import { Options as PrettierModuleOptions } from 'prettier';
import { Formatter, FormatterContext } from '@teambit/formatter';
import { Logger, LoggerMain } from '@teambit/logger';
import { PrettierConfigMutator } from '@teambit/defender.prettier.config-mutator';
export declare type PrettierOptions = {
    config: PrettierModuleOptions;
};
export declare type PrettierConfigTransformContext = {
    check: boolean;
};
export declare type PrettierConfigTransformer = (config: PrettierConfigMutator, context: PrettierConfigTransformContext) => PrettierConfigMutator;
export declare class PrettierMain {
    private logger;
    constructor(logger: Logger);
    createFormatter(context: FormatterContext, options: PrettierOptions, transformers?: PrettierConfigTransformer[], PrettierModule?: any): Formatter;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static dependencies: import("@teambit/harmony").Aspect[];
    static provider([loggerExt]: [LoggerMain]): Promise<PrettierMain>;
}
export declare function runTransformersWithContext(config: PrettierConfigMutator, transformers: PrettierConfigTransformer[] | undefined, context: PrettierConfigTransformContext): PrettierConfigMutator;
