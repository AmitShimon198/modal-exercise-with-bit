{"version":3,"sources":["generate-link.ts"],"names":["generateLink","prefix","componentMap","defaultModule","require","resolve","toArray","map","component","modulePaths","id","fullName","path","join"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AACO,SAASA,YAAT,CAAsBC,MAAtB,EAAsCC,YAAtC,EAA4EC,aAA5E,EAA4G;AACjH,SAAQ;AACV,+BAA+B,4CAAwBC,OAAO,CAACC,OAAR,CAAgB,2BAAhB,CAAxB,CAAsE;AACrG,uBAAuB,4CAAwBD,OAAO,CAACC,OAAR,CAAgB,kBAAhB,CAAxB,CAA6D;AACpF,EAAEF,aAAa,GAAI,kCAAiC,4CAAwBA,aAAxB,CAAuC,GAA5E,GAAiF,EAAG;AACnG,eAAeF,MAAO;AACtB,IAAIC,YAAY,CACXI,OADD,GAECC,GAFD,CAEK,CAAC,CAACC,SAAD,EAAYC,WAAZ,CAAD,KAAmC;AACtC,WAAQ,IAAGD,SAAS,CAACE,EAAV,CAAaC,QAAS,OAAMF,WAAW,CAC/CF,GADoC,CAC/BK,IAAD,IAAW,YAAW,4CAAwBA,IAAxB,CAA8B,IADpB,EAEpCC,IAFoC,CAE/B,IAF+B,CAEzB,GAFd;AAGD,GAND,EAOCA,IAPD,CAOM,KAPN,CAOa;AACjB;AACA,CAdE;AAeD","sourcesContent":["import { toWindowsCompatiblePath } from '@teambit/toolbox.path.to-windows-compatible-path';\nimport type { ComponentMap } from '@teambit/component';\n\n// :TODO refactor to building an AST and generate source code based on it.\nexport function generateLink(prefix: string, componentMap: ComponentMap<string[]>, defaultModule?: string): string {\n  return `\nimport { linkModules } from '${toWindowsCompatiblePath(require.resolve('./preview.preview.runtime'))}';\nimport harmony from '${toWindowsCompatiblePath(require.resolve('@teambit/harmony'))}';\n${defaultModule ? `const defaultModule = require('${toWindowsCompatiblePath(defaultModule)}'` : ''});\nlinkModules('${prefix}', defaultModule, {\n  ${componentMap\n    .toArray()\n    .map(([component, modulePaths]: any) => {\n      return `'${component.id.fullName}': [${modulePaths\n        .map((path) => `require('${toWindowsCompatiblePath(path)}')`)\n        .join(', ')}]`;\n    })\n    .join(',\\n')}\n});  \n`;\n}\n"]}