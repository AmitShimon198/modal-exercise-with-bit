{"version":3,"sources":["preview.preview.runtime.tsx"],"names":["PREVIEW_MODULES","PreviewPreview","constructor","pubsub","previewSlot","renderingContextSlot","previewName","componentId","getLocation","name","getDefault","preview","getPreview","PreviewNotFound","includes","include","map","prevName","includedPreview","undefined","selectPreviewModel","fullName","filter","module","render","getRenderingContext","registerClickPubSub","window","addEventListener","e","timestamp","Date","now","clickEvent","Object","assign","pub","PreviewAspect","id","ClickInsideAnIframeEvent","registerPreview","register","RenderingContext","registerRenderContext","renderContext","previews","values","defaultOne","find","previewCandidate","default","getParam","query","param","params","URLSearchParams","get","withoutHash","location","hash","substring","before","after","split","ComponentID","tryFromString","provider","config","PreviewRuntime","PubsubAspect","Slot","withType","linkModules","defaultModule","componentMap","mainModule","addRuntime"],"mappings":"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","sourcesContent":["import PubsubAspect, { PubsubPreview } from '@teambit/pubsub';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport { ComponentID } from '@teambit/component-id';\n\nimport { PreviewNotFound } from './exceptions';\nimport { PreviewType } from './preview-type';\nimport { PreviewAspect, PreviewRuntime } from './preview.aspect';\nimport { ClickInsideAnIframeEvent } from './events';\nimport { PreviewModule } from './types/preview-module';\nimport { RenderingContext } from './rendering-context';\n\nexport type PreviewSlot = SlotRegistry<PreviewType>;\n\nconst PREVIEW_MODULES: Record<string, PreviewModule> = {};\n\nexport type RenderingContextProvider = () => { [key: string]: any };\nexport type RenderingContextSlot = SlotRegistry<RenderingContextProvider>;\n\nexport class PreviewPreview {\n  constructor(\n    /**\n     * register to pubsub\n     */\n    private pubsub: PubsubPreview,\n\n    /**\n     * preview slot.\n     */\n    private previewSlot: PreviewSlot,\n\n    private renderingContextSlot: RenderingContextSlot\n  ) {\n    this.registerClickPubSub();\n  }\n\n  private registerClickPubSub() {\n    window.addEventListener('click', (e) => {\n      const timestamp = Date.now();\n      const clickEvent = Object.assign({}, e);\n      this.pubsub.pub(PreviewAspect.id, new ClickInsideAnIframeEvent(timestamp, clickEvent));\n    });\n  }\n\n  /**\n   * render the preview.\n   */\n  render = () => {\n    const { previewName, componentId } = this.getLocation();\n    const name = previewName || this.getDefault();\n\n    const preview = this.getPreview(name);\n    if (!preview || !componentId) {\n      throw new PreviewNotFound(previewName);\n    }\n    const includes = (preview.include || [])\n      .map((prevName) => {\n        const includedPreview = this.getPreview(prevName);\n        if (!includedPreview) return undefined;\n\n        return includedPreview.selectPreviewModel?.(componentId.fullName, PREVIEW_MODULES[prevName]);\n      })\n      .filter((module) => !!module);\n\n    return preview.render(componentId.fullName, PREVIEW_MODULES[name], includes, this.getRenderingContext());\n  };\n\n  /**\n   * register a new preview.\n   */\n  registerPreview(preview: PreviewType) {\n    this.previewSlot.register(preview);\n    return this;\n  }\n\n  /**\n   * get the preview rendering context.\n   */\n  getRenderingContext() {\n    return new RenderingContext(this.renderingContextSlot);\n  }\n\n  /**\n   * allows aspects to add rendering contexts.\n   * render context is available through all preview definitions.\n   */\n  registerRenderContext(renderContext: RenderingContextProvider) {\n    this.renderingContextSlot.register(renderContext);\n    return this;\n  }\n\n  getDefault() {\n    const previews = this.previewSlot.values();\n    const defaultOne = previews.find((previewCandidate) => previewCandidate.default);\n\n    return defaultOne?.name || previews[0].name;\n  }\n\n  private getPreview(previewName: string): undefined | PreviewType {\n    const previews = this.previewSlot.values();\n    const preview = previews.find((previewCandidate) => previewCandidate.name === previewName);\n\n    return preview;\n  }\n\n  private getParam(query: string, param: string) {\n    const params = new URLSearchParams(query);\n    return params.get(param);\n  }\n\n  private getLocation() {\n    const withoutHash = window.location.hash.substring(1);\n    const [before, after] = withoutHash.split('?');\n\n    return {\n      previewName: this.getParam(after, 'preview'),\n      componentId: ComponentID.tryFromString(before),\n    };\n  }\n\n  static runtime = PreviewRuntime;\n\n  static dependencies = [PubsubAspect];\n\n  static slots = [Slot.withType<PreviewType>(), Slot.withType<RenderingContextProvider>()];\n\n  static async provider(\n    [pubsub]: [PubsubPreview],\n    config,\n    [previewSlot, renderingContextSlot]: [PreviewSlot, RenderingContextSlot]\n  ) {\n    const preview = new PreviewPreview(pubsub, previewSlot, renderingContextSlot);\n\n    window.addEventListener('hashchange', () => {\n      preview.render();\n    });\n\n    return preview;\n  }\n}\n\nexport function linkModules(previewName: string, defaultModule: any, componentMap: { [key: string]: any }) {\n  PREVIEW_MODULES[previewName] = {\n    mainModule: defaultModule,\n    componentMap,\n  };\n}\n\nPreviewAspect.addRuntime(PreviewPreview);\n"]}