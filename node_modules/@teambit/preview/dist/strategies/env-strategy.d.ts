import { BuildContext, ComponentResult } from '@teambit/builder';
import { BundlerResult, BundlerContext } from '@teambit/bundler';
import { BundlingStrategy } from '../bundling-strategy';
import { PreviewDefinition } from '../preview-definition';
import { PreviewMain } from '../preview.main.runtime';
export declare class EnvBundlingStrategy implements BundlingStrategy {
    private preview;
    name: string;
    constructor(preview: PreviewMain);
    computeTargets(context: BuildContext, previewDefs: PreviewDefinition[]): Promise<{
        entries: string[];
        components: import("@teambit/component").Component[];
        outputPath: string;
    }[]>;
    computeResults(context: BundlerContext, results: BundlerResult[]): Promise<{
        componentsResults: ComponentResult[];
        artifacts: {
            name: string;
            globPatterns: string[];
            rootDir: string;
            context: "env";
        }[];
    }>;
    private getArtifactDef;
    getDirName(context: BuildContext): string;
    private getOutputPath;
    private getPaths;
    private computePaths;
}
