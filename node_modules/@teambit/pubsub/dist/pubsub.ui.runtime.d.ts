import { UiUI } from '@teambit/ui';
import { BitBaseEvent } from './bit-base-event';
import { Callback } from './types';
declare type PubOptions = {
    propagate?: boolean;
};
export declare class PubsubUI {
    private childApi?;
    private events;
    sub: (topic: string, callback: Callback) => () => void;
    pub: (topic: string, event: BitBaseEvent<any>, { propagate }?: PubOptions) => void;
    private connectToIframe;
    private emitEvent;
    private pubToChild;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static dependencies: import("@teambit/harmony").Aspect[];
    static provider([uiUI]: [UiUI]): Promise<PubsubUI>;
}
export {};
