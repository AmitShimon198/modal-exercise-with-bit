{"version":3,"sources":["react.main.runtime.ts"],"names":["ReactMain","constructor","reactEnv","envs","application","workspace","useTypescript","modifiers","tsModule","ts","overrides","devTransformers","devConfig","getCompiler","buildTransformers","buildConfig","buildPipeModifiers","tsModifier","transformers","module","getBuildPipe","override","overrideTsConfig","tsconfig","compilerOptions","transformer","configMutator","mergeTsConfig","raw","compileJs","compileJsx","types","addTypes","genericCompilerOptions","Object","assign","overrideBuildTsConfig","registerReactApp","options","registerApp","ReactApp","name","entry","portRange","path","deploy","useWebpack","devServerTransformers","devServerConfig","getDevServer","context","getDevEnvId","envDefinition","id","previewTransformers","previewConfig","getBundler","useEslint","getLinter","usePrettier","getFormatter","overrideDevServerConfig","config","merge","overridePreviewConfig","overrideMounter","mounterPath","getMounter","compose","targetEnv","overrideJestConfig","jestConfigPath","jestModulePath","getTester","overrideBuildPipe","tasks","overrideCompilerTasks","pipeWithoutCompiler","filter","task","aspectId","CompilerAspect","overrideDependencies","dependencyPolicy","getDependencies","reactDeps","overrideCompiler","compiler","overrideEslintConfig","overridePackageJsonProps","props","getPackageJsonProps","getDocs","component","docsArray","state","_consumer","docs","abstract","description","filePath","properties","provider","jestAspect","tsAspect","webpack","graphql","pkg","tester","eslint","prettier","generator","ReactEnv","react","register","registerEnv","registerComponentTemplate","componentTemplates","registerWorkspaceTemplate","workspaceTemplates","MainRuntime","EnvsAspect","JestAspect","TypescriptAspect","WebpackAspect","WorkspaceAspect","GraphqlAspect","PkgAspect","TesterAspect","ESLintAspect","PrettierAspect","ApplicationAspect","GeneratorAspect","ReactAspect","addRuntime"],"mappings":"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","sourcesContent":["import mergeDeepLeft from 'ramda/src/mergeDeepLeft';\nimport { omit } from 'lodash';\nimport { MainRuntime } from '@teambit/cli';\nimport type { CompilerMain } from '@teambit/compiler';\nimport { CompilerAspect, Compiler } from '@teambit/compiler';\nimport { BuildTask } from '@teambit/builder';\nimport { Component } from '@teambit/component';\nimport { EnvsAspect, EnvsMain, EnvTransformer, Environment } from '@teambit/envs';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport type { JestMain } from '@teambit/jest';\nimport { JestAspect } from '@teambit/jest';\nimport type { PkgMain, PackageJsonProps } from '@teambit/pkg';\nimport { PkgAspect } from '@teambit/pkg';\nimport type { TesterMain } from '@teambit/tester';\nimport { TesterAspect } from '@teambit/tester';\nimport type { TypescriptMain, TsCompilerOptionsWithoutTsConfig, TsConfigTransformer } from '@teambit/typescript';\nimport { TypescriptAspect } from '@teambit/typescript';\nimport type { WebpackMain, Configuration, WebpackConfigTransformer } from '@teambit/webpack';\nimport { WebpackAspect } from '@teambit/webpack';\nimport { GeneratorAspect, GeneratorMain } from '@teambit/generator';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { DevServerContext, BundlerContext } from '@teambit/bundler';\nimport { VariantPolicyConfigObject } from '@teambit/dependency-resolver';\nimport ts from 'typescript';\nimport { ApplicationAspect, ApplicationMain } from '@teambit/application';\nimport { FormatterContext } from '@teambit/formatter';\nimport { LinterContext } from '@teambit/linter';\nimport { ESLintMain, ESLintAspect, EslintConfigTransformer } from '@teambit/eslint';\nimport { PrettierMain, PrettierAspect, PrettierConfigTransformer } from '@teambit/prettier';\nimport { ReactAspect } from './react.aspect';\nimport { ReactEnv } from './react.env';\nimport { reactSchema } from './react.graphql';\nimport { ReactAppOptions } from './react-app-options';\nimport { ReactApp } from './react.application';\nimport { componentTemplates, workspaceTemplates } from './react.templates';\n\ntype ReactDeps = [\n  EnvsMain,\n  JestMain,\n  TypescriptMain,\n  CompilerMain,\n  WebpackMain,\n  Workspace,\n  GraphqlMain,\n  PkgMain,\n  TesterMain,\n  ESLintMain,\n  PrettierMain,\n  ApplicationMain,\n  GeneratorMain\n];\n\nexport type ReactMainConfig = {\n  /**\n   * configure the react env compiler.\n   * can be configured to either TypeScript ('ts') or Babel ('babel').\n   */\n  compiler: 'babel' | 'ts';\n\n  /**\n   * configure the component tester.\n   * can be either Jest ('jest') or Mocha ('mocha')\n   */\n  tester: 'jest' | 'mocha';\n\n  /**\n   * version of React to configure.\n   */\n  reactVersion: string;\n};\n\nexport type UseWebpackModifiers = {\n  previewConfig?: WebpackConfigTransformer[];\n  devServerConfig?: WebpackConfigTransformer[];\n};\n\nexport type UseTypescriptModifiers = {\n  buildConfig?: TsConfigTransformer[];\n  devConfig?: TsConfigTransformer[];\n};\n\nexport type UseEslintModifiers = {\n  transformers: EslintConfigTransformer[];\n};\nexport type UsePrettierModifiers = {\n  transformers: PrettierConfigTransformer[];\n};\n\nexport class ReactMain {\n  constructor(\n    /**\n     * an instance of the React env.\n     */\n    readonly reactEnv: ReactEnv,\n\n    private envs: EnvsMain,\n\n    private application: ApplicationMain,\n\n    private workspace: Workspace\n  ) {}\n\n  readonly env = this.reactEnv;\n\n  /**\n   * override the env's typescript config for both dev and build time.\n   * Replaces both overrideTsConfig (devConfig) and overrideBuildTsConfig (buildConfig)\n   */\n  useTypescript(modifiers?: UseTypescriptModifiers, tsModule: any = ts) {\n    const overrides: any = {};\n    const devTransformers = modifiers?.devConfig;\n    if (devTransformers) {\n      overrides.getCompiler = () => this.reactEnv.getCompiler(devTransformers, tsModule);\n    }\n    const buildTransformers = modifiers?.buildConfig;\n    if (buildTransformers) {\n      const buildPipeModifiers = {\n        tsModifier: {\n          transformers: buildTransformers,\n          module: tsModule,\n        },\n      };\n      overrides.getBuildPipe = () => this.reactEnv.getBuildPipe(buildPipeModifiers);\n    }\n    return this.envs.override(overrides);\n  }\n\n  /**\n   * @deprecated use useTypescript()\n   * override the TS config of the React environment.\n   * @param tsModule typeof `ts` module instance.\n   */\n  overrideTsConfig(\n    tsconfig: Record<string, any> = {},\n    compilerOptions: Partial<TsCompilerOptionsWithoutTsConfig> = {},\n    tsModule: any = ts\n  ) {\n    const transformer: TsConfigTransformer = (configMutator) => {\n      configMutator.mergeTsConfig(tsconfig);\n      configMutator.raw.compileJs = compilerOptions.compileJs ?? configMutator.raw.compileJs;\n      configMutator.raw.compileJsx = compilerOptions.compileJsx ?? configMutator.raw.compileJsx;\n      if (compilerOptions.types) {\n        configMutator.addTypes(compilerOptions.types);\n      }\n      const genericCompilerOptions = omit(compilerOptions, ['types', 'compileJs', 'compileJsx']);\n      configMutator.raw = Object.assign(configMutator.raw, genericCompilerOptions);\n      return configMutator;\n    };\n    // return this.envs.override({\n    //   getCompiler: () => this.reactEnv.getCompiler([transformer], tsModule),\n    // });\n    return this.useTypescript({ devConfig: [transformer] }, tsModule);\n  }\n\n  /**\n   * @deprecated use useTypescript()\n   * override the build tsconfig.\n   */\n  overrideBuildTsConfig(\n    tsconfig: Record<string, any> = {},\n    compilerOptions: Partial<TsCompilerOptionsWithoutTsConfig> = {},\n    tsModule: any = ts\n  ) {\n    const transformer: TsConfigTransformer = (configMutator) => {\n      configMutator.mergeTsConfig(tsconfig);\n      configMutator.raw.compileJs = compilerOptions.compileJs ?? configMutator.raw.compileJs;\n      configMutator.raw.compileJsx = compilerOptions.compileJsx ?? configMutator.raw.compileJsx;\n      if (compilerOptions.types) {\n        configMutator.addTypes(compilerOptions.types);\n      }\n      const genericCompilerOptions = omit(compilerOptions, ['types', 'compileJs', 'compileJsx']);\n      configMutator.raw = Object.assign(configMutator.raw, genericCompilerOptions);\n      return configMutator;\n    };\n    // return this.envs.override({\n    //   getBuildPipe: () => this.reactEnv.getBuildPipe([transformer], tsModule),\n    // });\n    return this.useTypescript({ buildConfig: [transformer] }, tsModule);\n  }\n\n  /**\n   * register a new React application.\n   */\n  registerReactApp(options: ReactAppOptions) {\n    if (!this.workspace) return;\n    this.application.registerApp(\n      new ReactApp(\n        options.name,\n        options.entry,\n        options.portRange || [3000, 4000],\n        this.reactEnv,\n        this.workspace.path,\n        options.deploy\n      )\n    );\n  }\n\n  /**\n   * override the env's dev server and preview webpack configurations.\n   * Replaces both overrideDevServerConfig and overridePreviewConfig\n   */\n  useWebpack(modifiers?: UseWebpackModifiers): EnvTransformer {\n    const overrides: any = {};\n    const devServerTransformers = modifiers?.devServerConfig;\n    if (devServerTransformers) {\n      overrides.getDevServer = (context: DevServerContext) =>\n        this.reactEnv.getDevServer(context, devServerTransformers);\n      overrides.getDevEnvId = (context: DevServerContext) => this.reactEnv.getDevEnvId(context.envDefinition.id);\n    }\n    const previewTransformers = modifiers?.previewConfig;\n    if (previewTransformers) {\n      overrides.getBundler = (context: BundlerContext) => this.reactEnv.getBundler(context, previewTransformers);\n    }\n    return this.envs.override(overrides);\n  }\n\n  /**\n   * An API to mutate the prettier config\n   * @param modifiers\n   * @returns\n   */\n  useEslint(modifiers?: UseEslintModifiers): EnvTransformer {\n    const transformers = modifiers?.transformers || [];\n    return this.envs.override({\n      getLinter: (context: LinterContext) => this.reactEnv.getLinter(context, transformers),\n    });\n  }\n\n  /**\n   * An API to mutate the prettier config\n   * @param modifiers\n   * @returns\n   */\n  usePrettier(modifiers?: UsePrettierModifiers): EnvTransformer {\n    const transformers = modifiers?.transformers || [];\n    return this.envs.override({\n      getFormatter: (context: FormatterContext) => this.reactEnv.getFormatter(context, transformers),\n    });\n  }\n\n  /**\n   * @deprecated use useWebpack()\n   * override the dev server webpack config.\n   */\n  overrideDevServerConfig(config: Configuration) {\n    const transformer: WebpackConfigTransformer = (configMutator) => {\n      return configMutator.merge([config]);\n    };\n\n    return this.envs.override({\n      getDevServer: (context: DevServerContext) => this.reactEnv.getDevServer(context, [transformer]),\n      getDevEnvId: (context: DevServerContext) => this.reactEnv.getDevEnvId(context.envDefinition.id),\n    });\n  }\n\n  /**\n   * @deprecated use useWebpack()\n   * override the preview webpack config.\n   */\n  overridePreviewConfig(config: Configuration) {\n    const transformer: WebpackConfigTransformer = (configMutator) => {\n      return configMutator.merge([config]);\n    };\n    return this.envs.override({\n      getBundler: (context: BundlerContext) => this.reactEnv.getBundler(context, [transformer]),\n    });\n  }\n\n  overrideMounter(mounterPath: string) {\n    return this.envs.override({\n      getMounter: () => {\n        return mounterPath;\n      },\n    });\n  }\n\n  /**\n   * create a new composition of the react environment.\n   */\n  compose(transformers: EnvTransformer[], targetEnv: Environment = {}) {\n    return this.envs.compose(this.envs.merge(targetEnv, this.reactEnv), transformers);\n  }\n\n  /**\n   * override the jest configuration.\n   * @param jestConfigPath {typeof jest} absolute path to jest.config.json.\n   * @param jestModulePath absolute path to jest\n   */\n  overrideJestConfig(jestConfigPath: string, jestModulePath?: string) {\n    return this.envs.override({\n      getTester: () => this.reactEnv.getTester(jestConfigPath, jestModulePath),\n    });\n  }\n\n  /**\n   * override the build pipeline of the component environment.\n   */\n  overrideBuildPipe(tasks: BuildTask[]) {\n    return this.envs.override({\n      getBuildPipe: () => tasks,\n    });\n  }\n\n  /**\n   * override the compiler tasks inside the build pipeline of the component environment.\n   */\n  overrideCompilerTasks(tasks: BuildTask[]) {\n    const pipeWithoutCompiler = this.reactEnv.getBuildPipe().filter((task) => task.aspectId !== CompilerAspect.id);\n\n    return this.envs.override({\n      getBuildPipe: () => [...tasks, ...pipeWithoutCompiler],\n    });\n  }\n\n  /**\n   * override the dependency configuration of the component environment.\n   */\n  overrideDependencies(dependencyPolicy: VariantPolicyConfigObject) {\n    return this.envs.override({\n      getDependencies: async () => {\n        const reactDeps = await this.reactEnv.getDependencies();\n        return mergeDeepLeft(dependencyPolicy, reactDeps);\n      },\n    });\n  }\n\n  /**\n   * override the workspace compiler.\n   */\n  overrideCompiler(compiler: Compiler) {\n    return this.envs.override({\n      getCompiler: () => {\n        return compiler;\n      },\n    });\n  }\n\n  /**\n   * TODO: @gilad we need to implement this.\n   */\n  overrideEslintConfig() {}\n\n  /**\n   * override the package json props of the component environment.\n   */\n  overridePackageJsonProps(props: PackageJsonProps) {\n    return this.envs.override({\n      getPackageJsonProps: () => {\n        return {\n          ...props,\n          ...this.reactEnv.getPackageJsonProps(),\n        };\n      },\n    });\n  }\n\n  /**\n   * returns doc adjusted specifically for react components.\n   */\n  getDocs(component: Component) {\n    const docsArray = component.state._consumer.docs;\n    if (!docsArray || !docsArray[0]) {\n      return null;\n    }\n\n    const docs = docsArray[0];\n\n    return {\n      abstract: docs.description,\n      filePath: docs.filePath,\n      properties: docs.properties,\n    };\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    EnvsAspect,\n    JestAspect,\n    TypescriptAspect,\n    CompilerAspect,\n    WebpackAspect,\n    WorkspaceAspect,\n    GraphqlAspect,\n    PkgAspect,\n    TesterAspect,\n    ESLintAspect,\n    PrettierAspect,\n    ApplicationAspect,\n    GeneratorAspect,\n  ];\n\n  static async provider(\n    [\n      envs,\n      jestAspect,\n      tsAspect,\n      compiler,\n      webpack,\n      workspace,\n      graphql,\n      pkg,\n      tester,\n      eslint,\n      prettier,\n      application,\n      generator,\n    ]: ReactDeps,\n    config: ReactMainConfig\n  ) {\n    const reactEnv = new ReactEnv(\n      jestAspect,\n      tsAspect,\n      compiler,\n      webpack,\n      workspace,\n      pkg,\n      tester,\n      config,\n      eslint,\n      prettier\n    );\n    const react = new ReactMain(reactEnv, envs, application, workspace);\n    graphql.register(reactSchema(react));\n    envs.registerEnv(reactEnv);\n    generator.registerComponentTemplate(componentTemplates);\n    generator.registerWorkspaceTemplate(workspaceTemplates);\n    return react;\n  }\n}\n\nReactAspect.addRuntime(ReactMain);\n"]}