{"version":3,"sources":["webpack.config.component.dev.ts"],"names":["workDir","envId","componentsDirs","module","rules","test","enforce","include","path","join","descriptionData","componentId","value","use","require","resolve","ComponentID","isValidObject","loader","options","babelrc","configFile","plugins","compact","minified","presets","ReactRefreshWebpackPlugin","overlay","sockPath","entry","exclude"],"mappings":"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","sourcesContent":["import path from 'path';\nimport { Configuration } from 'webpack';\nimport { ComponentID } from '@teambit/component-id';\n// Make sure the bit-react-transformer is a dependency\n// TODO: remove it once we can set policy from component to component then set it via the component.json\nimport '@teambit/react.babel.bit-react-transformer';\nimport ReactRefreshWebpackPlugin from '@pmmmwh/react-refresh-webpack-plugin';\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n// eslint-disable-next-line complexity\n// export default function (workDir: string, envId: string): Configuration {\nexport default function (workDir: string, envId: string, componentsDirs: string[]): Configuration {\n  return {\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          enforce: 'pre',\n          // limit loader to files in the current project,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: (value) => !!value },\n          use: [require.resolve('source-map-loader')],\n        },\n        {\n          test: /\\.js$/,\n          // limit loader to files in the current project,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: ComponentID.isValidObject },\n          use: [\n            {\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                plugins: [\n                  require.resolve('react-refresh/babel'),\n                  // for component highlighting in preview.\n                  [require.resolve('@teambit/react.babel.bit-react-transformer')],\n                ],\n                // turn off all optimizations (only slow down for node_modules)\n                compact: false,\n                minified: false,\n              },\n            },\n          ],\n        },\n        // MDX support (move to the mdx aspect and extend from there)\n        {\n          test: /\\.mdx?$/,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: (value) => !!value },\n          use: [\n            {\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                presets: [require.resolve('@babel/preset-react'), require.resolve('@babel/preset-env')],\n                plugins: [require.resolve('react-refresh/babel')],\n              },\n            },\n            {\n              loader: require.resolve('@teambit/mdx.modules.mdx-loader'),\n            },\n          ],\n        },\n      ],\n    },\n    plugins: [\n      // No need here as we have `hot: true` in the dev server\n      // new webpack.HotModuleReplacementPlugin({}),\n      new ReactRefreshWebpackPlugin({\n        overlay: {\n          sockPath: `_hmr/${envId}`,\n          // TODO: check why webpackHotDevClient and react-error-overlay are not responding for runtime\n          // errors\n          entry: require.resolve('./react-hot-dev-client'),\n          module: require.resolve('./refresh'),\n        },\n\n        // // having no value for include, exclude === revert to the defaults!\n        // // original/defaults values:\n        // include: /\\.([cm]js|[jt]sx?|flow)$/i,\n        // exclude: /node_modules/,\n\n        include: componentsDirs,\n        exclude: [\n          // prevent recursion:\n          /react-refresh-webpack-plugin/i,\n          // file type filtering was done by `include`, so need to negative-filter them out here\n          // A lookbehind assertion (`?<!`) has to be fixed width\n          /(?<!\\.mdx)(?<!\\.js)$/i,\n        ],\n      }),\n    ],\n  };\n}\n"]}