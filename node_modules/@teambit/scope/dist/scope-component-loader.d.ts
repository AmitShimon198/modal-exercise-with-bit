import { Component, ComponentID, Snap, State } from '@teambit/component';
import { Logger } from '@teambit/logger';
import ConsumerComponent from '@teambit/legacy/dist/consumer/component';
import type { ScopeMain } from './scope.main.runtime';
export declare class ScopeComponentLoader {
    private scope;
    private logger;
    private componentsCache;
    constructor(scope: ScopeMain, logger: Logger);
    get(id: ComponentID): Promise<Component | undefined>;
    getFromConsumerComponent(consumerComponent: ConsumerComponent): Promise<Component>;
    getRemoteComponent(id: ComponentID): Promise<Component>;
    getState(id: ComponentID, hash: string): Promise<State>;
    getSnap(id: ComponentID, hash: string): Promise<Snap>;
    clearCache(): void;
    private getFromCache;
    private getTagMap;
    private createSnapFromVersion;
    private createStateFromVersion;
}
