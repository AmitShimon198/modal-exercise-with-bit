{"version":3,"sources":["scope.main.runtime.ts"],"names":["ScopeMain","constructor","harmony","legacyScope","componentExtension","config","tagRegistry","postPutSlot","postDeleteSlot","postExportSlot","postObjectsPersist","preFetchObjects","isolator","aspectLoader","logger","componentLoader","ScopeComponentLoader","name","icon","backgroundIconColor","description","path","isLegacy","onTag","tagFn","host","getHost","legacyOnTagFunc","legacyComponents","options","reloadAspectsWithNewVersion","components","getManyByLegacy","builderDataMap","builderDataMapToLegacyOnTagResults","push","register","getUserAspectsIdsWithoutRootIds","allUserAspectIds","getUserAspects","rootIds","Object","keys","toObject","diffIds","getAspectsByPreviouslyUsedVersion","harmonyIds","aspectsIds","aspectsP","map","component","newId","resolveComponentId","id","previouslyUsedVersion","version","newIdWithPreviouslyUsedVersion","changeVersion","includes","toString","Promise","all","idsToLoad","loadAspects","getFromConsumerComponent","clearCache","objects","builderDataComponentMap","builderDataToLegacyExtension","builderData","existingBuilder","state","aspects","get","BuilderAspect","legacy","builderExtension","ExtensionDataEntry","undefined","data","toArray","_legacy","onPostPut","postPutFn","onPostDelete","postDeleteFn","registerOnPostExport","postExportFn","registerOnPreFetchObjects","preFetchObjectsFn","registerOnPostObjectsPersist","postObjectsPersistFn","fetch","ids","persist","delete","force","lanes","headers","authData","authorization","result","fns","values","metadata","auth","componentIds","ComponentID","fromString","fn","err","error","toObjectList","list","ObjectList","fromBitObjects","toJs","str","endsWith","replace","parseLocalAspect","localAspects","dirPaths","localAspect","nonExistsDirPaths","filter","forEach","warn","existsDirPaths","findRuntime","dirPath","runtime","files","find","loadAspectFromPath","manifests","scopeRuntime","module","require","default","loadExtensionsByManifests","throwOnError","scopeManifests","getManifestsGraphRecursively","visited","nonVisitedId","length","getNonLoadedAspects","requireAspects","depsToLoad","manifest","dependencies","_runtimes","depIds","d","loaded","notLoadedIds","isAspectLoaded","coreAspectsStringIds","getCoreAspectIds","idsWithoutCore","aspectIds","startsWith","concat","resolveMultipleComponentIds","import","resolveLocalAspects","dirs","dir","runtimeManifest","AspectDefinition","getResolvedAspects","skipIfExists","network","isolateComponents","c","baseDir","getAspectCapsulePath","includeFromNestedHosts","installOptions","copyPeerToRuntimeOnRoot","capsules","seedersCapsules","capsule","RequireableComponent","aspect","getRuntimePath","mainRuntime","MainRuntime","runtimePath","requireableExtensions","erroredId","requireWithCatch","requireableAspects","requireableExtension","doRequire","code","resolvedAspectsAgain","manifestAgain","handleExtensionLoadingError","resolveUserAspects","runtimeName","userAspectsIds","getMany","aspectDefs","resolveAspects","getCapsule","Error","localPath","aspectPath","withoutLocalAspects","aspectId","fullName","userAspectsDefs","localResolved","coreAspects","getCoreAspectDefs","allDefs","uniqDefs","def","defs","getLegacyGraph","comp","legacyIds","bitId","hasScope","changeScope","legacyGraph","useCache","throwIfNotExist","legacyId","scope","withoutOwnScopeAndLocals","ComponentsIds","fromArray","consumerComponent","getRemoteComponent","includeCache","componentsIds","listIds","limit","offset","listInvalid","allModelComponents","modelComponentsToList","modelComponent","exists","fromLegacy","toBitIdWithLatestVersion","debug","JSON","stringify","hasId","componentId","opts","includeOrphaned","includeVersion","hasIdNested","idsWithoutEmpty","componentsP","getOrThrow","loadMany","load","ComponentNotFound","getState","hash","getSnap","getLogs","loadComponentLogs","idStr","loadModelComponentByIdStr","getIdToCheck","IdToCheck","BitId","getParsedId","byPattern","patterns","finalPatterns","pattern","targetIds","some","toStringWithoutVersion","match","getExactVersionBySemverRange","range","getModelComponent","versions","listVersions","semver","maxSatisfying","includePrerelease","resumeExport","exportId","remotes","resolveId","_legacyRemotes","loadComponentsAspect","provider","componentExt","ui","graphql","cli","express","loggerMain","tagSlot","postObjectsPersistSlot","preFetchObjectsSlot","bitConfig","cwd","createLogger","ScopeAspect","registerOnStart","hasWorkspace","getNotLoadedConfiguredExtensions","onPutHook","getAuthData","token","Http","getToken","type","DEFAULT_AUTH_TYPE","credentials","onPostExportHook","onPostObjectsPersistHook","ExportPersist","PostSign","Scope","onPostExport","Repository","onPostObjectsPersist","PutRoute","FetchRoute","ActionRoute","DeleteRoute","registerUiRoot","ScopeUIRoot","registerHost","Slot","withType","ComponentAspect","UIAspect","GraphqlAspect","CLIAspect","IsolatorAspect","AspectLoaderAspect","ExpressAspect","LoggerAspect","httpTimeOut","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA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","sourcesContent":["import mapSeries from 'p-map-series';\nimport semver from 'semver';\nimport type { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { TaskResultsList, BuilderData, BuilderAspect } from '@teambit/builder';\nimport { readdirSync, existsSync } from 'fs-extra';\nimport { resolve, join } from 'path';\nimport { AspectLoaderAspect, AspectDefinition } from '@teambit/aspect-loader';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport type { ComponentMain, ComponentMap } from '@teambit/component';\nimport { Component, ComponentAspect, ComponentFactory, ComponentID, Snap, State } from '@teambit/component';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport { Harmony, Slot, SlotRegistry, ExtensionManifest, Aspect } from '@teambit/harmony';\nimport { IsolatorAspect, IsolatorMain } from '@teambit/isolator';\nimport { LoggerAspect, LoggerMain, Logger } from '@teambit/logger';\nimport { ExpressAspect, ExpressMain } from '@teambit/express';\nimport type { UiMain } from '@teambit/ui';\nimport { UIAspect } from '@teambit/ui';\nimport { RequireableComponent } from '@teambit/harmony.modules.requireable-component';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { BitIds as ComponentsIds } from '@teambit/legacy/dist/bit-id';\nimport { ModelComponent, Lane } from '@teambit/legacy/dist/scope/models';\nimport { Repository } from '@teambit/legacy/dist/scope/objects';\nimport LegacyScope, { LegacyOnTagResult, OnTagFunc, OnTagOpts } from '@teambit/legacy/dist/scope/scope';\nimport { ComponentLog } from '@teambit/legacy/dist/scope/models/model-component';\nimport { loadScopeIfExist } from '@teambit/legacy/dist/scope/scope-loader';\nimport { PersistOptions } from '@teambit/legacy/dist/scope/types';\nimport LegacyGraph from '@teambit/legacy/dist/scope/graph/graph';\nimport { ExportPersist, PostSign } from '@teambit/legacy/dist/scope/actions';\nimport { getScopeRemotes } from '@teambit/legacy/dist/scope/scope-remotes';\nimport { Remotes } from '@teambit/legacy/dist/remotes';\nimport { isMatchNamespacePatternItem } from '@teambit/workspace.modules.match-pattern';\nimport { Scope } from '@teambit/legacy/dist/scope';\nimport { FETCH_OPTIONS } from '@teambit/legacy/dist/api/scope/lib/fetch';\nimport { ObjectList } from '@teambit/legacy/dist/scope/objects/object-list';\nimport { Http, DEFAULT_AUTH_TYPE, AuthData, getAuthDataFromHeader } from '@teambit/legacy/dist/scope/network/http/http';\nimport { buildOneGraphForComponentsUsingScope } from '@teambit/legacy/dist/scope/graph/components-graph';\nimport { remove } from '@teambit/legacy/dist/api/scope';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport { resumeExport } from '@teambit/legacy/dist/scope/component-ops/export-scope-components';\nimport { ExtensionDataEntry } from '@teambit/legacy/dist/consumer/config';\nimport { compact, uniq, slice, uniqBy, difference } from 'lodash';\nimport { ComponentNotFound } from './exceptions';\nimport { ScopeAspect } from './scope.aspect';\nimport { scopeSchema } from './scope.graphql';\nimport { ScopeUIRoot } from './scope.ui-root';\nimport { PutRoute, FetchRoute, ActionRoute, DeleteRoute } from './routes';\nimport { ScopeComponentLoader } from './scope-component-loader';\n\ntype TagRegistry = SlotRegistry<OnTag>;\n\ntype ManifestOrAspect = ExtensionManifest | Aspect;\n\nexport type OnTagResults = { builderDataMap: ComponentMap<BuilderData>; pipeResults: TaskResultsList[] };\nexport type OnTag = (components: Component[], options?: OnTagOpts) => Promise<OnTagResults>;\n\ntype RemoteEventMetadata = { auth?: AuthData; headers?: {} };\ntype RemoteEvent<Data> = (data: Data, metadata: RemoteEventMetadata, errors?: Array<string | Error>) => Promise<void>;\ntype OnPostPutData = { ids: ComponentID[]; lanes: Lane[] };\ntype OnPostDeleteData = { ids: ComponentID[] };\ntype OnPreFetchObjectData = { ids: string[]; fetchOptions: FETCH_OPTIONS };\n\ntype OnPostPut = RemoteEvent<OnPostPutData>;\ntype OnPostExport = RemoteEvent<OnPostPutData>;\ntype OnPostDelete = RemoteEvent<OnPostDeleteData>;\ntype OnPostObjectsPersist = RemoteEvent<undefined>;\ntype OnPreFetchObjects = RemoteEvent<OnPreFetchObjectData>;\n\nexport type OnPostPutSlot = SlotRegistry<OnPostPut>;\nexport type OnPostDeleteSlot = SlotRegistry<OnPostDelete>;\nexport type OnPostExportSlot = SlotRegistry<OnPostExport>;\nexport type OnPostObjectsPersistSlot = SlotRegistry<OnPostObjectsPersist>;\nexport type OnPreFetchObjectsSlot = SlotRegistry<OnPreFetchObjects>;\n\nexport type ScopeConfig = {\n  httpTimeOut: number;\n  description?: string;\n  icon?: string;\n  backgroundIconColor?: string;\n};\n\nexport class ScopeMain implements ComponentFactory {\n  componentLoader: ScopeComponentLoader;\n  constructor(\n    /**\n     * private reference to the instance of Harmony.\n     */\n    private harmony: Harmony,\n    /**\n     * legacy scope\n     */\n    readonly legacyScope: LegacyScope,\n\n    /**\n     * component extension.\n     */\n    readonly componentExtension: ComponentMain,\n\n    /**\n     * slot registry for subscribing to build\n     */\n\n    readonly config: ScopeConfig,\n\n    private tagRegistry: TagRegistry,\n\n    private postPutSlot: OnPostPutSlot,\n\n    private postDeleteSlot: OnPostDeleteSlot,\n\n    private postExportSlot: OnPostExportSlot,\n\n    private postObjectsPersist: OnPostObjectsPersistSlot,\n\n    public preFetchObjects: OnPreFetchObjectsSlot,\n\n    private isolator: IsolatorMain,\n\n    private aspectLoader: AspectLoaderMain,\n\n    private logger: Logger\n  ) {\n    this.componentLoader = new ScopeComponentLoader(this, this.logger);\n  }\n\n  /**\n   * name of the scope\n   */\n  get name(): string {\n    return this.legacyScope.name;\n  }\n\n  get icon(): string | undefined {\n    return this.config.icon;\n  }\n\n  get backgroundIconColor(): string | undefined {\n    return this.config.backgroundIconColor;\n  }\n\n  get description(): string | undefined {\n    return this.config.description;\n  }\n\n  get path(): string {\n    return this.legacyScope.path;\n  }\n\n  get isLegacy(): boolean {\n    return this.legacyScope.isLegacy;\n  }\n\n  /**\n   * register to the tag slot.\n   */\n  onTag(tagFn: OnTag) {\n    const host = this.componentExtension.getHost();\n    const legacyOnTagFunc: OnTagFunc = async (\n      legacyComponents: ConsumerComponent[],\n      options?: OnTagOpts\n    ): Promise<LegacyOnTagResult[]> => {\n      // Reload the aspects with their new version\n      await this.reloadAspectsWithNewVersion(legacyComponents);\n      const components = await host.getManyByLegacy(legacyComponents);\n      const { builderDataMap } = await tagFn(components, options);\n      return this.builderDataMapToLegacyOnTagResults(builderDataMap);\n    };\n    this.legacyScope.onTag.push(legacyOnTagFunc);\n    this.tagRegistry.register(tagFn);\n  }\n\n  // We need to reload the aspects with their new version since:\n  // during get many by legacy, we go load component which in turn go to getEnv\n  // get env validates that the env written on the component is really exist by checking the envs slot registry\n  // when we load here, it's env version in the aspect list already has the new version in case the env itself is being tagged\n  // so we are search for the env in the registry with the new version number\n  // but since the env only registered during the on load of the bit process (before the tag) it's version in the registry is only the old one\n  // once we reload them we will have it registered with the new version as well\n  async reloadAspectsWithNewVersion(components: ConsumerComponent[]): Promise<void> {\n    const host = this.componentExtension.getHost();\n\n    // Return only aspects that defined on components but not in the root config file (workspace.jsonc/scope.jsonc)\n    const getUserAspectsIdsWithoutRootIds = (): string[] => {\n      const allUserAspectIds = this.aspectLoader.getUserAspects();\n      const rootIds = Object.keys(this.harmony.config.toObject());\n      const diffIds = difference(allUserAspectIds, rootIds);\n      return diffIds;\n    };\n\n    // Based on the list of components to be tagged return those who are loaded to harmony with their used version\n    const getAspectsByPreviouslyUsedVersion = async (): Promise<string[]> => {\n      const harmonyIds = getUserAspectsIdsWithoutRootIds();\n      const aspectsIds: string[] = [];\n      const aspectsP = components.map(async (component) => {\n        const newId = await host.resolveComponentId(component.id);\n        if (\n          component.previouslyUsedVersion &&\n          component.version &&\n          component.previouslyUsedVersion !== component.version\n        ) {\n          const newIdWithPreviouslyUsedVersion = newId.changeVersion(component.previouslyUsedVersion);\n          if (harmonyIds.includes(newIdWithPreviouslyUsedVersion.toString())) {\n            aspectsIds.push(newId.toString());\n          }\n        }\n      });\n      await Promise.all(aspectsP);\n      return aspectsIds;\n    };\n\n    const idsToLoad = await getAspectsByPreviouslyUsedVersion();\n    await host.loadAspects(idsToLoad, false);\n  }\n\n  getManyByLegacy(components: ConsumerComponent[]): Promise<Component[]> {\n    return mapSeries(components, async (component) => this.getFromConsumerComponent(component));\n  }\n\n  clearCache() {\n    this.componentLoader.clearCache();\n    this.legacyScope.objects.clearCache();\n  }\n\n  builderDataMapToLegacyOnTagResults(builderDataComponentMap: ComponentMap<BuilderData>): LegacyOnTagResult[] {\n    const builderDataToLegacyExtension = (component: Component, builderData: BuilderData) => {\n      const existingBuilder = component.state.aspects.get(BuilderAspect.id)?.legacy;\n      const builderExtension = existingBuilder || new ExtensionDataEntry(undefined, undefined, BuilderAspect.id);\n      builderExtension.data = builderData;\n      return builderExtension;\n    };\n    return builderDataComponentMap.toArray().map(([component, builderData]) => ({\n      id: component.id._legacy,\n      builderData: builderDataToLegacyExtension(component, builderData),\n    }));\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  onPostPut(postPutFn: OnPostPut) {\n    this.postPutSlot.register(postPutFn);\n    return this;\n  }\n\n  /**\n   * register to the post-delete slot.\n   */\n  onPostDelete(postDeleteFn: OnPostDelete) {\n    this.postDeleteSlot.register(postDeleteFn);\n    return this;\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  registerOnPostExport(postExportFn: OnPostExport) {\n    this.postExportSlot.register(postExportFn);\n    return this;\n  }\n\n  registerOnPreFetchObjects(preFetchObjectsFn: OnPreFetchObjects) {\n    this.preFetchObjects.register(preFetchObjectsFn);\n    return this;\n  }\n\n  registerOnPostObjectsPersist(postObjectsPersistFn: OnPostObjectsPersist) {\n    this.postObjectsPersist.register(postObjectsPersistFn);\n    return this;\n  }\n\n  /**\n   * Will fetch a list of components into the current scope.\n   * This will only fetch the object and won't write the files to the actual FS\n   *\n   * @param {ComponentsIds} ids list of ids to fetch\n   */\n  fetch(ids: ComponentsIds) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  /**\n   * This function will get a component and sealed it's current state into the scope\n   *\n   * @param {Component[]} components A list of components to seal with specific persist options (such as message and version number)\n   * @param {PersistOptions} persistGeneralOptions General persistence options such as verbose\n   */\n  persist(components: Component[], options: PersistOptions) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  async delete(\n    { ids, force, lanes }: { ids: string[]; force: boolean; lanes: boolean },\n    headers?: Record<string, any>\n  ) {\n    const authData = getAuthDataFromHeader(headers?.authorization);\n    const result = await remove({\n      path: this.path,\n      ids,\n      force,\n      lanes,\n    });\n\n    const fns = this.postDeleteSlot.values();\n    const metadata = { auth: authData, headers };\n    const componentIds = ids.map((id) => ComponentID.fromString(id));\n    await mapSeries(fns, async (fn) => {\n      try {\n        await fn({ ids: componentIds }, metadata);\n      } catch (err: any) {\n        this.logger.error('failed to run delete slot', err);\n      }\n    });\n    return result;\n  }\n\n  async toObjectList(): Promise<ObjectList> {\n    const objects = await this.legacyScope.objects.list();\n    return ObjectList.fromBitObjects(objects);\n  }\n\n  // TODO: temporary compiler workaround - discuss this with david.\n  private toJs(str: string) {\n    if (str.endsWith('.ts')) return str.replace('.ts', '.js');\n    return str;\n  }\n\n  private parseLocalAspect(localAspects: string[]) {\n    const dirPaths = localAspects.map((localAspect) => resolve(localAspect.replace('file://', '')));\n    const nonExistsDirPaths = dirPaths.filter((path) => !existsSync(path));\n    nonExistsDirPaths.forEach((path) => this.logger.warn(`no such file or directory: ${path}`));\n    const existsDirPaths = dirPaths.filter((path) => existsSync(path));\n    return existsDirPaths;\n  }\n\n  private findRuntime(dirPath: string, runtime: string) {\n    const files = readdirSync(join(dirPath, 'dist'));\n    return files.find((path) => path.includes(`${runtime}.runtime.js`));\n  }\n\n  private async loadAspectFromPath(localAspects: string[]) {\n    const dirPaths = this.parseLocalAspect(localAspects);\n    const manifests = dirPaths.map((dirPath) => {\n      const scopeRuntime = this.findRuntime(dirPath, 'scope');\n      if (scopeRuntime) {\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        const module = require(join(dirPath, 'dist', scopeRuntime));\n        return module.default || module;\n      }\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const module = require(dirPath);\n      return module.default || module;\n    });\n\n    await this.aspectLoader.loadExtensionsByManifests(manifests, true);\n  }\n\n  private localAspects: string[] = [];\n\n  async loadAspects(ids: string[], throwOnError = false): Promise<void> {\n    const scopeManifests = await this.getManifestsGraphRecursively(ids, [], throwOnError);\n    await this.aspectLoader.loadExtensionsByManifests(scopeManifests);\n  }\n\n  async getManifestsGraphRecursively(\n    ids: string[],\n    visited: string[] = [],\n    throwOnError = false\n  ): Promise<ManifestOrAspect[]> {\n    ids = uniq(ids);\n    const nonVisitedId = ids.filter((id) => !visited.includes(id));\n    if (!nonVisitedId.length) {\n      return [];\n    }\n    const components = await this.getNonLoadedAspects(nonVisitedId);\n    visited.push(...nonVisitedId);\n    const manifests = await this.requireAspects(components, throwOnError);\n    const depsToLoad: Array<ExtensionManifest | Aspect> = [];\n    await mapSeries(manifests, async (manifest) => {\n      depsToLoad.push(...(manifest.dependencies || []));\n      // @ts-ignore\n      (manifest._runtimes || []).forEach((runtime) => {\n        depsToLoad.push(...(runtime.dependencies || []));\n      });\n      const depIds = depsToLoad.map((d) => d.id).filter((id) => id) as string[];\n      const loaded = await this.getManifestsGraphRecursively(depIds, visited, throwOnError);\n      manifests.push(...loaded);\n    });\n    return manifests;\n  }\n\n  private async getNonLoadedAspects(ids: string[]): Promise<Component[]> {\n    const notLoadedIds = ids.filter((id) => !this.aspectLoader.isAspectLoaded(id));\n    if (!notLoadedIds.length) return [];\n    const coreAspectsStringIds = this.aspectLoader.getCoreAspectIds();\n    const idsWithoutCore: string[] = difference(ids, coreAspectsStringIds);\n    const aspectIds = idsWithoutCore.filter((id) => !id.startsWith('file://'));\n    // TODO: use diff instead of filter twice\n    const localAspects = ids.filter((id) => id.startsWith('file://'));\n    this.localAspects = this.localAspects.concat(localAspects);\n    // load local aspects for debugging purposes.\n    await this.loadAspectFromPath(localAspects);\n    const componentIds = await this.resolveMultipleComponentIds(aspectIds);\n    if (!componentIds || !componentIds.length) return [];\n    const components = await this.import(componentIds);\n\n    return components;\n  }\n\n  private async resolveLocalAspects(ids: string[], runtime?: string) {\n    const dirs = this.parseLocalAspect(ids);\n\n    return dirs.map((dir) => {\n      const runtimeManifest = runtime ? this.findRuntime(dir, runtime) : undefined;\n      return new AspectDefinition(\n        dir,\n        runtimeManifest ? join(dir, 'dist', runtimeManifest) : null,\n        undefined,\n        undefined,\n        true\n      );\n    });\n  }\n\n  async getResolvedAspects(components: Component[], { skipIfExists = true } = {}): Promise<RequireableComponent[]> {\n    if (!components.length) return [];\n    const network = await this.isolator.isolateComponents(\n      components.map((c) => c.id),\n      // includeFromNestedHosts - to support case when you are in a workspace, trying to load aspect defined in the workspace.jsonc but not part of the workspace\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists,\n        includeFromNestedHosts: true,\n        installOptions: { copyPeerToRuntimeOnRoot: true },\n      },\n      this.legacyScope\n    );\n\n    const capsules = network.seedersCapsules;\n\n    return capsules.map((capsule) => {\n      return new RequireableComponent(capsule.component, async () => {\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        const aspect = require(capsule.path);\n        const scopeRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, 'scope');\n        const mainRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, MainRuntime.name);\n        const runtimePath = scopeRuntime || mainRuntime;\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        if (runtimePath) require(runtimePath);\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        return aspect;\n      });\n    });\n  }\n\n  async requireAspects(components: Component[], throwOnError = false): Promise<Array<ExtensionManifest | Aspect>> {\n    const requireableExtensions = await this.getResolvedAspects(components);\n    if (!requireableExtensions) {\n      return [];\n    }\n    let error: any;\n    let erroredId = '';\n    const requireWithCatch = async (requireableAspects: RequireableComponent[]) => {\n      error = undefined;\n      try {\n        const manifests = await mapSeries(requireableAspects, async (requireableExtension) => {\n          try {\n            return await this.aspectLoader.doRequire(requireableExtension);\n          } catch (err: any) {\n            erroredId = requireableExtension.component.id.toString();\n            error = err;\n            throw err;\n          }\n        });\n        return manifests;\n      } catch (err) {\n        return null;\n      }\n    };\n    const manifests = await requireWithCatch(requireableExtensions);\n    if (!error) {\n      return compact(manifests);\n    }\n    if (error.code === 'MODULE_NOT_FOUND') {\n      this.logger.warn(\n        `failed loading aspects from capsules due to MODULE_NOT_FOUND error, re-creating the capsules and trying again`\n      );\n      const resolvedAspectsAgain = await this.getResolvedAspects(components, {\n        skipIfExists: false,\n      });\n      const manifestAgain = await requireWithCatch(resolvedAspectsAgain);\n      if (!error) {\n        return compact(manifestAgain);\n      }\n    }\n    this.aspectLoader.handleExtensionLoadingError(error, erroredId, throwOnError);\n    return [];\n  }\n\n  getAspectCapsulePath() {\n    return `${this.path}-aspects`;\n  }\n\n  private async resolveUserAspects(runtimeName?: string, userAspectsIds?: ComponentID[]): Promise<AspectDefinition[]> {\n    if (!userAspectsIds || !userAspectsIds.length) return [];\n    const components = await this.getMany(userAspectsIds);\n    const network = await this.isolator.isolateComponents(\n      userAspectsIds,\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists: true,\n        includeFromNestedHosts: true,\n        installOptions: { copyPeerToRuntimeOnRoot: true },\n        host: this,\n      },\n      this.legacyScope\n    );\n    const capsules = network.seedersCapsules;\n    const aspectDefs = await this.aspectLoader.resolveAspects(components, async (component) => {\n      const capsule = capsules.getCapsule(component.id);\n      if (!capsule) throw new Error(`failed loading aspect: ${component.id.toString()}`);\n      const localPath = capsule.path;\n\n      return {\n        aspectPath: localPath,\n        runtimePath: runtimeName ? await this.aspectLoader.getRuntimePath(component, localPath, runtimeName) : null,\n      };\n    });\n    return aspectDefs;\n  }\n\n  async resolveAspects(runtimeName?: string, componentIds?: ComponentID[]): Promise<AspectDefinition[]> {\n    const userAspectsIds = componentIds || (await this.resolveMultipleComponentIds(this.aspectLoader.getUserAspects()));\n    const withoutLocalAspects = userAspectsIds.filter((aspectId) => {\n      return !this.localAspects.find((localAspect) => {\n        return localAspect.includes(aspectId.fullName.replace('/', '.'));\n      });\n    });\n    const userAspectsDefs = await this.resolveUserAspects(runtimeName, withoutLocalAspects);\n    const localResolved = await this.resolveLocalAspects(this.localAspects, runtimeName);\n    const coreAspects = await this.aspectLoader.getCoreAspectDefs(runtimeName);\n\n    const allDefs = userAspectsDefs.concat(coreAspects).concat(localResolved);\n    const uniqDefs = uniqBy(allDefs, (def) => `${def.aspectPath}-${def.runtimePath}`);\n    let defs = uniqDefs;\n    if (runtimeName) {\n      defs = defs.filter((def) => def.runtimePath);\n    }\n\n    return defs;\n  }\n\n  async getLegacyGraph(ids?: ComponentID[]): Promise<LegacyGraph> {\n    if (!ids || ids.length < 1) ids = (await this.list()).map((comp) => comp.id) || [];\n    const legacyIds = ids.map((id) => {\n      let bitId = id._legacy;\n      // The resolve bitId in scope will remove the scope name in case it's the same as the scope\n      // We restore it back to use it correctly in the legacy code.\n      if (!bitId.hasScope()) {\n        bitId = bitId.changeScope(this.legacyScope?.name);\n      }\n      return bitId;\n    });\n\n    const legacyGraph = await buildOneGraphForComponentsUsingScope(legacyIds, this.legacyScope);\n    return legacyGraph;\n  }\n\n  /**\n   * import components into the scope.\n   */\n  async import(ids: ComponentID[], useCache = true, throwIfNotExist = false): Promise<Component[]> {\n    const legacyIds = ids.map((id) => {\n      const legacyId = id._legacy;\n      if (legacyId.scope === this.name) return legacyId.changeScope(null);\n      return legacyId;\n    });\n\n    const withoutOwnScopeAndLocals = legacyIds.filter((id) => {\n      return id.scope !== this.name && id.hasScope();\n    });\n    await this.legacyScope.import(ComponentsIds.fromArray(withoutOwnScopeAndLocals), useCache);\n\n    return this.getMany(ids, throwIfNotExist);\n  }\n\n  async get(id: ComponentID): Promise<Component | undefined> {\n    return this.componentLoader.get(id);\n  }\n\n  async getFromConsumerComponent(consumerComponent: ConsumerComponent): Promise<Component> {\n    return this.componentLoader.getFromConsumerComponent(consumerComponent);\n  }\n\n  /**\n   * get a component from a remote without importing it\n   */\n  async getRemoteComponent(id: ComponentID): Promise<Component> {\n    return this.componentLoader.getRemoteComponent(id);\n  }\n\n  /**\n   * list all components in the scope.\n   */\n  async list(filter?: { offset: number; limit: number }, includeCache = false): Promise<Component[]> {\n    const componentsIds = await this.listIds(includeCache);\n\n    return this.getMany(\n      filter && filter.limit ? slice(componentsIds, filter.offset, filter.offset + filter.limit) : componentsIds\n    );\n  }\n\n  /**\n   * for now, list of invalid components are mostly useful for the workspace.\n   * in the future, this can return components that failed to load in the scope due to objects file\n   * corruption or similar issues.\n   */\n  async listInvalid() {\n    return [];\n  }\n\n  /**\n   * get ids of all scope components.\n   * @param includeCache whether or not include components that their scope-name is different than the current scope-name\n   */\n  async listIds(includeCache = false): Promise<ComponentID[]> {\n    const allModelComponents = await this.legacyScope.list();\n    const modelComponentsToList = includeCache\n      ? allModelComponents\n      : allModelComponents.filter((modelComponent) => this.exists(modelComponent));\n\n    const ids = modelComponentsToList.map((component) =>\n      ComponentID.fromLegacy(component.toBitIdWithLatestVersion(), component.scope || this.name)\n    );\n    this.logger.debug(`scope listIds: componentsIds after filter scope: ${JSON.stringify(ids, undefined, 2)}`);\n    return ids;\n  }\n\n  /**\n   * Check if a specific id exist in the scope\n   * @param componentId\n   */\n  async hasId(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    if (!includeCache && componentId.scope !== this.name) return false;\n    const opts = {\n      includeOrphaned: true,\n      includeVersion: true,\n    };\n\n    return this.legacyScope.hasId(componentId._legacy, opts);\n  }\n\n  async hasIdNested(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    return this.hasId(componentId, includeCache);\n  }\n\n  /**\n   * determine whether a component exists in the scope.\n   */\n  exists(modelComponent: ModelComponent) {\n    return modelComponent.scope === this.name;\n  }\n\n  async getMany(ids: ComponentID[], throwIfNotExist = false): Promise<Component[]> {\n    const idsWithoutEmpty = compact(ids);\n    const componentsP = mapSeries(idsWithoutEmpty, async (id: ComponentID) => {\n      return throwIfNotExist ? this.getOrThrow(id) : this.get(id);\n    });\n    const components = await componentsP;\n    return compact(components);\n  }\n\n  /**\n   * load components from a scope and load their aspects\n   */\n  async loadMany(ids: ComponentID[]): Promise<Component[]> {\n    const components = await mapSeries(ids, (id) => this.load(id));\n    return compact(components);\n  }\n\n  /**\n   * get a component and throw an exception if not found.\n   * @param id component id\n   */\n  async getOrThrow(id: ComponentID): Promise<Component> {\n    const component = await this.get(id);\n    if (!component) throw new ComponentNotFound(id);\n    return component;\n  }\n\n  /**\n   * returns a specific state of a component.\n   * @param id component ID.\n   * @param hash state hash.\n   */\n  async getState(id: ComponentID, hash: string): Promise<State> {\n    return this.componentLoader.getState(id, hash);\n  }\n\n  async getSnap(id: ComponentID, hash: string): Promise<Snap> {\n    return this.componentLoader.getSnap(id, hash);\n  }\n\n  async getLogs(id: ComponentID): Promise<ComponentLog[]> {\n    return this.legacyScope.loadComponentLogs(id._legacy);\n  }\n\n  /**\n   * resolve a component ID.\n   * @param id component ID.\n   */\n  async resolveComponentId(id: string | ComponentID | BitId): Promise<ComponentID> {\n    const idStr = id.toString();\n    const component = await this.legacyScope.loadModelComponentByIdStr(idStr);\n    const getIdToCheck = () => {\n      if (component) return idStr; // component exists in the scope with the scope-name.\n      if (idStr.startsWith(`${this.name}/`)) {\n        // component with the full name doesn't exist in the scope, it might be locally tagged\n        return idStr.replace(`${this.name}/`, '');\n      }\n      return idStr;\n    };\n    const IdToCheck = getIdToCheck();\n    const legacyId = id instanceof BitId ? id : await this.legacyScope.getParsedId(IdToCheck);\n    if (!legacyId.scope) return ComponentID.fromLegacy(legacyId, this.name);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  async resolveMultipleComponentIds(ids: Array<string | ComponentID | BitId>) {\n    return Promise.all(ids.map(async (id) => this.resolveComponentId(id)));\n  }\n\n  /**\n   * load components into the scope through a variants pattern.\n   */\n  async byPattern(patterns: string[], scope = '**'): Promise<Component[]> {\n    const ids = await this.listIds(true);\n    const finalPatterns = patterns.map((pattern) => `${scope}/${pattern || '**'}`);\n    const targetIds = ids.filter((id) => {\n      return finalPatterns.some((pattern) => isMatchNamespacePatternItem(id.toStringWithoutVersion(), pattern).match);\n    });\n\n    const components = await this.getMany(targetIds);\n    return components;\n  }\n\n  async getExactVersionBySemverRange(id: ComponentID, range: string): Promise<string | undefined> {\n    const modelComponent = await this.legacyScope.getModelComponent(id._legacy);\n    const versions = modelComponent.listVersions();\n    return semver.maxSatisfying<string>(versions, range, { includePrerelease: true })?.toString();\n  }\n\n  async resumeExport(exportId: string, remotes: string[]): Promise<string[]> {\n    return resumeExport(this.legacyScope, exportId, remotes);\n  }\n\n  async resolveId(id: string): Promise<ComponentID> {\n    const legacyId = await this.legacyScope.getParsedId(id);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  // TODO: add new API for this\n  async _legacyRemotes(): Promise<Remotes> {\n    return getScopeRemotes(this.legacyScope);\n  }\n\n  /**\n   * get a component and load its aspect\n   */\n  async load(id: ComponentID): Promise<Component | undefined> {\n    const component = await this.get(id);\n    if (!component) return undefined;\n    const aspectIds = component.state.aspects.ids;\n    await this.loadAspects(aspectIds, true);\n\n    return component;\n  }\n\n  async loadComponentsAspect(component: Component) {\n    const aspectIds = component.state.aspects.ids;\n    await this.loadAspects(aspectIds, true);\n  }\n\n  /**\n   * declare the slots of scope extension.\n   */\n  static slots = [\n    Slot.withType<OnTag>(),\n    Slot.withType<OnPostPut>(),\n    Slot.withType<OnPostDelete>(),\n    Slot.withType<OnPostExport>(),\n    Slot.withType<OnPostObjectsPersist>(),\n    Slot.withType<OnPreFetchObjects>(),\n  ];\n  static runtime = MainRuntime;\n\n  static dependencies = [\n    ComponentAspect,\n    UIAspect,\n    GraphqlAspect,\n    CLIAspect,\n    IsolatorAspect,\n    AspectLoaderAspect,\n    ExpressAspect,\n    LoggerAspect,\n  ];\n\n  static defaultConfig: ScopeConfig = {\n    httpTimeOut: 600000,\n  };\n\n  static async provider(\n    [componentExt, ui, graphql, cli, isolator, aspectLoader, express, loggerMain]: [\n      ComponentMain,\n      UiMain,\n      GraphqlMain,\n      CLIMain,\n      IsolatorMain,\n      AspectLoaderMain,\n      ExpressMain,\n      LoggerMain\n    ],\n    config: ScopeConfig,\n    [tagSlot, postPutSlot, postDeleteSlot, postExportSlot, postObjectsPersistSlot, preFetchObjectsSlot]: [\n      TagRegistry,\n      OnPostPutSlot,\n      OnPostDeleteSlot,\n      OnPostExportSlot,\n      OnPostObjectsPersistSlot,\n      OnPreFetchObjectsSlot\n    ],\n    harmony: Harmony\n  ) {\n    const bitConfig: any = harmony.config.get('teambit.harmony/bit');\n    const legacyScope = await loadScopeIfExist(bitConfig?.cwd);\n    if (!legacyScope) {\n      return undefined;\n    }\n\n    const logger = loggerMain.createLogger(ScopeAspect.id);\n    const scope = new ScopeMain(\n      harmony,\n      legacyScope,\n      componentExt,\n      config,\n      tagSlot,\n      postPutSlot,\n      postDeleteSlot,\n      postExportSlot,\n      postObjectsPersistSlot,\n      preFetchObjectsSlot,\n      isolator,\n      aspectLoader,\n      logger\n    );\n    cli.registerOnStart(async (hasWorkspace: boolean) => {\n      if (hasWorkspace) return;\n      await scope.loadAspects(aspectLoader.getNotLoadedConfiguredExtensions());\n    });\n\n    const onPutHook = async (ids: string[], lanes: Lane[], authData?: AuthData): Promise<void> => {\n      logger.debug(`onPutHook, started. (${ids.length} components)`);\n      scope.componentLoader.clearCache();\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postPutSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: authData };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPutHook, completed. (${ids.length} components)`);\n    };\n\n    const getAuthData = (): AuthData | undefined => {\n      const token = Http.getToken();\n      return token ? { type: DEFAULT_AUTH_TYPE, credentials: token } : undefined;\n    };\n\n    const onPostExportHook = async (ids: BitId[], lanes: Lane[]): Promise<void> => {\n      logger.debug(`onPostExportHook, started. (${ids.length} components)`);\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postExportSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPostExportHook, completed. (${ids.length} components)`);\n    };\n\n    const onPostObjectsPersistHook = async (): Promise<void> => {\n      logger.debug(`onPostObjectsPersistHook, started`);\n      const fns = postObjectsPersistSlot.values();\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(undefined, metadata)));\n      logger.debug(`onPostObjectsPersistHook, completed`);\n    };\n\n    ExportPersist.onPutHook = onPutHook;\n    PostSign.onPutHook = onPutHook;\n    Scope.onPostExport = onPostExportHook;\n    Repository.onPostObjectsPersist = onPostObjectsPersistHook;\n\n    express.register([\n      new PutRoute(scope, postPutSlot),\n      new FetchRoute(scope, logger),\n      new ActionRoute(scope),\n      new DeleteRoute(scope),\n    ]);\n    // @ts-ignore - @ran to implement the missing functions and remove it\n    ui.registerUiRoot(new ScopeUIRoot(scope));\n    graphql.register(scopeSchema(scope));\n    componentExt.registerHost(scope);\n\n    return scope;\n  }\n}\n\nScopeAspect.addRuntime(ScopeMain);\n"]}