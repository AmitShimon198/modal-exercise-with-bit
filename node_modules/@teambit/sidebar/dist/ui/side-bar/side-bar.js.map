{"version":3,"sources":["side-bar.tsx"],"names":["SideBar","drawerSlot","itemSlot","rest","openDrawerList","onToggleDrawer","toArray","items","values","handleDrawerToggle","id","isDrawerOpen","includes","list","filter","drawer","concat","styles","sidebar","map","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAWA;AACA;AACA;AACO,SAASA,OAAT,OAAkE;AAAA,MAAjD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAiD;AAAA,MAAtBC,IAAsB;AACvE,QAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmC,uBAAS,CAACJ,UAAU,CAACK,OAAX,GAAqB,CAArB,EAAwB,CAAxB,CAAD,CAAT,CAAzC;AACA,QAAMC,KAAK,GAAG,sBAAQ,MAAM,uBAAQL,QAAR,aAAQA,QAAR,uBAAQA,QAAQ,CAAEM,MAAV,EAAR,CAAd,EAA2C,CAACN,QAAD,CAA3C,CAAd;;AAEA,QAAMO,kBAAkB,GAAIC,EAAD,IAAgB;AACzC,UAAMC,YAAY,GAAGP,cAAc,CAACQ,QAAf,CAAwBF,EAAxB,CAArB;;AACA,QAAIC,YAAJ,EAAkB;AAChBN,MAAAA,cAAc,CAAEQ,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAaC,MAAD,IAAYA,MAAM,KAAKL,EAAnC,CAAX,CAAd;AACA;AACD;;AACDL,IAAAA,cAAc,CAAEQ,IAAD,IAAUA,IAAI,CAACG,MAAL,CAAYN,EAAZ,CAAX,CAAd;AACD,GAPD;;AASA,sBACE,mEAASP,IAAT;AAAe,IAAA,SAAS,EAAEc,yBAAOC;AAAjC,mBACE,+BAAC,mCAAD;AAAa,IAAA,KAAK,EAAEX;AAApB,IADF,EAEGN,UAAU,CAACK,OAAX,GAAqBa,GAArB,CAAyB,CAAC,CAACT,EAAD,EAAKK,MAAL,CAAD,KAAkB;AAC1C,QAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACK,IAAvB,EAA6B,OAAO,IAAP;AAC7B,wBACE,+BAAC,8BAAD;AACE,MAAA,MAAM,EAAEhB,cAAc,CAACQ,QAAf,CAAwBF,EAAxB,CADV;AAEE,MAAA,QAAQ,EAAE,MAAMD,kBAAkB,CAACC,EAAD,CAFpC;AAGE,MAAA,GAAG,EAAEA,EAHP;AAIE,MAAA,IAAI,EAAEK,MAAM,CAACK;AAJf,oBAME,+BAAC,MAAD,CAAQ,MAAR,OANF,CADF;AAUD,GAZA,CAFH,CADF;AAkBD","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { flatten } from 'lodash';\nimport { MenuSection } from '@teambit/design.ui.surfaces.menu.section';\nimport { DrawerUI } from '@teambit/ui-foundation.ui.tree.drawer';\nimport { DrawerSlot, SidebarItemSlot } from '../../sidebar.ui.runtime';\nimport styles from './side-bar.module.scss';\n\nexport type SideBarProps = {\n  /**\n   * slot of registered drawers.\n   */\n  drawerSlot: DrawerSlot;\n\n  itemSlot?: SidebarItemSlot;\n} & React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * side bar component.\n */\nexport function SideBar({ drawerSlot, itemSlot, ...rest }: SideBarProps) {\n  const [openDrawerList, onToggleDrawer] = useState([drawerSlot.toArray()[0][0]]);\n  const items = useMemo(() => flatten(itemSlot?.values()), [itemSlot]);\n\n  const handleDrawerToggle = (id: string) => {\n    const isDrawerOpen = openDrawerList.includes(id);\n    if (isDrawerOpen) {\n      onToggleDrawer((list) => list.filter((drawer) => drawer !== id));\n      return;\n    }\n    onToggleDrawer((list) => list.concat(id));\n  };\n\n  return (\n    <div {...rest} className={styles.sidebar}>\n      <MenuSection items={items} />\n      {drawerSlot.toArray().map(([id, drawer]) => {\n        if (!drawer || !drawer.name) return null;\n        return (\n          <DrawerUI\n            isOpen={openDrawerList.includes(id)}\n            onToggle={() => handleDrawerToggle(id)}\n            key={id}\n            name={drawer.name}\n          >\n            <drawer.render />\n          </DrawerUI>\n        );\n      })}\n    </div>\n  );\n}\n"]}