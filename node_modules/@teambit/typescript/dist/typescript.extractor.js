"use strict";

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeScriptExtractor = void 0;

function _typedoc() {
  const data = require("typedoc");

  _typedoc = function () {
    return data;
  };

  return data;
}

// import { tmpdir } from 'os';
// import { resolve, join } from 'path';
class TypeScriptExtractor {
  constructor(tsconfig) {
    this.tsconfig = tsconfig;
  }

  async extract(component) {
    // const tsconfig = this.tsconfig;
    const paths = component.state.filesystem.files.map(file => file.path).filter(path => path.endsWith('index.ts')); // const paths = ['/Users/ranmizrahi/Bit/bit/scopes/workspace/workspace/index.ts'];

    const app = new (_typedoc().Application)();
    app.bootstrap({
      // typedoc options here
      entryPoints: paths
    });
    const project = app.convert(); // typedocApp.options.setValues({
    //   inputFiles: paths,
    //   allowJs: true,
    //   lib: ['lib.es2015.d.ts', 'lib.es2019.d.ts', 'lib.es6.d.ts', 'lib.dom.d.ts', 'lib.dom.iterable.d.ts'],
    //   jsx: 2,
    //   noEmit: true,
    //   exclude: ['node_modules', '*.scss'],
    //   esModuleInterop: true,
    // });

    if (!project) throw new Error('typedoc failed generating docs');
    return app.serializer.projectToObject(project);
  }

}

exports.TypeScriptExtractor = TypeScriptExtractor;

//# sourceMappingURL=typescript.extractor.js.map