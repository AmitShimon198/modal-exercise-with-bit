"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TypeScriptParser = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _schema() {
  const data = require("@teambit/schema");

  _schema = function () {
    return data;
  };

  return data;
}

function _fsExtra() {
  const data = require("fs-extra");

  _fsExtra = function () {
    return data;
  };

  return data;
}

function _typescript() {
  const data = _interopRequireWildcard(require("typescript"));

  _typescript = function () {
    return data;
  };

  return data;
}

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class TypeScriptParser {
  constructor() {
    (0, _defineProperty2().default)(this, "extension", /^.*\.(js|jsx|ts|tsx)$/);
  }

  getExports(sourceFile) {
    const exports = sourceFile.statements.filter(statement => {
      if (!statement.modifiers) return false;
      return statement.modifiers.find(modifier => {
        return modifier.kind === _typescript().default.SyntaxKind.ExportKeyword;
      });
    });
    const exportModels = exports.map(statement => {
      // todo refactor to a registry of variable statements.
      if ((0, _typescript().isVariableStatement)(statement)) {
        const child = statement.declarationList.declarations[0];
        const text = child.name.text;
        return new (_schema().Export)(text);
      }

      if ((0, _typescript().isFunctionDeclaration)(statement)) {
        if (!statement.name) return undefined;
        return new (_schema().Export)(statement.name.text);
      }

      if ((0, _typescript().isClassDeclaration)(statement)) {
        if (!statement.name) return undefined;
        return new (_schema().Export)(statement.name.text);
      }

      return undefined;
    });
    const withoutEmpty = exportModels.filter(exportModel => exportModel !== undefined); // @ts-ignore

    return withoutEmpty;
  }

  parseModule(modulePath) {
    const ast = _typescript().default.createSourceFile(modulePath, (0, _fsExtra().readFileSync)(modulePath, 'utf8'), _typescript().default.ScriptTarget.Latest);

    return new (_schema().Module)(this.getExports(ast));
  }

}

exports.TypeScriptParser = TypeScriptParser;

//# sourceMappingURL=typescript.parser.js.map