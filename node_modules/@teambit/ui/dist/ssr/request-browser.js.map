{"version":3,"sources":["request-browser.ts"],"names":["requestToObj","req","port","browser","connection","secure","headers","body","location","host","hostname","href","protocol","url","origin","pathname","path","query","cookie","header"],"mappings":";;;;;;;AAyDA;AACA;AACA;AACO,SAASA,YAAT,CAAsBC,GAAtB,EAAoCC,IAApC,EAAkD;AACvD;AAEA,QAAMC,OAAoB,GAAG;AAC3BC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAEJ,GAAG,CAACI,MADF;AAEVC,MAAAA,OAAO,EAAEL,GAAG,CAACK,OAFH;AAGVC,MAAAA,IAAI,EAAEN,GAAG,CAACM;AAHA,KADe;AAM3B;AACAC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAG,GAAER,GAAG,CAACS,QAAS,IAAGR,IAAK,EADtB;AAERQ,MAAAA,QAAQ,EAAET,GAAG,CAACS,QAFN;AAGRC,MAAAA,IAAI,EAAG,GAAEV,GAAG,CAACW,QAAS,MAAKX,GAAG,CAACS,QAAS,IAAGR,IAAK,GAAED,GAAG,CAACY,GAAI,EAHlD;AAIRC,MAAAA,MAAM,EAAG,GAAEb,GAAG,CAACW,QAAS,MAAKX,GAAG,CAACS,QAAS,IAAGR,IAAK,EAJ1C;AAKRa,MAAAA,QAAQ,EAAEd,GAAG,CAACe,IALN;AAMRd,MAAAA,IANQ;AAORU,MAAAA,QAAQ,EAAG,GAAEX,GAAG,CAACW,QAAS,GAPlB;AAQRK,MAAAA,KAAK,EAAEhB,GAAG,CAACgB,KARH;AASRJ,MAAAA,GAAG,EAAEZ,GAAG,CAACY;AATD,KAPiB;AAkB3BK,IAAAA,MAAM,EAAEjB,GAAG,CAACkB,MAAJ,CAAW,QAAX;AAlBmB,GAA7B;AAqBA,SAAOhB,OAAP;AACD","sourcesContent":["import type { IncomingHttpHeaders } from 'http';\nimport type { Request } from 'express';\n\nexport type ParsedQuery = { [key: string]: undefined | string | string[] | ParsedQuery | ParsedQuery[] };\n\nexport type BrowserData = {\n  connection: {\n    secure: boolean;\n    headers: IncomingHttpHeaders;\n    body: any;\n  };\n  /**\n   * isomorphic location object, resembling the browser's window.location\n   */\n  location: {\n    /** hostname + port\n     * @example localhost:3000\n     */\n    host: string;\n    /**\n     * @example localhost\n     */\n    hostname: string;\n    /** full url\n     * @example http://localhost:3000/components?q=button\n     */\n    href: string;\n    /** full url without query\n     * @example http://localhost:3000/components\n     */\n    origin: string;\n    /**\n     * @example /component\n     */\n    pathname: string;\n    /**\n     * @example 3000\n     */\n    port: number;\n    /**\n     * @example http\n     */\n    protocol: string;\n    /**\n     * parsed search params\n     * @example { one: 1, two: [2,3]}\n     */\n    query: ParsedQuery;\n    /**\n     * full resource path, including query, without hostname\n     * @example /components?q=button\n     */\n    url: string;\n  };\n  cookie?: string;\n};\n\n/**\n * extract relevant information from Express request.\n */\nexport function requestToObj(req: Request, port: number) {\n  // apparently port is not readily available in request.\n\n  const browser: BrowserData = {\n    connection: {\n      secure: req.secure,\n      headers: req.headers,\n      body: req.body,\n    },\n    // trying to match to browser.location\n    location: {\n      host: `${req.hostname}:${port}`,\n      hostname: req.hostname,\n      href: `${req.protocol}://${req.hostname}:${port}${req.url}`,\n      origin: `${req.protocol}://${req.hostname}:${port}`,\n      pathname: req.path,\n      port,\n      protocol: `${req.protocol}:`,\n      query: req.query,\n      url: req.url,\n    },\n    cookie: req.header('Cookie'),\n  };\n\n  return browser;\n}\n"]}