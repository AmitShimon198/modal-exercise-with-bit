{"version":3,"sources":["ui-server.ts"],"names":["devConfig","require","UIServer","constructor","graphql","expressExtension","ui","uiRoot","uiRootExtension","logger","publicDir","plugins","getName","name","port","_port","host","fullUrl","buildOptions","getDevConfig","aspects","resolveAspects","UIRuntime","aspectsPaths","map","aspect","aspectPath","path","generateRoot","start","portRange","app","createApp","root","server","createServer","configureProxy","use","express","static","index","Port","getPortFromRange","setupServerSideRendering","listen","info","getPluginsComponents","plugin","render","ssr","ssrMiddleware","title","warn","get","debug","proxServer","httpProxy","createProxyServer","on","e","error","message","proxyEntries","getProxyFromPlugins","req","socket","head","entry","find","proxy","context","some","item","url","ws","target","forEach","route","res","web","originalUrl","dev","selectedPort","selectPort","config","compiler","devServerConfig","getDevServerConfig","devServer","WebpackDevServer","proxiesByPlugin","getProxy","Promise","all","gqlProxies","changeOrigin","concat","devServerConf","create","props","startPlugins"],"mappings":"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","sourcesContent":["import { flatten } from 'lodash';\nimport { ExpressMain } from '@teambit/express';\nimport { GraphqlMain } from '@teambit/graphql';\nimport { Logger } from '@teambit/logger';\nimport express, { Express } from 'express';\nimport fallback from 'express-history-api-fallback';\nimport { Port } from '@teambit/toolbox.network.get-port';\nimport { Server } from 'http';\nimport httpProxy from 'http-proxy';\nimport { join } from 'path';\nimport webpack from 'webpack';\nimport WebpackDevServer, { Configuration as WdsConfiguration } from 'webpack-dev-server';\nimport { createSsrMiddleware } from './ssr/render-middleware';\nimport { StartPlugin } from './start-plugin';\nimport { ProxyEntry, UIRoot } from './ui-root';\nimport { UIRuntime } from './ui.aspect';\nimport { UiMain } from './ui.main.runtime';\n\nconst { devConfig } = require('./webpack/webpack.dev.config');\n\nexport type UIServerProps = {\n  graphql: GraphqlMain;\n  express: ExpressMain;\n  ui: UiMain;\n  uiRoot: UIRoot;\n  uiRootExtension: string;\n  logger: Logger;\n  publicDir: string;\n  startPlugins: StartPlugin[];\n};\n\nexport type StartOptions = {\n  /**\n   * port range for the UI server to bind. default is a port range of 4000-4200.\n   */\n  portRange?: number[] | number;\n};\n\nexport class UIServer {\n  constructor(\n    private graphql: GraphqlMain,\n    private expressExtension: ExpressMain,\n    private ui: UiMain,\n    private uiRoot: UIRoot,\n    private uiRootExtension: string,\n    private logger: Logger,\n    private publicDir: string,\n    private plugins: StartPlugin[]\n  ) {}\n\n  getName() {\n    return this.uiRoot.name;\n  }\n\n  private _port = 0;\n\n  get port() {\n    return this._port;\n  }\n\n  /** the hostname for the server to listen at. Currently statically 'localhost' */\n  get host() {\n    return 'localhost';\n  }\n\n  /** the server listens at this url */\n  get fullUrl() {\n    const port = this.port !== 80 ? `:${this.port}` : '';\n    return `http://${this.host}${port}`;\n  }\n\n  get buildOptions() {\n    return this.uiRoot.buildOptions;\n  }\n\n  /**\n   * get the webpack configuration of the UI server.\n   */\n  async getDevConfig(): Promise<any> {\n    const aspects = await this.uiRoot.resolveAspects(UIRuntime.name);\n    const aspectsPaths = aspects.map((aspect) => aspect.aspectPath);\n\n    return devConfig(\n      this.uiRoot.path,\n      [await this.ui.generateRoot(aspects, this.uiRootExtension)],\n      this.uiRoot.name,\n      aspectsPaths\n    );\n  }\n\n  /**\n   * start a UI server.\n   */\n  async start({ portRange }: StartOptions = {}) {\n    const app = this.expressExtension.createApp();\n    const publicDir = `/${this.publicDir}`;\n    const root = join(this.uiRoot.path, publicDir);\n    const server = await this.graphql.createServer({ app });\n\n    // set up proxy, for things like preview, e.g. '/preview/teambit.react/react'\n    await this.configureProxy(app, server);\n\n    // pass through files from public /folder:\n    // setting `index: false` so index.html will be served by the fallback() middleware\n    app.use(express.static(root, { index: false }));\n\n    const port = await Port.getPortFromRange(portRange || [3100, 3200]);\n\n    await this.setupServerSideRendering({ root, port, app });\n\n    // in any and all other cases, serve index.html.\n    // No any other endpoints past this will execute\n    app.use(fallback('index.html', { root }));\n\n    server.listen(port);\n    this._port = port;\n\n    // important: we use the string of the following message for the http.e2e.ts. if you change the message,\n    // please make sure you change the `HTTP_SERVER_READY_MSG` const.\n    this.logger.info(`UI server of ${this.uiRootExtension} is listening to port ${port}`);\n  }\n\n  getPluginsComponents() {\n    return this.plugins.map((plugin) => {\n      return plugin.render();\n    });\n  }\n\n  private async setupServerSideRendering({ root, port, app }: { root: string; port: number; app: Express }) {\n    if (!this.buildOptions?.ssr) return;\n\n    const ssrMiddleware = await createSsrMiddleware({\n      root,\n      port,\n      title: this.uiRoot.name,\n      logger: this.logger,\n    });\n\n    if (!ssrMiddleware) {\n      this.logger.warn('[ssr] middleware failed setup');\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    app.get('*', ssrMiddleware);\n    this.logger.debug('[ssr] serving for \"*\"');\n  }\n\n  private async configureProxy(app: Express, server: Server) {\n    const proxServer = httpProxy.createProxyServer();\n    proxServer.on('error', (e) => this.logger.error(e.message));\n    const proxyEntries = await this.getProxyFromPlugins();\n    server.on('upgrade', function (req, socket, head) {\n      const entry = proxyEntries.find((proxy) => proxy.context.some((item) => item === req.url));\n      if (!entry) return;\n      proxServer.ws(req, socket, head, {\n        target: entry.target,\n      });\n    });\n\n    proxyEntries.forEach((entry) => {\n      entry.context.forEach((route) => {\n        app.use(`${route}/*`, (req, res) => {\n          proxServer.web(req, res, { ...entry, target: `${entry.target}/${req.originalUrl}` });\n        });\n      });\n    });\n  }\n\n  /**\n   * start a UI dev server.\n   */\n  async dev({ portRange }: StartOptions = {}) {\n    const selectedPort = await this.selectPort(portRange);\n    await this.start({ portRange: [4100, 4200] });\n    const config = await this.getDevConfig();\n    const compiler = webpack(config);\n    const devServerConfig = await this.getDevServerConfig(this._port, config.devServer);\n    // @ts-ignore in the capsules it throws an error about compatibilities issues between webpack.compiler and webpackDevServer/webpack/compiler\n    const devServer = new WebpackDevServer(compiler, devServerConfig);\n    devServer.listen(selectedPort);\n    this._port = selectedPort;\n    return devServer;\n  }\n\n  private async selectPort(portRange?: number[] | number) {\n    return Port.getPortFromRange(portRange || [3100, 3200]);\n  }\n\n  private async getProxyFromPlugins(): Promise<ProxyEntry[]> {\n    const proxiesByPlugin = this.plugins.map((plugin) => {\n      return plugin.getProxy ? plugin.getProxy() : [];\n    });\n\n    return flatten(await Promise.all(proxiesByPlugin));\n  }\n\n  private async getProxy(port = 4000) {\n    const proxyEntries = await this.getProxyFromPlugins();\n\n    const gqlProxies: ProxyEntry[] = [\n      {\n        context: ['/graphql', '/api'],\n        target: `http://${this.host}:${port}`,\n        changeOrigin: true,\n      },\n      {\n        context: ['/subscriptions'],\n        target: `ws://${this.host}:${port}`,\n        ws: true,\n      },\n    ];\n\n    return gqlProxies.concat(proxyEntries);\n  }\n\n  private async getDevServerConfig(port: number, config?: WdsConfiguration): Promise<WdsConfiguration> {\n    const proxy = await this.getProxy(port);\n    const devServerConf = { ...config, proxy };\n\n    return devServerConf;\n  }\n\n  static create(props: UIServerProps) {\n    return new UIServer(\n      props.graphql,\n      props.express,\n      props.ui,\n      props.uiRoot,\n      props.uiRootExtension,\n      props.logger,\n      props.publicDir,\n      props.startPlugins\n    );\n  }\n}\n"]}