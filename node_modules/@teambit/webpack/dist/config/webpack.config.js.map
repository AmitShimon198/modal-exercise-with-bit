{"version":3,"sources":["webpack.config.ts"],"names":["configFactory","entries","rootPath","mode","bail","entry","filter","Boolean","output","path","filename","chunkFilename","publicPath","resolve","alias","fallbacksAliases","fallback","fallbacks","plugins","HtmlWebpackPlugin","Object","assign","inject","templateContent","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","webpack","ProvidePlugin","fallbacksProvidePluginConfig"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,SAASA,aAAT,CAAuBC,OAAvB,EAA0CC,QAA1C,EAA2E;AAChF,SAAO;AACLC,IAAAA,IAAI,EAAE,YADD;AAEL;AACAC,IAAAA,IAAI,EAAE,IAHD;AAIL;AACA;AACAC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,MAAR,CAAeC,OAAf,CANF;AAQLC,IAAAA,MAAM,EAAE;AACN;AACAC,MAAAA,IAAI,EAAG,GAAEP,QAAS,SAFZ;AAINQ,MAAAA,QAAQ,EAAE,qCAJJ;AAKN;AACAC,MAAAA,aAAa,EAAE,2CANT;AAON;AACA;AACA;AACAC,MAAAA,UAAU,EAAG,EAVP,CAWN;AACA;AACA;AACA;;AAdM,KARH;AAyBLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEC,2CADA;AAGP;AACAC,MAAAA,QAAQ,EAAEC;AAJH,KAzBJ;AAgCLC,IAAAA,OAAO,EAAE,CACP,KAAIC,4BAAJ,EACEC,MAAM,CAACC,MAAP,CACE,EADF,EAEE;AACEC,MAAAA,MAAM,EAAE,IADV;AAEEC,MAAAA,eAAe,EAAE,kBAAK,SAAL;AAFnB,KAFF,EAME;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,cAAc,EAAE,IADV;AAENC,QAAAA,kBAAkB,EAAE,IAFd;AAGNC,QAAAA,yBAAyB,EAAE,IAHrB;AAINC,QAAAA,eAAe,EAAE,IAJX;AAKNC,QAAAA,qBAAqB,EAAE,IALjB;AAMNC,QAAAA,6BAA6B,EAAE,IANzB;AAONC,QAAAA,gBAAgB,EAAE,IAPZ;AAQNC,QAAAA,QAAQ,EAAE,IARJ;AASNC,QAAAA,SAAS,EAAE,IATL;AAUNC,QAAAA,UAAU,EAAE;AAVN;AADV,KANF,CADF,CADO,EAwBP,KAAIC,mBAAQC,aAAZ,EAA0BC,mEAA1B,CAxBO;AAhCJ,GAAP;AA2DD","sourcesContent":["import webpack, { Configuration } from 'webpack';\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\nimport { fallbacks } from './webpack-fallbacks';\nimport { fallbacksProvidePluginConfig } from './webpack-fallbacks-provide-plugin-config';\nimport { fallbacksAliases } from './webpack-fallbacks-aliases';\nimport { html } from './html';\n\nexport function configFactory(entries: string[], rootPath: string): Configuration {\n  return {\n    mode: 'production',\n    // Stop compilation early in production\n    bail: true,\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: entries.filter(Boolean),\n\n    output: {\n      // The build folder.\n      path: `${rootPath}/public`,\n\n      filename: 'static/js/[name].[contenthash:8].js',\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: 'static/js/[name].[contenthash:8].chunk.js',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: ``,\n      // this defaults to 'window', but by setting it to 'this' then\n      // module chunks which are built will work in web workers as well.\n      // Commented out to use the default (self) as according to tobias with webpack5 self is working with workers as well\n      // globalObject: 'this',\n    },\n\n    resolve: {\n      alias: fallbacksAliases,\n\n      // @ts-ignore\n      fallback: fallbacks,\n    },\n\n    plugins: [\n      new HtmlWebpackPlugin(\n        Object.assign(\n          {},\n          {\n            inject: true,\n            templateContent: html('Preview'),\n          },\n          {\n            minify: {\n              removeComments: true,\n              collapseWhitespace: true,\n              removeRedundantAttributes: true,\n              useShortDoctype: true,\n              removeEmptyAttributes: true,\n              removeStyleLinkTypeAttributes: true,\n              keepClosingSlash: true,\n              minifyJS: true,\n              minifyCSS: true,\n              minifyURLs: true,\n            },\n          }\n        )\n      ),\n      new webpack.ProvidePlugin(fallbacksProvidePluginConfig),\n    ],\n  };\n}\n"]}