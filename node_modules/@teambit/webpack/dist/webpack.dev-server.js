"use strict";

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebpackDevServer = void 0;

class WebpackDevServer {
  constructor(config, webpack, WsDevServer) {
    this.config = config;
    this.webpack = webpack;
    this.WsDevServer = WsDevServer;
  }

  getCompiler() {
    return this.webpack(this.config);
  }

  async listen(port) {
    if (!this.config.devServer) {
      throw new Error('Missing devServer configuration for webpack');
    } // Prevent different port between the config port and the listen arg port


    this.config.devServer.port = port; // Adding signal listeners to make sure we immediately close the process on sigint / sigterm (otherwise webpack dev server closing will take time)

    this.addSignalListener(); // @ts-ignore in the capsules it throws an error about compatibilities issues between webpack.compiler and webpackDevServer/webpack/compiler

    const webpackDs = new this.WsDevServer(this.config.devServer, this.getCompiler());
    await webpackDs.start();
    return webpackDs.server;
  }

  addSignalListener() {
    process.on('SIGTERM', () => {
      process.exit();
    });
    process.on('SIGINT', () => {
      process.exit();
    });
  }

}

exports.WebpackDevServer = WebpackDevServer;

//# sourceMappingURL=webpack.dev-server.js.map