{"version":3,"sources":["webpack.dev-server.ts"],"names":["WebpackDevServer","constructor","config","webpack","WsDevServer","getCompiler","listen","port","devServer","Error","addSignalListener","webpackDs","start","server","process","on","exit"],"mappings":";;;;;;;;;AAQO,MAAMA,gBAAN,CAA4C;AACjDC,EAAAA,WAAW,CACDC,MADC,EAEDC,OAFC,EAGDC,WAHC,EAIT;AAAA,SAHQF,MAGR,GAHQA,MAGR;AAAA,SAFQC,OAER,GAFQA,OAER;AAAA,SADQC,WACR,GADQA,WACR;AAAE;;AAEIC,EAAAA,WAAW,GAAQ;AACzB,WAAO,KAAKF,OAAL,CAAa,KAAKD,MAAlB,CAAP;AACD;;AAEW,QAANI,MAAM,CAACC,IAAD,EAAgC;AAC1C,QAAI,CAAC,KAAKL,MAAL,CAAYM,SAAjB,EAA4B;AAC1B,YAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD,KAHyC,CAI1C;;;AACA,SAAKP,MAAL,CAAYM,SAAZ,CAAsBD,IAAtB,GAA6BA,IAA7B,CAL0C,CAO1C;;AACA,SAAKG,iBAAL,GAR0C,CAS1C;;AACA,UAAMC,SAAc,GAAG,IAAI,KAAKP,WAAT,CAAqB,KAAKF,MAAL,CAAYM,SAAjC,EAA4C,KAAKH,WAAL,EAA5C,CAAvB;AACA,UAAMM,SAAS,CAACC,KAAV,EAAN;AAEA,WAAOD,SAAS,CAACE,MAAjB;AACD;;AAEOH,EAAAA,iBAAiB,GAAG;AAC1BI,IAAAA,OAAO,CAACC,EAAR,CAAW,SAAX,EAAsB,MAAM;AAC1BD,MAAAA,OAAO,CAACE,IAAR;AACD,KAFD;AAIAF,IAAAA,OAAO,CAACC,EAAR,CAAW,QAAX,EAAqB,MAAM;AACzBD,MAAAA,OAAO,CAACE,IAAR;AACD,KAFD;AAGD;;AAnCgD","sourcesContent":["import type { DevServer } from '@teambit/bundler';\nimport type { Server } from 'http';\nimport type { webpack as webpackCompiler, Configuration } from 'webpack';\nimport type * as WDS from 'webpack-dev-server';\n\nexport interface WebpackConfigWithDevServer extends Configuration {\n  devServer: WDS.Configuration;\n}\nexport class WebpackDevServer implements DevServer {\n  constructor(\n    private config: WebpackConfigWithDevServer,\n    private webpack: typeof webpackCompiler,\n    private WsDevServer: WDS\n  ) {}\n\n  private getCompiler(): any {\n    return this.webpack(this.config);\n  }\n\n  async listen(port: number): Promise<Server> {\n    if (!this.config.devServer) {\n      throw new Error('Missing devServer configuration for webpack');\n    }\n    // Prevent different port between the config port and the listen arg port\n    this.config.devServer.port = port;\n\n    // Adding signal listeners to make sure we immediately close the process on sigint / sigterm (otherwise webpack dev server closing will take time)\n    this.addSignalListener();\n    // @ts-ignore in the capsules it throws an error about compatibilities issues between webpack.compiler and webpackDevServer/webpack/compiler\n    const webpackDs: WDS = new this.WsDevServer(this.config.devServer, this.getCompiler());\n    await webpackDs.start();\n\n    return webpackDs.server;\n  }\n\n  private addSignalListener() {\n    process.on('SIGTERM', () => {\n      process.exit();\n    });\n\n    process.on('SIGINT', () => {\n      process.exit();\n    });\n  }\n}\n"]}