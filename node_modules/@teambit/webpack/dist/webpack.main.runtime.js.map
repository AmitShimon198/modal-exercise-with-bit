{"version":3,"sources":["webpack.main.runtime.ts"],"names":["WebpackMain","constructor","pubsub","workspace","bundler","logger","createDevServer","context","transformers","config","createDevServerConfig","entry","path","id","rootPath","publicPath","title","configMutator","WebpackConfigMutator","transformerContext","mode","afterMutation","runTransformersWithContext","clone","WebpackDevServer","raw","webpack","WsDevServer","mergeConfig","target","source","createBundler","configs","createPreviewConfig","targets","mutatedConfigs","map","WebpackBundler","entries","outputPath","devServerID","publicRoot","provider","logPublisher","createLogger","WebpackAspect","MainRuntime","PubsubAspect","WorkspaceAspect","BundlerAspect","LoggerAspect","addRuntime","Array","isArray","newConfig","reduce","acc","transformer"],"mappings":"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","sourcesContent":["import PubsubAspect, { PubsubMain } from '@teambit/pubsub';\nimport {\n  BundlerAspect,\n  BundlerContext,\n  BundlerMain,\n  DevServer,\n  DevServerContext,\n  BundlerMode,\n  Target,\n} from '@teambit/bundler';\nimport { MainRuntime } from '@teambit/cli';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { merge } from 'webpack-merge';\nimport webpack from 'webpack';\nimport WsDevServer from 'webpack-dev-server';\nimport { WebpackConfigMutator } from '@teambit/webpack.modules.config-mutator';\n\nimport { configFactory as devServerConfigFactory } from './config/webpack.dev.config';\nimport { configFactory as previewConfigFactory } from './config/webpack.config';\n\nimport { WebpackAspect } from './webpack.aspect';\nimport { WebpackBundler } from './webpack.bundler';\nimport { WebpackDevServer } from './webpack.dev-server';\n\nexport type WebpackConfigTransformContext = {\n  mode: BundlerMode;\n};\nexport type WebpackConfigTransformer = (\n  config: WebpackConfigMutator,\n  context: WebpackConfigTransformContext\n) => WebpackConfigMutator;\n\nexport class WebpackMain {\n  constructor(\n    /**\n     * Pubsub extension.\n     */\n    public pubsub: PubsubMain,\n\n    /**\n     * workspace extension.\n     */\n    private workspace: Workspace,\n\n    /**\n     * bundler extension.\n     */\n    private bundler: BundlerMain,\n\n    /**\n     * Logger extension\n     */\n    public logger: Logger\n  ) {}\n\n  /**\n   * create an instance of bit-compliant webpack dev server for a set of components\n   */\n  createDevServer(context: DevServerContext, transformers: WebpackConfigTransformer[] = []): DevServer {\n    const config = this.createDevServerConfig(\n      context.entry,\n      this.workspace.path,\n      context.id,\n      context.rootPath,\n      context.publicPath,\n      context.title\n    ) as any;\n    const configMutator = new WebpackConfigMutator(config);\n    const transformerContext: WebpackConfigTransformContext = { mode: 'dev' };\n    const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, transformerContext);\n    // @ts-ignore - fix this\n    return new WebpackDevServer(afterMutation.raw, webpack, WsDevServer);\n  }\n\n  mergeConfig(target: any, source: any): any {\n    return merge(target, source);\n  }\n\n  createBundler(context: BundlerContext, transformers: WebpackConfigTransformer[] = []) {\n    const configs = this.createPreviewConfig(context.targets);\n    const transformerContext: WebpackConfigTransformContext = { mode: 'prod' };\n    const mutatedConfigs = configs.map((config) => {\n      const configMutator = new WebpackConfigMutator(config);\n      const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, transformerContext);\n      return afterMutation.raw;\n    });\n    return new WebpackBundler(context.targets, mutatedConfigs, this.logger, webpack);\n  }\n\n  private createPreviewConfig(targets: Target[]) {\n    return targets.map((target) => {\n      return previewConfigFactory(target.entries, target.outputPath);\n    });\n  }\n\n  private createDevServerConfig(\n    entry: string[],\n    rootPath: string,\n    devServerID: string,\n    publicRoot: string,\n    publicPath: string,\n    title?: string\n  ) {\n    return devServerConfigFactory(devServerID, rootPath, entry, publicRoot, publicPath, this.pubsub, title);\n  }\n\n  static slots = [];\n\n  static runtime = MainRuntime;\n  static dependencies = [PubsubAspect, WorkspaceAspect, BundlerAspect, LoggerAspect];\n\n  static async provider([pubsub, workspace, bundler, logger]: [PubsubMain, Workspace, BundlerMain, LoggerMain]) {\n    const logPublisher = logger.createLogger(WebpackAspect.id);\n    return new WebpackMain(pubsub, workspace, bundler, logPublisher);\n  }\n}\n\nWebpackAspect.addRuntime(WebpackMain);\n\nexport function runTransformersWithContext(\n  config: WebpackConfigMutator,\n  transformers: WebpackConfigTransformer[] = [],\n  context: WebpackConfigTransformContext\n): WebpackConfigMutator {\n  if (!Array.isArray(transformers)) return config;\n  const newConfig = transformers.reduce((acc, transformer) => {\n    return transformer(acc, context);\n  }, config);\n  return newConfig;\n}\n"]}