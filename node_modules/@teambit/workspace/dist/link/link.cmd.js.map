{"version":3,"sources":["link.cmd.ts"],"names":["LinkCommand","constructor","workspace","logger","BASE_DOCS_DOMAIN","report","ids","opts","startTime","Date","now","linkResults","json","endTime","numOfComponents","legacyLinkResults","length","timeDiff","coreAspectsLinksWithMainAspect","coreAspectsLinks","teambitBitLink","unshift","numOfCoreAspects","title","name","coreLinks","verbose","compsLinks","componentListLinks","rewireRow","legacyCodemodResults","legacyLinkCodemodResults","nestedLinks","nestedDepsInNmLinks","targetLinks","linkToDirResults","footer","console","chalk","cyan","linkOpts","legacyLink","rewire","linkCoreAspects","linkTeambitBit","linkToDir","target","link"],"mappings":"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","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport { LinkResults } from '@teambit/dependency-resolver';\nimport { Logger } from '@teambit/logger';\nimport { BASE_DOCS_DOMAIN } from '@teambit/legacy/dist/constants';\nimport { timeFormat } from '@teambit/toolbox.time.time-format';\nimport chalk from 'chalk';\nimport { Workspace, WorkspaceLinkOptions } from '../workspace';\nimport { ComponentListLinks } from './component-list-links';\nimport { CoreAspectsLinks } from './core-aspects-links';\nimport { NestedComponentLinksLinks } from './nested-deps-in-nm-links';\nimport { RewireRow } from './rewire-row';\nimport { linkToDir } from './link-to-dir';\n\ntype LinkCommandOpts = {\n  rewire: boolean;\n  verbose: boolean;\n  target: string;\n};\nexport class LinkCommand implements Command {\n  name = 'link [ids...]';\n  alias = '';\n  description = `generate symlinks to resolve module paths for imported components.\\n  https://${BASE_DOCS_DOMAIN}/docs/dependencies#missing-links`;\n  shortDescription = 'link components and core aspects';\n  group = 'development';\n  private = false;\n  options = [\n    ['j', 'json', 'return the output as JSON'],\n    ['', 'verbose', 'verbose output'],\n    ['r', 'rewire', 'Replace relative paths with module paths in code (e.g. \"../foo\" => \"@bit/foo\")'],\n    [\n      '',\n      'target <dir>',\n      'EXPERIMENTAL. link to an external directory (similar to npm-link) so other projects could use these components',\n    ],\n  ] as CommandOptions;\n\n  constructor(\n    /**\n     * workspace extension.\n     */\n    private workspace: Workspace,\n\n    /**\n     * logger extension.\n     */\n    private logger: Logger\n  ) {}\n\n  async report([ids]: [string[]], opts: LinkCommandOpts) {\n    const startTime = Date.now();\n    const linkResults = await this.json([ids], opts);\n    const endTime = Date.now();\n    const numOfComponents = linkResults.legacyLinkResults?.length;\n    const timeDiff = timeFormat(endTime - startTime);\n    const coreAspectsLinksWithMainAspect = linkResults.coreAspectsLinks || [];\n    if (linkResults.teambitBitLink) {\n      coreAspectsLinksWithMainAspect.unshift(linkResults.teambitBitLink);\n    }\n    const numOfCoreAspects = coreAspectsLinksWithMainAspect.length;\n\n    const title = `Linked ${numOfComponents} components and ${numOfCoreAspects} core aspects to node_modules for workspace: ${this.workspace.name}`;\n    const coreLinks = CoreAspectsLinks({\n      coreAspectsLinks: coreAspectsLinksWithMainAspect,\n      verbose: opts.verbose,\n    });\n    const compsLinks = ComponentListLinks({ componentListLinks: linkResults.legacyLinkResults, verbose: opts.verbose });\n    const rewireRow = RewireRow({ legacyCodemodResults: linkResults.legacyLinkCodemodResults });\n    const nestedLinks = NestedComponentLinksLinks({\n      nestedDepsInNmLinks: linkResults.nestedDepsInNmLinks,\n      verbose: opts.verbose,\n    });\n    const targetLinks = linkToDir(linkResults.linkToDirResults);\n    const footer = `Finished. ${timeDiff}`;\n    return `${title}\\n${coreLinks}\\n${compsLinks}\\n${rewireRow}${nestedLinks}${targetLinks}${footer}`;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async json([ids]: [string[]], opts: LinkCommandOpts): Promise<LinkResults> {\n    this.logger.console(\n      `Linking components and core aspects to node_modules for workspaces: '${chalk.cyan(this.workspace.name)}'`\n    );\n\n    const linkOpts: WorkspaceLinkOptions = {\n      legacyLink: true,\n      rewire: opts.rewire,\n      linkCoreAspects: true,\n      linkTeambitBit: true,\n      linkToDir: opts.target,\n    };\n    const linkResults = await this.workspace.link(linkOpts);\n    return linkResults;\n  }\n}\n"]}