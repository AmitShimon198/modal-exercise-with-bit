{"version":3,"sources":["workspace-components.drawer.tsx"],"names":["WorkspaceComponentsDrawer","constructor","treeNodeSlot","workspace","WorkspaceContext","TreeNodeRenderer","TreeNode","props","children","node","payload","ScopePayload","components","length","mutedItalic","ellipsis","styles","emptyWorkspace"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAWA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,MAAMA,yBAAN,CAAsD;AAC3DC,EAAAA,WAAW,CAASC,YAAT,EAA0C;AAAA,SAAjCA,YAAiC,GAAjCA,YAAiC;AAAA,kDAE9C,YAF8C;AAAA,oDAI5C,MAAM;AACb,YAAMC,SAAS,GAAG,yBAAWC,oCAAX,CAAlB;AACA,YAAM;AAAEF,QAAAA;AAAF,UAAmB,IAAzB;AAEA,YAAMG,gBAAgB,GAAG,0BACvB,SAASC,QAAT,CAAkBC,KAAlB,EAAqD;AACnD,cAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWD,QAA5B;AAEA,YAAI,CAACA,QAAL,EAAe,oBAAO,+BAAC,gCAAD,+BAAmBD,KAAnB;AAA0B,UAAA,YAAY,EAAEL;AAAxC,WAAP;AAEf,YAAIK,KAAK,CAACE,IAAN,CAAWC,OAAX,YAA8BC,+BAAlC,EAAgD,oBAAO,+BAAC,gCAAD,EAAmBJ,KAAnB,CAAP;AAEhD,4BAAO,+BAAC,oCAAD,EAAuBA,KAAvB,CAAP;AACD,OATsB,EAUvB,CAACL,YAAD,CAVuB,CAAzB;AAaA,UAAI,CAACC,SAAL,EAAgB,oBAAO,+BAAC,4BAAD,OAAP;AAChB,UAAIA,SAAS,CAACS,UAAV,CAAqBC,MAArB,KAAgC,CAApC,EACE,oBAAO;AAAM,QAAA,SAAS,EAAE,2BAAWC,6BAAX,EAAwBC,2BAAxB,EAAkCC,2CAAOC,cAAzC;AAAjB,8BAAP;AACF,0BAAO,+BAAC,gCAAD;AAAe,QAAA,UAAU,EAAEd,SAAS,CAACS,UAArC;AAAiD,QAAA,QAAQ,EAAEP;AAA3D,QAAP;AACD,KAzBoD;AAAE;;AADI","sourcesContent":["import type { DrawerType } from '@teambit/ui-foundation.ui.tree.drawer';\nimport { FullLoader } from '@teambit/ui-foundation.ui.full-loader';\nimport {\n  ComponentTree,\n  PayloadType,\n  ComponentView,\n  ScopeTreeNode,\n  NamespaceTreeNode,\n  ScopePayload,\n} from '@teambit/ui-foundation.ui.side-bar';\n\nimport type { TreeNodeProps } from '@teambit/base-ui.graph.tree.recursive-tree';\n\nimport React, { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport { ComponentTreeSlot } from '@teambit/component-tree';\nimport { mutedItalic } from '@teambit/design.ui.styles.muted-italic';\nimport { ellipsis } from '@teambit/design.ui.styles.ellipsis';\nimport { WorkspaceContext } from '../workspace/workspace-context';\nimport styles from './workspace-components-drawer.module.scss';\n\nexport class WorkspaceComponentsDrawer implements DrawerType {\n  constructor(private treeNodeSlot: ComponentTreeSlot) {}\n\n  name = 'COMPONENTS';\n\n  render = () => {\n    const workspace = useContext(WorkspaceContext);\n    const { treeNodeSlot } = this;\n\n    const TreeNodeRenderer = useCallback(\n      function TreeNode(props: TreeNodeProps<PayloadType>) {\n        const children = props.node.children;\n\n        if (!children) return <ComponentView {...props} treeNodeSlot={treeNodeSlot} />;\n\n        if (props.node.payload instanceof ScopePayload) return <ScopeTreeNode {...props} />;\n\n        return <NamespaceTreeNode {...props} />;\n      },\n      [treeNodeSlot]\n    );\n\n    if (!workspace) return <FullLoader />;\n    if (workspace.components.length === 0)\n      return <span className={classNames(mutedItalic, ellipsis, styles.emptyWorkspace)}>Workspace is empty</span>;\n    return <ComponentTree components={workspace.components} TreeNode={TreeNodeRenderer} />;\n  };\n}\n"]}