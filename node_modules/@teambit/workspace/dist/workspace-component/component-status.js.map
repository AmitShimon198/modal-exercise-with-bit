{"version":3,"sources":["component-status.ts"],"names":["ComponentStatus","constructor","modifyInfo","isNew","isDeleted","isStaged","isInWorkspace","isInScope","isOutdated","nested","fromLegacy","status","hasModifiedDependencies","modify","hasModifiedFiles","modified","newlyCreated","deleted","staged","notExist","missingFromScope"],"mappings":";;;;;;;AAOO,MAAMA,eAAN,CAAsB;AAC3BC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,UAJA;AAMT;AACJ;AACA;AACaC,EAAAA,KATA;AAWT;AACJ;AACA;AACaC,EAAAA,SAdA;AAgBT;AACJ;AACA;AACaC,EAAAA,QAnBA;AAqBT;AACJ;AACA;AACaC,EAAAA,aAxBA;AA0BT;AACJ;AACA;AACaC,EAAAA,SA7BA;AA+BT;AACJ;AACA;AACaC,EAAAA,UAlCA;AAoCT;AACJ;AACA;AACaC,EAAAA,MAvCA,EAwCT;AAAA,SApCSP,UAoCT,GApCSA,UAoCT;AAAA,SA/BSC,KA+BT,GA/BSA,KA+BT;AAAA,SA1BSC,SA0BT,GA1BSA,SA0BT;AAAA,SArBSC,QAqBT,GArBSA,QAqBT;AAAA,SAhBSC,aAgBT,GAhBSA,aAgBT;AAAA,SAXSC,SAWT,GAXSA,SAWT;AAAA,SANSC,UAMT,GANSA,UAMT;AAAA,SADSC,MACT,GADSA,MACT;AAAE;;AAEa,SAAVC,UAAU,CAACC,MAAD,EAAgCC,uBAAhC,EAAkEJ,UAAlE,EAAuF;AACtG,UAAMK,MAAkB,GAAG;AACzBC,MAAAA,gBAAgB,EAAE,CAAC,CAACH,MAAM,CAACI,QADF;AAEzBH,MAAAA;AAFyB,KAA3B;AAIA,WAAO,IAAIZ,eAAJ,CACLa,MADK,EAEL,CAAC,CAACF,MAAM,CAACK,YAFJ,EAGL,CAAC,CAACL,MAAM,CAACM,OAHJ,EAIL,CAAC,CAACN,MAAM,CAACO,MAJJ,EAKL,CAACP,MAAM,CAACQ,QALH,EAML,CAACR,MAAM,CAACS,gBANH,EAOLZ,UAPK,EAQL,CAAC,CAACG,MAAM,CAACF,MARJ,CAAP;AAUD;;AA1D0B","sourcesContent":["import { ComponentStatus as LegacyComponentStatus } from '@teambit/legacy/dist/consumer/component-ops/component-status-loader';\n\nexport type ModifyInfo = {\n  hasModifiedFiles: boolean;\n  hasModifiedDependencies: boolean;\n};\n\nexport class ComponentStatus {\n  constructor(\n    /**\n     * is the component modified.\n     */\n    readonly modifyInfo: ModifyInfo,\n\n    /**\n     * is the new component new.\n     */\n    readonly isNew: boolean,\n\n    /**\n     * is the component deleted from the workspace.\n     */\n    readonly isDeleted: boolean,\n\n    /**\n     * is the component staged.\n     */\n    readonly isStaged: boolean,\n\n    /**\n     * does the component exists in the workspace.\n     */\n    readonly isInWorkspace: boolean,\n\n    /**\n     * does the component exists in the scope.\n     */\n    readonly isInScope: boolean,\n\n    /**\n     * does the component is outdated (pending for update).\n     */\n    readonly isOutdated: boolean,\n\n    /**\n     *  the component is not authored and not imported.\n     */\n    readonly nested?: boolean\n  ) {}\n\n  static fromLegacy(status: LegacyComponentStatus, hasModifiedDependencies: boolean, isOutdated: boolean) {\n    const modify: ModifyInfo = {\n      hasModifiedFiles: !!status.modified,\n      hasModifiedDependencies,\n    };\n    return new ComponentStatus(\n      modify,\n      !!status.newlyCreated,\n      !!status.deleted,\n      !!status.staged,\n      !status.notExist,\n      !status.missingFromScope,\n      isOutdated,\n      !!status.nested\n    );\n  }\n}\n"]}