import { ComponentUI, ComponentModel } from '@teambit/component';
import { ComponentTreeUI, ComponentTreeNode } from '@teambit/component-tree';
import { SlotRegistry } from '@teambit/harmony';
import { ReactRouterUI } from '@teambit/react-router';
import { RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';
import { SidebarUI, SidebarItem, SidebarItemSlot } from '@teambit/sidebar';
import { MenuItemSlot, MenuItem } from '@teambit/ui-foundation.ui.main-dropdown';
import { UIRootUI as UIRoot, UiUI } from '@teambit/ui';
import { GraphUI } from '@teambit/graph';
import { RouteProps } from 'react-router-dom';
import { CommandBarUI, ComponentSearcher } from '@teambit/command-bar';
export declare type SidebarWidgetSlot = SlotRegistry<ComponentTreeNode>;
export declare class WorkspaceUI {
    private routeSlot;
    private componentUi;
    private menuSlot;
    private menuItemSlot;
    private sidebar;
    private sidebarSlot;
    private sidebarItemSlot;
    private commandBarUI;
    constructor(routeSlot: RouteSlot, componentUi: ComponentUI, menuSlot: RouteSlot, menuItemSlot: MenuItemSlot, sidebar: SidebarUI, sidebarSlot: SidebarWidgetSlot, sidebarItemSlot: SidebarItemSlot, commandBarUI: CommandBarUI, reactRouterUI: ReactRouterUI);
    private setKeyBindHandler;
    registerRoute(route: RouteProps): this;
    registerSidebarWidget(componentTreeNode: ComponentTreeNode): this;
    registerMenuItem: (menuItems: MenuItem[]) => void;
    setComponents: (components: ComponentModel[]) => void;
    registerSidebarLink: (...links: SidebarItem[]) => void;
    componentSearcher: ComponentSearcher;
    uiRoot(): UIRoot;
    private menuItems;
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: (((registerFn: () => string) => SlotRegistry<RouteProps<string, {
        [x: string]: string | undefined;
    }>>) | ((registerFn: () => string) => SlotRegistry<ComponentTreeNode>) | ((registerFn: () => string) => SlotRegistry<MenuItemSlot>) | ((registerFn: () => string) => SlotRegistry<SidebarItemSlot>))[];
    static provider([ui, componentUi, sidebar, componentTree, commandBarUI, reactRouterUI, graphUI]: [
        UiUI,
        ComponentUI,
        SidebarUI,
        ComponentTreeUI,
        CommandBarUI,
        ReactRouterUI,
        GraphUI
    ], config: any, [routeSlot, menuSlot, menuItemSlot, sidebarSlot, sidebarItemSlot]: [
        RouteSlot,
        RouteSlot,
        MenuItemSlot,
        SidebarWidgetSlot,
        SidebarItemSlot
    ]): Promise<WorkspaceUI>;
}
export default WorkspaceUI;
