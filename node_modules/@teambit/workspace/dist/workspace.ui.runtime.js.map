{"version":3,"sources":["workspace.ui.runtime.tsx"],"names":["WorkspaceUI","constructor","routeSlot","componentUi","menuSlot","menuItemSlot","sidebar","sidebarSlot","sidebarItemSlot","commandBarUI","reactRouterUI","menuItems","register","components","componentSearcher","update","links","category","title","keyChar","handler","run","ComponentSearcher","navigateTo","registerRoute","route","registerSidebarWidget","componentTreeNode","uiRoot","registerDrawer","WorkspaceComponentsDrawer","addSearcher","setKeyBindHandler","addCommand","id","displayName","keybinding","routes","path","children","provider","ui","componentTree","graphUI","config","registerTreeNode","ComponentTreeWidget","registerComponentWidget","widget","workspaceUI","registerRoot","bind","registerMenuItem","registerSidebarLink","exact","routePath","getMenu","WorkspaceAspect","getComponentUI","UIAspect","ComponentAspect","SidebarAspect","ComponentTreeAspect","CommandBarAspect","ReactRouterAspect","GraphAspect","UIRuntime","Slot","withType","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAIO,MAAMA,WAAN,CAAkB;AACvBC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,SAJC;AAMT;AACJ;AACA;AACYC,EAAAA,WATC;AAWT;AACJ;AACA;AACYC,EAAAA,QAdC,EAgBDC,YAhBC,EAkBDC,OAlBC,EAoBDC,WApBC;AAsBT;AACJ;AACA;AACYC,EAAAA,eAzBC,EA2BDC,YA3BC,EA6BTC,aA7BS,EA8BT;AAAA,SA1BQR,SA0BR,GA1BQA,SA0BR;AAAA,SArBQC,WAqBR,GArBQA,WAqBR;AAAA,SAhBQC,QAgBR,GAhBQA,QAgBR;AAAA,SAdQC,YAcR,GAdQA,YAcR;AAAA,SAZQC,OAYR,GAZQA,OAYR;AAAA,SAVQC,WAUR,GAVQA,WAUR;AAAA,SALQC,eAKR,GALQA,eAKR;AAAA,SAHQC,YAGR,GAHQA,YAGR;AAAA,+DAI6D,MAAM,CAAE,CAJrE;AAAA,8DAmBkBE,SAAD,IAA2B;AAC5C,WAAKN,YAAL,CAAkBO,QAAlB,CAA2BD,SAA3B;AACD,KArBC;AAAA,2DAuBeE,UAAD,IAAkC;AAChD,WAAKC,iBAAL,CAAuBC,MAAvB,CAA8BF,UAA9B;AACD,KAzBC;AAAA,iEA2BoB,CAAC,GAAGG,KAAJ,KAA6B;AACjD,WAAKR,eAAL,CAAqBI,QAArB,CAA8BI,KAA9B;AACD,KA7BC;AAAA;AAAA,uDA8D8B,CAC9B;AACEC,MAAAA,QAAQ,EAAE,SADZ;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,OAAO,EAAE,OAHX;AAIEC,MAAAA,OAAO,EAAE;AAAA;;AAAA,qCAAM,KAAKX,YAAX,uDAAM,mBAAmBY,GAAnB,CAAuB,kBAAvB,CAAN;AAAA;AAJX,KAD8B,EAO9B;AACEJ,MAAAA,QAAQ,EAAE,SADZ;AAEEC,MAAAA,KAAK,EAAE,uBAFT;AAGEC,MAAAA,OAAO,EAAE,OAHX;AAIEC,MAAAA,OAAO,EAAE;AAAA;;AAAA,sCAAM,KAAKX,YAAX,wDAAM,oBAAmBY,GAAnB,CAAuB,gBAAvB,CAAN;AAAA;AAJX,KAP8B,CA9D9B;AACA,SAAKP,iBAAL,GAAyB,KAAIQ,+BAAJ,EAAsBZ,aAAa,CAACa,UAApC,CAAzB;AACD;;AAID;AACF;AACA;AACEC,EAAAA,aAAa,CAACC,KAAD,EAAoB;AAC/B,SAAKvB,SAAL,CAAeU,QAAf,CAAwBa,KAAxB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,iBAAD,EAAuC;AAC1D,SAAKpB,WAAL,CAAiBK,QAAjB,CAA0Be,iBAA1B;AACA,WAAO,IAAP;AACD;;AAgBDC,EAAAA,MAAM,GAAW;AACf,SAAKtB,OAAL,CAAauB,cAAb,CAA4B,KAAIC,sDAAJ,EAA8B,KAAKvB,WAAnC,CAA5B;AACA,SAAKE,YAAL,CAAkBsB,WAAlB,CAA8B,KAAKjB,iBAAnC;AACA,UAAM,CAACkB,iBAAD,IAAsB,KAAKvB,YAAL,CAAkBwB,UAAlB,CAA6B;AACvDC,MAAAA,EAAE,EAAE,gBADmD;AACjC;AACtBd,MAAAA,OAAO,EAAE,MAAM,CAAE,CAFsC;AAGvDe,MAAAA,WAAW,EAAE,uBAH0C;AAIvDC,MAAAA,UAAU,EAAE;AAJ2C,KAA7B,CAA5B;AAMA,SAAKJ,iBAAL,GAAyBA,iBAAzB;AAEA,WAAO;AACLK,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,QAAQ,eACN,+BAAC,gBAAD;AACE,UAAA,QAAQ,EAAE,KAAKnC,QADjB;AAEE,UAAA,SAAS,EAAE,KAAKF,SAFlB;AAGE,UAAA,OAAO,eAAE,oCAAM,OAAN,CAAc,MAAd;AAAqB,YAAA,QAAQ,EAAE,KAAKM;AAApC,YAHX;AAIE,UAAA,WAAW,EAAE,IAJf;AAKE,UAAA,sBAAsB,EAAE,KAAKwB;AAL/B;AAHJ,OADM;AADH,KAAP;AAgBD;;AAqCoB,eAARQ,QAAQ,CACnB,CAACC,EAAD,EAAKtC,WAAL,EAAkBG,OAAlB,EAA2BoC,aAA3B,EAA0CjC,YAA1C,EAAwDC,aAAxD,EAAuEiC,OAAvE,CADmB,EAUnBC,MAVmB,EAWnB,CAAC1C,SAAD,EAAYE,QAAZ,EAAsBC,YAAtB,EAAoCE,WAApC,EAAiDC,eAAjD,CAXmB,EAkBnB;AACAkC,IAAAA,aAAa,CAACG,gBAAd,CAA+B,KAAIC,qCAAJ,GAA/B;AACAvC,IAAAA,WAAW,CAACK,QAAZ,CAAqB,KAAIkC,qCAAJ,GAArB;AACAH,IAAAA,OAAO,CAACI,uBAAR,CAAgC,KAAID,qCAAJ,IAA0BE,MAA1D;AAEA,UAAMC,WAAW,GAAG,IAAIjD,WAAJ,CAClBE,SADkB,EAElBC,WAFkB,EAGlBC,QAHkB,EAIlBC,YAJkB,EAKlBC,OALkB,EAMlBC,WANkB,EAOlBC,eAPkB,EAQlBC,YARkB,EASlBC,aATkB,CAApB;AAWA+B,IAAAA,EAAE,CAACS,YAAH,CAAgBD,WAAW,CAACrB,MAAZ,CAAmBuB,IAAnB,CAAwBF,WAAxB,CAAhB;AACAA,IAAAA,WAAW,CAACG,gBAAZ,CAA6BH,WAAW,CAACtC,SAAzC;AAEAsC,IAAAA,WAAW,CAACI,mBAAZ,CAAgC,mBAC9B,+BAAC,oCAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAA6B,MAAA,IAAI,EAAC;AAAlC,iBADF;AAMAJ,IAAAA,WAAW,CAAC7C,QAAZ,CAAqBQ,QAArB,CAA8B,CAC5B;AACE0C,MAAAA,KAAK,EAAE,IADT;AAEEhB,MAAAA,IAAI,EAAE,GAFR;AAGEC,MAAAA,QAAQ,eAAE,+BAAC,sBAAD;AAAM,QAAA,YAAY,EAAEU,WAAW,CAAC5C;AAAhC;AAHZ,KAD4B,EAM5B;AACEiC,MAAAA,IAAI,EAAEW,WAAW,CAAC9C,WAAZ,CAAwBoD,SADhC;AAEEhB,MAAAA,QAAQ,EAAEU,WAAW,CAAC9C,WAAZ,CAAwBqD,OAAxB,CAAgCC,6BAAgBvB,EAAhD;AAFZ,KAN4B,CAA9B;AAYAe,IAAAA,WAAW,CAAC/C,SAAZ,CAAsBU,QAAtB,CAA+B;AAC7B0B,MAAAA,IAAI,EAAEW,WAAW,CAAC9C,WAAZ,CAAwBoD,SADD;AAE7BhB,MAAAA,QAAQ,EAAEU,WAAW,CAAC9C,WAAZ,CAAwBuD,cAAxB,CAAuCD,6BAAgBvB,EAAvD;AAFmB,KAA/B;AAIA,WAAOe,WAAP;AACD;;AA5LsB;;;gCAAZjD,W,kBA4GW,CACpB2D,cADoB,EAEpBC,4BAFoB,EAGpBC,kBAHoB,EAIpBC,oCAJoB,EAKpBC,qBALoB,EAMpBC,sBANoB,EAOpBC,oBAPoB,C;gCA5GXjE,W,aAsHMkE,e;gCAtHNlE,W,WAwHI,CACbmE,gBAAKC,QAAL,EADa,EAEbD,gBAAKC,QAAL,EAFa,EAGbD,gBAAKC,QAAL,EAHa,EAIbD,gBAAKC,QAAL,EAJa,EAKbD,gBAAKC,QAAL,EALa,C;eAuEFpE,W;;;AAEfyD,6BAAgBY,UAAhB,CAA2BrE,WAA3B","sourcesContent":["import { ComponentAspect, ComponentUI, ComponentModel } from '@teambit/component';\nimport { ComponentTreeAspect, ComponentTreeUI, ComponentTreeNode } from '@teambit/component-tree';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport ReactRouterAspect, { ReactRouterUI } from '@teambit/react-router';\nimport { RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';\nimport { Menu } from '@teambit/ui-foundation.ui.menu';\nimport SidebarAspect, { SidebarUI, SidebarItem, SidebarItemSlot } from '@teambit/sidebar';\nimport { MenuItemSlot, MenuItem } from '@teambit/ui-foundation.ui.main-dropdown';\nimport { UIAspect, UIRootUI as UIRoot, UIRuntime, UiUI } from '@teambit/ui';\nimport { GraphAspect, GraphUI } from '@teambit/graph';\nimport React from 'react';\nimport { RouteProps } from 'react-router-dom';\nimport CommandBarAspect, { CommandBarUI, ComponentSearcher, CommandHandler } from '@teambit/command-bar';\nimport { MenuLinkItem } from '@teambit/design.ui.surfaces.menu.link-item';\nimport { WorkspaceComponentsDrawer } from './ui/workspace-components-drawer';\nimport { ComponentTreeWidget } from './component-tree.widget';\nimport { Workspace } from './ui';\nimport { WorkspaceAspect } from './workspace.aspect';\n\nexport type SidebarWidgetSlot = SlotRegistry<ComponentTreeNode>;\n\nexport class WorkspaceUI {\n  constructor(\n    /**\n     * route slot.\n     */\n    private routeSlot: RouteSlot,\n\n    /**\n     * component ui extension.\n     */\n    private componentUi: ComponentUI,\n\n    /**\n     * menu slot\n     */\n    private menuSlot: RouteSlot,\n\n    private menuItemSlot: MenuItemSlot,\n\n    private sidebar: SidebarUI,\n\n    private sidebarSlot: SidebarWidgetSlot,\n\n    /**\n     * sidebar link slot\n     */\n    private sidebarItemSlot: SidebarItemSlot,\n\n    private commandBarUI: CommandBarUI,\n\n    reactRouterUI: ReactRouterUI\n  ) {\n    this.componentSearcher = new ComponentSearcher(reactRouterUI.navigateTo);\n  }\n\n  private setKeyBindHandler: (updated: CommandHandler) => void = () => {};\n\n  /**\n   * register a route to the workspace.\n   */\n  registerRoute(route: RouteProps) {\n    this.routeSlot.register(route);\n    return this;\n  }\n\n  registerSidebarWidget(componentTreeNode: ComponentTreeNode) {\n    this.sidebarSlot.register(componentTreeNode);\n    return this;\n  }\n\n  registerMenuItem = (menuItems: MenuItem[]) => {\n    this.menuItemSlot.register(menuItems);\n  };\n\n  setComponents = (components: ComponentModel[]) => {\n    this.componentSearcher.update(components);\n  };\n\n  registerSidebarLink = (...links: SidebarItem[]) => {\n    this.sidebarItemSlot.register(links);\n  };\n\n  componentSearcher: ComponentSearcher;\n\n  uiRoot(): UIRoot {\n    this.sidebar.registerDrawer(new WorkspaceComponentsDrawer(this.sidebarSlot));\n    this.commandBarUI.addSearcher(this.componentSearcher);\n    const [setKeyBindHandler] = this.commandBarUI.addCommand({\n      id: 'sidebar.toggle', // TODO - extract to a component!\n      handler: () => {},\n      displayName: 'Toggle component list',\n      keybinding: 'alt+s',\n    });\n    this.setKeyBindHandler = setKeyBindHandler;\n\n    return {\n      routes: [\n        {\n          path: '/',\n          children: (\n            <Workspace\n              menuSlot={this.menuSlot}\n              routeSlot={this.routeSlot}\n              sidebar={<this.sidebar.render itemSlot={this.sidebarItemSlot} />}\n              workspaceUI={this}\n              onSidebarTogglerChange={this.setKeyBindHandler}\n            />\n          ),\n        },\n      ],\n    };\n  }\n\n  private menuItems: MenuItem[] = [\n    {\n      category: 'general',\n      title: 'Open command bar',\n      keyChar: 'mod+k',\n      handler: () => this.commandBarUI?.run('command-bar.open'),\n    },\n    {\n      category: 'general',\n      title: 'Toggle component list',\n      keyChar: 'alt+s',\n      handler: () => this.commandBarUI?.run('sidebar.toggle'),\n    },\n  ];\n\n  static dependencies = [\n    UIAspect,\n    ComponentAspect,\n    SidebarAspect,\n    ComponentTreeAspect,\n    CommandBarAspect,\n    ReactRouterAspect,\n    GraphAspect,\n  ];\n\n  static runtime = UIRuntime;\n\n  static slots = [\n    Slot.withType<RouteProps>(),\n    Slot.withType<RouteProps>(),\n    Slot.withType<ComponentTreeNode>(),\n    Slot.withType<MenuItemSlot>(),\n    Slot.withType<SidebarItemSlot>(),\n  ];\n\n  static async provider(\n    [ui, componentUi, sidebar, componentTree, commandBarUI, reactRouterUI, graphUI]: [\n      UiUI,\n      ComponentUI,\n      SidebarUI,\n      ComponentTreeUI,\n      CommandBarUI,\n      ReactRouterUI,\n      GraphUI\n    ],\n    config,\n    [routeSlot, menuSlot, menuItemSlot, sidebarSlot, sidebarItemSlot]: [\n      RouteSlot,\n      RouteSlot,\n      MenuItemSlot,\n      SidebarWidgetSlot,\n      SidebarItemSlot\n    ]\n  ) {\n    componentTree.registerTreeNode(new ComponentTreeWidget());\n    sidebarSlot.register(new ComponentTreeWidget());\n    graphUI.registerComponentWidget(new ComponentTreeWidget().widget);\n\n    const workspaceUI = new WorkspaceUI(\n      routeSlot,\n      componentUi,\n      menuSlot,\n      menuItemSlot,\n      sidebar,\n      sidebarSlot,\n      sidebarItemSlot,\n      commandBarUI,\n      reactRouterUI\n    );\n    ui.registerRoot(workspaceUI.uiRoot.bind(workspaceUI));\n    workspaceUI.registerMenuItem(workspaceUI.menuItems);\n\n    workspaceUI.registerSidebarLink(() => (\n      <MenuLinkItem exact href=\"/\" icon=\"comps\">\n        Gallery\n      </MenuLinkItem>\n    ));\n\n    workspaceUI.menuSlot.register([\n      {\n        exact: true,\n        path: '/',\n        children: <Menu menuItemSlot={workspaceUI.menuItemSlot} />,\n      },\n      {\n        path: workspaceUI.componentUi.routePath,\n        children: workspaceUI.componentUi.getMenu(WorkspaceAspect.id),\n      },\n    ]);\n\n    workspaceUI.routeSlot.register({\n      path: workspaceUI.componentUi.routePath,\n      children: workspaceUI.componentUi.getComponentUI(WorkspaceAspect.id),\n    });\n    return workspaceUI;\n  }\n}\n\nexport default WorkspaceUI;\n\nWorkspaceAspect.addRuntime(WorkspaceUI);\n"]}