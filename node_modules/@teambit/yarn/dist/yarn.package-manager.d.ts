import { WorkspacePolicy, DependencyResolverMain, PackageManager, PackageManagerInstallOptions, PackageManagerResolveRemoteVersionOptions, ResolvedPackageVersion } from '@teambit/dependency-resolver';
import { ComponentMap } from '@teambit/component';
import { PkgMain } from '@teambit/pkg';
import { Logger } from '@teambit/logger';
export declare class YarnPackageManager implements PackageManager {
    private depResolver;
    private pkg;
    private logger;
    constructor(depResolver: DependencyResolverMain, pkg: PkgMain, logger: Logger);
    install(rootDir: string, rootPolicy: WorkspacePolicy, componentDirectoryMap: ComponentMap<string>, installOptions?: PackageManagerInstallOptions): Promise<void>;
    private getPackageJsonPath;
    private backupPackageJsons;
    private restorePackageJsons;
    private getFileToBackup;
    private getComponentPackageJsonToBackup;
    private createWorkspace;
    private overrideInternalWorkspaceParams;
    private setupWorkspaces;
    private getScopedRegistries;
    private getAuthProp;
    private getCacheFolder;
    private computeConfiguration;
    private computeComponents;
    private computeDeps;
    resolveRemoteVersion(packageName: string, options: PackageManagerResolveRemoteVersionOptions): Promise<ResolvedPackageVersion>;
}
